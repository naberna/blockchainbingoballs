{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.doHash = exports.applyInner = exports.applyLeaf = void 0;\n\nconst ripemd160_1 = require(\"@noble/hashes/ripemd160\");\n\nconst sha256_1 = require(\"@noble/hashes/sha256\");\n\nconst sha512_1 = require(\"@noble/hashes/sha512\");\n\nconst codecimpl_1 = require(\"./generated/codecimpl\");\n\nfunction applyLeaf(leaf, key, value) {\n  if (key.length === 0) {\n    throw new Error(\"Missing key\");\n  }\n\n  if (value.length === 0) {\n    throw new Error(\"Missing value\");\n  }\n\n  const pkey = prepareLeafData(ensureHash(leaf.prehashKey), ensureLength(leaf.length), key);\n  const pvalue = prepareLeafData(ensureHash(leaf.prehashValue), ensureLength(leaf.length), value);\n  const data = new Uint8Array([...ensureBytes(leaf.prefix), ...pkey, ...pvalue]);\n  return doHash(ensureHash(leaf.hash), data);\n}\n\nexports.applyLeaf = applyLeaf;\n\nfunction applyInner(inner, child) {\n  if (child.length === 0) {\n    throw new Error(\"Inner op needs child value\");\n  }\n\n  const preimage = new Uint8Array([...ensureBytes(inner.prefix), ...child, ...ensureBytes(inner.suffix)]);\n  return doHash(ensureHash(inner.hash), preimage);\n}\n\nexports.applyInner = applyInner;\n\nfunction ensure(maybe, value) {\n  return maybe === undefined || maybe === null ? value : maybe;\n}\n\nconst ensureHash = h => ensure(h, codecimpl_1.ics23.HashOp.NO_HASH);\n\nconst ensureLength = l => ensure(l, codecimpl_1.ics23.LengthOp.NO_PREFIX);\n\nconst ensureBytes = b => ensure(b, new Uint8Array([]));\n\nfunction prepareLeafData(hashOp, lengthOp, data) {\n  const h = doHashOrNoop(hashOp, data);\n  return doLengthOp(lengthOp, h);\n} // doHashOrNoop will return the preimage untouched if hashOp == NONE,\n// otherwise, perform doHash\n\n\nfunction doHashOrNoop(hashOp, preimage) {\n  if (hashOp === codecimpl_1.ics23.HashOp.NO_HASH) {\n    return preimage;\n  }\n\n  return doHash(hashOp, preimage);\n} // doHash will preform the specified hash on the preimage.\n// if hashOp == NONE, it will return an error (use doHashOrNoop if you want different behavior)\n\n\nfunction doHash(hashOp, preimage) {\n  switch (hashOp) {\n    case codecimpl_1.ics23.HashOp.SHA256:\n      return (0, sha256_1.sha256)(preimage);\n\n    case codecimpl_1.ics23.HashOp.SHA512:\n      return (0, sha512_1.sha512)(preimage);\n\n    case codecimpl_1.ics23.HashOp.RIPEMD160:\n      return (0, ripemd160_1.ripemd160)(preimage);\n\n    case codecimpl_1.ics23.HashOp.BITCOIN:\n      return (0, ripemd160_1.ripemd160)((0, sha256_1.sha256)(preimage));\n\n    case codecimpl_1.ics23.HashOp.SHA512_256:\n      return (0, sha512_1.sha512_256)(preimage);\n  }\n\n  throw new Error(`Unsupported hashop: ${hashOp}`);\n}\n\nexports.doHash = doHash; // doLengthOp will calculate the proper prefix and return it prepended\n//   doLengthOp(op, data) -> length(data) || data\n\nfunction doLengthOp(lengthOp, data) {\n  switch (lengthOp) {\n    case codecimpl_1.ics23.LengthOp.NO_PREFIX:\n      return data;\n\n    case codecimpl_1.ics23.LengthOp.VAR_PROTO:\n      return new Uint8Array([...encodeVarintProto(data.length), ...data]);\n\n    case codecimpl_1.ics23.LengthOp.REQUIRE_32_BYTES:\n      if (data.length !== 32) {\n        throw new Error(`Length is ${data.length}, not 32 bytes`);\n      }\n\n      return data;\n\n    case codecimpl_1.ics23.LengthOp.REQUIRE_64_BYTES:\n      if (data.length !== 64) {\n        throw new Error(`Length is ${data.length}, not 64 bytes`);\n      }\n\n      return data;\n\n    case codecimpl_1.ics23.LengthOp.FIXED32_LITTLE:\n      return new Uint8Array([...encodeFixed32Le(data.length), ...data]);\n    // TODO\n    // case LengthOp_VAR_RLP:\n    // case LengthOp_FIXED32_BIG:\n    // case LengthOp_FIXED64_BIG:\n    // case LengthOp_FIXED64_LITTLE:\n  }\n\n  throw new Error(`Unsupported lengthop: ${lengthOp}`);\n}\n\nfunction encodeVarintProto(n) {\n  let enc = [];\n  let l = n;\n\n  while (l >= 128) {\n    const b = l % 128 + 128;\n    enc = [...enc, b];\n    l = l / 128;\n  }\n\n  enc = [...enc, l];\n  return new Uint8Array(enc);\n}\n\nfunction encodeFixed32Le(n) {\n  const enc = new Uint8Array(4);\n  let l = n;\n\n  for (let i = enc.length; i > 0; i--) {\n    enc[Math.abs(i - enc.length)] = l % 256;\n    l = Math.floor(l / 256);\n  }\n\n  return enc;\n}","map":{"version":3,"mappings":"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","names":["applyLeaf","leaf","key","value","length","Error","pkey","prepareLeafData","ensureHash","prehashKey","ensureLength","pvalue","prehashValue","data","Uint8Array","ensureBytes","prefix","doHash","hash","exports","applyInner","inner","child","preimage","suffix","ensure","maybe","undefined","h","codecimpl_1","HashOp","NO_HASH","l","LengthOp","NO_PREFIX","b","hashOp","lengthOp","doHashOrNoop","doLengthOp","SHA256","SHA512","RIPEMD160","BITCOIN","SHA512_256","VAR_PROTO","encodeVarintProto","REQUIRE_32_BYTES","REQUIRE_64_BYTES","FIXED32_LITTLE","encodeFixed32Le","n","enc","i","Math","abs","floor"],"sourceRoot":"","sources":["../src/ops.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}