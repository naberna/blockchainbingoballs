{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tendermint34Client = void 0;\n\nconst jsonrpc_1 = require(\"../jsonrpc\");\n\nconst rpcclients_1 = require(\"../rpcclients\");\n\nconst adaptor_1 = require(\"./adaptor\");\n\nconst requests = __importStar(require(\"./requests\"));\n\nclass Tendermint34Client {\n  /**\n   * Use `Tendermint34Client.connect` or `Tendermint34Client.create` to create an instance.\n   */\n  constructor(client) {\n    this.client = client;\n    this.p = adaptor_1.adaptor34.params;\n    this.r = adaptor_1.adaptor34.responses;\n  }\n  /**\n   * Creates a new Tendermint client for the given endpoint.\n   *\n   * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.\n   */\n\n\n  static async connect(endpoint) {\n    if (typeof endpoint === \"object\") {\n      return Tendermint34Client.create(new rpcclients_1.HttpClient(endpoint));\n    } else {\n      const useHttp = endpoint.startsWith(\"http://\") || endpoint.startsWith(\"https://\");\n      const rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);\n      return Tendermint34Client.create(rpcClient);\n    }\n  }\n  /**\n   * Creates a new Tendermint client given an RPC client.\n   */\n\n\n  static async create(rpcClient) {\n    // For some very strange reason I don't understand, tests start to fail on some systems\n    // (our CI) when skipping the status call before doing other queries. Sleeping a little\n    // while did not help. Thus we query the version as a way to say \"hi\" to the backend,\n    // even in cases where we don't use the result.\n    const _version = await this.detectVersion(rpcClient);\n\n    return new Tendermint34Client(rpcClient);\n  }\n\n  static async detectVersion(client) {\n    const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);\n    const response = await client.execute(req);\n    const result = response.result;\n\n    if (!result || !result.node_info) {\n      throw new Error(\"Unrecognized format for status response\");\n    }\n\n    const version = result.node_info.version;\n\n    if (typeof version !== \"string\") {\n      throw new Error(\"Unrecognized version format: must be string\");\n    }\n\n    return version;\n  }\n\n  disconnect() {\n    this.client.disconnect();\n  }\n\n  async abciInfo() {\n    const query = {\n      method: requests.Method.AbciInfo\n    };\n    return this.doCall(query, this.p.encodeAbciInfo, this.r.decodeAbciInfo);\n  }\n\n  async abciQuery(params) {\n    const query = {\n      params: params,\n      method: requests.Method.AbciQuery\n    };\n    return this.doCall(query, this.p.encodeAbciQuery, this.r.decodeAbciQuery);\n  }\n\n  async block(height) {\n    const query = {\n      method: requests.Method.Block,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeBlock, this.r.decodeBlock);\n  }\n\n  async blockResults(height) {\n    const query = {\n      method: requests.Method.BlockResults,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeBlockResults, this.r.decodeBlockResults);\n  }\n  /**\n   * Search for events that are in a block.\n   *\n   * NOTE\n   * This method will error on any node that is running a Tendermint version lower than 0.34.9.\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/block_search\n   */\n\n\n  async blockSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BlockSearch\n    };\n    const resp = await this.doCall(query, this.p.encodeBlockSearch, this.r.decodeBlockSearch);\n    return { ...resp,\n      // make sure we sort by height, as tendermint may be sorting by string value of the height\n      blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height)\n    };\n  } // this should paginate through all blockSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n  //\n  // NOTE\n  // This method will error on any node that is running a Tendermint version lower than 0.34.9.\n\n\n  async blockSearchAll(params) {\n    let page = params.page || 1;\n    const blocks = [];\n    let done = false;\n\n    while (!done) {\n      const resp = await this.blockSearch({ ...params,\n        page: page\n      });\n      blocks.push(...resp.blocks);\n\n      if (blocks.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    } // make sure we sort by height, as tendermint may be sorting by string value of the height\n    // and the earlier items may be in a higher page than the later items\n\n\n    blocks.sort((a, b) => a.block.header.height - b.block.header.height);\n    return {\n      totalCount: blocks.length,\n      blocks: blocks\n    };\n  }\n  /**\n   * Queries block headers filtered by minHeight <= height <= maxHeight.\n   *\n   * @param minHeight The minimum height to be included in the result. Defaults to 0.\n   * @param maxHeight The maximum height to be included in the result. Defaults to infinity.\n   */\n\n\n  async blockchain(minHeight, maxHeight) {\n    const query = {\n      method: requests.Method.Blockchain,\n      params: {\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      }\n    };\n    return this.doCall(query, this.p.encodeBlockchain, this.r.decodeBlockchain);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for response\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync\n   */\n\n\n  async broadcastTxSync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxSync\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxSync);\n  }\n  /**\n   * Broadcast transaction to mempool and do not wait for result\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async\n   */\n\n\n  async broadcastTxAsync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxAsync\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxAsync);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit\n   */\n\n\n  async broadcastTxCommit(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxCommit\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxCommit);\n  }\n\n  async commit(height) {\n    const query = {\n      method: requests.Method.Commit,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeCommit, this.r.decodeCommit);\n  }\n\n  async genesis() {\n    const query = {\n      method: requests.Method.Genesis\n    };\n    return this.doCall(query, this.p.encodeGenesis, this.r.decodeGenesis);\n  }\n\n  async health() {\n    const query = {\n      method: requests.Method.Health\n    };\n    return this.doCall(query, this.p.encodeHealth, this.r.decodeHealth);\n  }\n\n  async numUnconfirmedTxs() {\n    const query = {\n      method: requests.Method.NumUnconfirmedTxs\n    };\n    return this.doCall(query, this.p.encodeNumUnconfirmedTxs, this.r.decodeNumUnconfirmedTxs);\n  }\n\n  async status() {\n    const query = {\n      method: requests.Method.Status\n    };\n    return this.doCall(query, this.p.encodeStatus, this.r.decodeStatus);\n  }\n\n  subscribeNewBlock() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlock\n      }\n    };\n    return this.subscribe(request, this.r.decodeNewBlockEvent);\n  }\n\n  subscribeNewBlockHeader() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlockHeader\n      }\n    };\n    return this.subscribe(request, this.r.decodeNewBlockHeaderEvent);\n  }\n\n  subscribeTx(query) {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.Tx,\n        raw: query\n      }\n    };\n    return this.subscribe(request, this.r.decodeTxEvent);\n  }\n  /**\n   * Get a single transaction by hash\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx\n   */\n\n\n  async tx(params) {\n    const query = {\n      params: params,\n      method: requests.Method.Tx\n    };\n    return this.doCall(query, this.p.encodeTx, this.r.decodeTx);\n  }\n  /**\n   * Search for transactions that are in a block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search\n   */\n\n\n  async txSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.TxSearch\n    };\n    return this.doCall(query, this.p.encodeTxSearch, this.r.decodeTxSearch);\n  } // this should paginate through all txSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n\n\n  async txSearchAll(params) {\n    let page = params.page || 1;\n    const txs = [];\n    let done = false;\n\n    while (!done) {\n      const resp = await this.txSearch({ ...params,\n        page: page\n      });\n      txs.push(...resp.txs);\n\n      if (txs.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n\n    return {\n      totalCount: txs.length,\n      txs: txs\n    };\n  }\n\n  async validators(params) {\n    const query = {\n      method: requests.Method.Validators,\n      params: params\n    };\n    return this.doCall(query, this.p.encodeValidators, this.r.decodeValidators);\n  }\n\n  async validatorsAll(height) {\n    const validators = [];\n    let page = 1;\n    let done = false;\n    let blockHeight = height;\n\n    while (!done) {\n      const response = await this.validators({\n        per_page: 50,\n        height: blockHeight,\n        page: page\n      });\n      validators.push(...response.validators);\n      blockHeight = blockHeight || response.blockHeight;\n\n      if (validators.length < response.total) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n\n    return {\n      // NOTE: Default value is for type safety but this should always be set\n      blockHeight: blockHeight !== null && blockHeight !== void 0 ? blockHeight : 0,\n      count: validators.length,\n      total: validators.length,\n      validators: validators\n    };\n  } // doCall is a helper to handle the encode/call/decode logic\n\n\n  async doCall(request, encode, decode) {\n    const req = encode(request);\n    const result = await this.client.execute(req);\n    return decode(result);\n  }\n\n  subscribe(request, decode) {\n    if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {\n      throw new Error(\"This RPC client type cannot subscribe to events\");\n    }\n\n    const req = this.p.encodeSubscribe(request);\n    const eventStream = this.client.listen(req);\n    return eventStream.map(event => {\n      return decode(event);\n    });\n  }\n\n}\n\nexports.Tendermint34Client = Tendermint34Client;","map":{"version":3,"mappings":"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","names":["Tendermint34Client","constructor","client","p","adaptor_1","params","r","responses","connect","endpoint","create","rpcclients_1","useHttp","startsWith","rpcClient","_version","detectVersion","req","requests","Method","Status","response","execute","result","node_info","Error","version","disconnect","abciInfo","query","method","AbciInfo","doCall","encodeAbciInfo","decodeAbciInfo","abciQuery","AbciQuery","encodeAbciQuery","decodeAbciQuery","block","height","Block","encodeBlock","decodeBlock","blockResults","BlockResults","encodeBlockResults","decodeBlockResults","blockSearch","BlockSearch","resp","encodeBlockSearch","decodeBlockSearch","blocks","sort","a","b","header","blockSearchAll","page","done","push","length","totalCount","blockchain","minHeight","maxHeight","Blockchain","encodeBlockchain","decodeBlockchain","broadcastTxSync","BroadcastTxSync","encodeBroadcastTx","decodeBroadcastTxSync","broadcastTxAsync","BroadcastTxAsync","decodeBroadcastTxAsync","broadcastTxCommit","BroadcastTxCommit","decodeBroadcastTxCommit","commit","Commit","encodeCommit","decodeCommit","genesis","Genesis","encodeGenesis","decodeGenesis","health","Health","encodeHealth","decodeHealth","numUnconfirmedTxs","NumUnconfirmedTxs","encodeNumUnconfirmedTxs","decodeNumUnconfirmedTxs","status","encodeStatus","decodeStatus","subscribeNewBlock","request","Subscribe","type","SubscriptionEventType","NewBlock","subscribe","decodeNewBlockEvent","subscribeNewBlockHeader","NewBlockHeader","decodeNewBlockHeaderEvent","subscribeTx","Tx","raw","decodeTxEvent","tx","encodeTx","decodeTx","txSearch","TxSearch","encodeTxSearch","decodeTxSearch","txSearchAll","txs","validators","Validators","encodeValidators","decodeValidators","validatorsAll","blockHeight","per_page","total","count","encode","decode","encodeSubscribe","eventStream","listen","map","event","exports"],"sourceRoot":"","sources":["../../src/tendermint34/tendermint34client.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}