{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseCoins = void 0;\n\nconst math_1 = require(\"@cosmjs/math\");\n/**\n * Takes a coins list like \"819966000ucosm,700000000ustake\" and parses it.\n *\n * This is a Stargate ready version of parseCoins from @cosmjs/amino.\n * It supports more denoms.\n */\n\n\nfunction parseCoins(input) {\n  return input.replace(/\\s/g, \"\").split(\",\").filter(Boolean).map(part => {\n    // Denom regex from Stargate (https://github.com/cosmos/cosmos-sdk/blob/v0.42.7/types/coin.go#L599-L601)\n    const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);\n    if (!match) throw new Error(\"Got an invalid coin string\");\n    return {\n      amount: math_1.Uint64.fromString(match[1]).toString(),\n      denom: match[2]\n    };\n  });\n}\n\nexports.parseCoins = parseCoins;","map":{"version":3,"mappings":";;;;;;;AACA;AAEA;;;;;;;;AAMA,SAAgBA,UAAhB,CAA2BC,KAA3B,EAAwC;EACtC,OAAOA,KAAK,CACTC,OADI,CACI,KADJ,EACW,EADX,EAEJC,KAFI,CAEE,GAFF,EAGJC,MAHI,CAGGC,OAHH,EAIJC,GAJI,CAICC,IAAD,IAAS;IACZ;IACA,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAW,yCAAX,CAAd;IACA,IAAI,CAACA,KAAL,EAAY,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;IACZ,OAAO;MACLC,MAAM,EAAEC,cAAOC,UAAP,CAAkBJ,KAAK,CAAC,CAAD,CAAvB,EAA4BK,QAA5B,EADH;MAELC,KAAK,EAAEN,KAAK,CAAC,CAAD;IAFP,CAAP;EAID,CAZI,CAAP;AAaD;;AAdDO","names":["parseCoins","input","replace","split","filter","Boolean","map","part","match","Error","amount","math_1","fromString","toString","denom","exports"],"sourceRoot":"","sources":["../src/coins.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}