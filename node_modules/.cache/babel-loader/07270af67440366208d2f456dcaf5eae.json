{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hmac = void 0;\n\nclass Hmac {\n  constructor(hashFunctionConstructor, originalKey) {\n    // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation\n    // with the addition of incremental hashing support. Thus part of the algorithm\n    // is in the constructor and the rest in digest().\n    const blockSize = new hashFunctionConstructor().blockSize;\n\n    this.hash = data => new hashFunctionConstructor().update(data).digest();\n\n    let key = originalKey;\n\n    if (key.length > blockSize) {\n      key = this.hash(key);\n    }\n\n    if (key.length < blockSize) {\n      const zeroPadding = new Uint8Array(blockSize - key.length);\n      key = new Uint8Array([...key, ...zeroPadding]);\n    } // eslint-disable-next-line no-bitwise\n\n\n    this.oKeyPad = key.map(keyByte => keyByte ^ 0x5c); // eslint-disable-next-line no-bitwise\n\n    this.iKeyPad = key.map(keyByte => keyByte ^ 0x36);\n    this.messageHasher = new hashFunctionConstructor();\n    this.blockSize = blockSize;\n    this.update(this.iKeyPad);\n  }\n\n  update(data) {\n    this.messageHasher.update(data);\n    return this;\n  }\n\n  digest() {\n    const innerHash = this.messageHasher.digest();\n    return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));\n  }\n\n}\n\nexports.Hmac = Hmac;","map":{"version":3,"mappings":";;;;;;;AAEA,MAAaA,IAAb,CAAiB;EAQfC,YAAmBC,uBAAnB,EAAyDC,WAAzD,EAAgF;IAC9E;IACA;IACA;IAEA,MAAMC,SAAS,GAAG,IAAIF,uBAAJ,GAA8BE,SAAhD;;IAEA,KAAKC,IAAL,GAAaC,IAAD,IAAU,IAAIJ,uBAAJ,GAA8BK,MAA9B,CAAqCD,IAArC,EAA2CE,MAA3C,EAAtB;;IAEA,IAAIC,GAAG,GAAGN,WAAV;;IACA,IAAIM,GAAG,CAACC,MAAJ,GAAaN,SAAjB,EAA4B;MAC1BK,GAAG,GAAG,KAAKJ,IAAL,CAAUI,GAAV,CAAN;IACD;;IAED,IAAIA,GAAG,CAACC,MAAJ,GAAaN,SAAjB,EAA4B;MAC1B,MAAMO,WAAW,GAAG,IAAIC,UAAJ,CAAeR,SAAS,GAAGK,GAAG,CAACC,MAA/B,CAApB;MACAD,GAAG,GAAG,IAAIG,UAAJ,CAAe,CAAC,GAAGH,GAAJ,EAAS,GAAGE,WAAZ,CAAf,CAAN;IACD,CAjB6E,CAmB9E;;;IACA,KAAKE,OAAL,GAAeJ,GAAG,CAACK,GAAJ,CAASC,OAAD,IAAaA,OAAO,GAAG,IAA/B,CAAf,CApB8E,CAqB9E;;IACA,KAAKC,OAAL,GAAeP,GAAG,CAACK,GAAJ,CAASC,OAAD,IAAaA,OAAO,GAAG,IAA/B,CAAf;IACA,KAAKE,aAAL,GAAqB,IAAIf,uBAAJ,EAArB;IACA,KAAKE,SAAL,GAAiBA,SAAjB;IAEA,KAAKG,MAAL,CAAY,KAAKS,OAAjB;EACD;;EAEMT,MAAM,CAACD,IAAD,EAAiB;IAC5B,KAAKW,aAAL,CAAmBV,MAAnB,CAA0BD,IAA1B;IACA,OAAO,IAAP;EACD;;EAEME,MAAM;IACX,MAAMU,SAAS,GAAG,KAAKD,aAAL,CAAmBT,MAAnB,EAAlB;IACA,OAAO,KAAKH,IAAL,CAAU,IAAIO,UAAJ,CAAe,CAAC,GAAG,KAAKC,OAAT,EAAkB,GAAGK,SAArB,CAAf,CAAV,CAAP;EACD;;AA7Cc;;AAAjBC","names":["Hmac","constructor","hashFunctionConstructor","originalKey","blockSize","hash","data","update","digest","key","length","zeroPadding","Uint8Array","oKeyPad","map","keyByte","iKeyPad","messageHasher","innerHash","exports"],"sourceRoot":"","sources":["../src/hmac.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}