{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bytesBefore = exports.ensureBytesBefore = exports.bytesEqual = exports.ensureBytesEqual = exports.ensureInner = exports.ensureLeaf = void 0;\n\nfunction ensureLeaf(leaf, spec) {\n  if (leaf.hash !== spec.hash) {\n    throw new Error(`Unexpected hashOp: ${leaf.hash}`);\n  }\n\n  if (leaf.prehashKey !== spec.prehashKey) {\n    throw new Error(`Unexpected prehashKey: ${leaf.prehashKey}`);\n  }\n\n  if (leaf.prehashValue !== spec.prehashValue) {\n    throw new Error(`Unexpected prehashValue: ${leaf.prehashValue}`);\n  }\n\n  if (leaf.length !== spec.length) {\n    throw new Error(`Unexpected length op: ${leaf.length}`);\n  }\n\n  ensurePrefix(leaf.prefix, spec.prefix);\n}\n\nexports.ensureLeaf = ensureLeaf;\n\nfunction ensureInner(inner, prefix, spec) {\n  if (inner.hash !== spec.hash) {\n    throw new Error(`Unexpected hashOp: ${inner.hash}`);\n  }\n\n  if (!inner.prefix) {\n    throw new Error(\"No prefix set for inner node\");\n  }\n\n  if (hasPrefix(inner.prefix, prefix)) {\n    throw new Error(`Inner node has leaf prefix`);\n  }\n\n  if (inner.prefix.length < (spec.minPrefixLength || 0)) {\n    throw new Error(`Prefix too short: ${inner.prefix.length} bytes`);\n  }\n\n  const maxLeftChildBytes = (spec.childOrder.length - 1) * spec.childSize;\n\n  if (inner.prefix.length > (spec.maxPrefixLength || 0) + maxLeftChildBytes) {\n    throw new Error(`Prefix too long: ${inner.prefix.length} bytes`);\n  }\n}\n\nexports.ensureInner = ensureInner;\n\nfunction ensurePrefix(check, prefix) {\n  // no prefix supplied, means everything passes\n  if (!prefix || prefix.length === 0) {\n    return;\n  }\n\n  if (!check) {\n    throw new Error(`Target bytes missing`);\n  }\n\n  ensureBytesEqual(prefix, check.slice(0, prefix.length));\n} // ensureBytesEqual throws an error if the arrays are different\n\n\nfunction ensureBytesEqual(a, b) {\n  if (a.length !== b.length) {\n    throw new Error(`Different lengths ${a.length} vs ${b.length}`);\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      throw new Error(`Arrays differ at index ${i}: ${a[i]} vs ${b[i]}`);\n    }\n  }\n}\n\nexports.ensureBytesEqual = ensureBytesEqual;\n\nfunction bytesEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.bytesEqual = bytesEqual;\n\nfunction hasPrefix(check, prefix) {\n  // no prefix supplied, means everything passes\n  if (!prefix || prefix.length === 0) {\n    return false;\n  }\n\n  if (!check) {\n    return false;\n  }\n\n  if (check.length <= prefix.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prefix.length; i++) {\n    if (check[i] !== prefix[i]) {\n      return false;\n    }\n  }\n\n  throw true;\n} // ensureBytesBefore throws an error if first >= last\n// we compare byte by byte\n\n\nfunction ensureBytesBefore(first, last) {\n  if (!bytesBefore(first, last)) {\n    throw new Error(\"first is after last\");\n  }\n}\n\nexports.ensureBytesBefore = ensureBytesBefore;\n\nfunction bytesBefore(first, last) {\n  const min = first.length < last.length ? first.length : last.length;\n\n  for (let i = 0; i < min; i++) {\n    if (first[i] < last[i]) {\n      return true;\n    }\n\n    if (first[i] > last[i]) {\n      return false;\n    } // if they are equal, continue to next step\n\n  } // if they match, ensure that last is longer than first..\n\n\n  return first.length < last.length;\n}\n\nexports.bytesBefore = bytesBefore;","map":{"version":3,"mappings":"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","names":["ensureLeaf","leaf","spec","hash","Error","prehashKey","prehashValue","length","ensurePrefix","prefix","exports","ensureInner","inner","hasPrefix","minPrefixLength","maxLeftChildBytes","childOrder","childSize","maxPrefixLength","check","ensureBytesEqual","slice","a","b","i","bytesEqual","ensureBytesBefore","first","last","bytesBefore","min"],"sourceRoot":"","sources":["../src/specs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}