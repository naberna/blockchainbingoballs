{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbkdf2Sha512 = exports.pbkdf2Sha512Noble = exports.pbkdf2Sha512Crypto = exports.pbkdf2Sha512Subtle = exports.getSubtle = exports.getCryptoModule = void 0;\n\nconst utils_1 = require(\"@cosmjs/utils\");\n\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\n\nconst sha512_1 = require(\"@noble/hashes/sha512\");\n/**\n * Returns the Node.js crypto module when available and `undefined`\n * otherwise.\n *\n * Detects an unimplemented fallback module from Webpack 5 and returns\n * `undefined` in that case.\n */\n\n\nasync function getCryptoModule() {\n  try {\n    const crypto = await Promise.resolve().then(() => __importStar(require(\"crypto\"))); // We get `Object{default: Object{}}` as a fallback when using\n    // `crypto: false` in Webpack 5, which we interprete as unavailable.\n\n    if (typeof crypto === \"object\" && Object.keys(crypto).length <= 1) {\n      return undefined;\n    }\n\n    return crypto;\n  } catch (_a) {\n    return undefined;\n  }\n}\n\nexports.getCryptoModule = getCryptoModule;\n\nasync function getSubtle() {\n  const g = globalThis;\n  let subtle = g.crypto && g.crypto.subtle;\n\n  if (!subtle) {\n    const crypto = await getCryptoModule();\n\n    if (crypto && crypto.webcrypto && crypto.webcrypto.subtle) {\n      subtle = crypto.webcrypto.subtle;\n    }\n  }\n\n  return subtle;\n}\n\nexports.getSubtle = getSubtle;\n\nasync function pbkdf2Sha512Subtle( // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nsubtle, secret, salt, iterations, keylen) {\n  (0, utils_1.assert)(subtle, \"Argument subtle is falsy\");\n  (0, utils_1.assert)(typeof subtle === \"object\", \"Argument subtle is not of type object\");\n  (0, utils_1.assert)(typeof subtle.importKey === \"function\", \"subtle.importKey is not a function\");\n  (0, utils_1.assert)(typeof subtle.deriveBits === \"function\", \"subtle.deriveBits is not a function\");\n  return subtle.importKey(\"raw\", secret, {\n    name: \"PBKDF2\"\n  }, false, [\"deriveBits\"]).then(key => subtle.deriveBits({\n    name: \"PBKDF2\",\n    salt: salt,\n    iterations: iterations,\n    hash: {\n      name: \"SHA-512\"\n    }\n  }, key, keylen * 8).then(buffer => new Uint8Array(buffer)));\n}\n\nexports.pbkdf2Sha512Subtle = pbkdf2Sha512Subtle;\n\nasync function pbkdf2Sha512Crypto( // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\ncrypto, secret, salt, iterations, keylen) {\n  (0, utils_1.assert)(crypto, \"Argument crypto is falsy\");\n  (0, utils_1.assert)(typeof crypto === \"object\", \"Argument crypto is not of type object\");\n  (0, utils_1.assert)(typeof crypto.pbkdf2 === \"function\", \"crypto.pbkdf2 is not a function\");\n  return new Promise((resolve, reject) => {\n    crypto.pbkdf2(secret, salt, iterations, keylen, \"sha512\", (error, result) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(Uint8Array.from(result));\n      }\n    });\n  });\n}\n\nexports.pbkdf2Sha512Crypto = pbkdf2Sha512Crypto;\n\nasync function pbkdf2Sha512Noble(secret, salt, iterations, keylen) {\n  return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, secret, salt, {\n    c: iterations,\n    dkLen: keylen\n  });\n}\n\nexports.pbkdf2Sha512Noble = pbkdf2Sha512Noble;\n/**\n * A pbkdf2 implementation for BIP39. This is not exported at package level and thus a private API.\n */\n\nasync function pbkdf2Sha512(secret, salt, iterations, keylen) {\n  const subtle = await getSubtle();\n\n  if (subtle) {\n    return pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen);\n  } else {\n    const crypto = await getCryptoModule();\n\n    if (crypto) {\n      return pbkdf2Sha512Crypto(crypto, secret, salt, iterations, keylen);\n    } else {\n      return pbkdf2Sha512Noble(secret, salt, iterations, keylen);\n    }\n  }\n}\n\nexports.pbkdf2Sha512 = pbkdf2Sha512;","map":{"version":3,"mappings":"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","names":["getCryptoModule","crypto","Object","keys","length","undefined","exports","getSubtle","g","globalThis","subtle","webcrypto","pbkdf2Sha512Subtle","secret","salt","iterations","keylen","importKey","deriveBits","name","then","key","hash","buffer","Uint8Array","pbkdf2Sha512Crypto","pbkdf2","Promise","resolve","reject","error","result","from","pbkdf2Sha512Noble","sha512_1","c","dkLen","pbkdf2Sha512"],"sourceRoot":"","sources":["../src/pbkdf2.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}