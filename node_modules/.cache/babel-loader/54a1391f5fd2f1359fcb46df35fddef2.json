{"ast":null,"code":"const initialState = {\n  loading: true,\n  smartContract: null,\n  errorMsg: \"\",\n  tokenId: \"\",\n  tokenMetadataURI: \"\",\n  balance: \"\",\n  tokenMetadata: \"\",\n  tokenMetadataArr: [{\n    name: \"\",\n    description: \"\",\n    image: \"\"\n  }],\n  totalSupply: \"\",\n  isWhiteList: false\n};\n\nconst blockchainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FIGHTER_CONNECTION_REQUEST\":\n      return { ...initialState,\n        loading: true\n      };\n\n    case \"FIGHTER_CONNECTION_SUCCESS\":\n      return { ...state,\n        loading: false,\n        smartContract: action.payload.smartContract,\n        tokenId: action.payload.tokenId,\n        tokenMetadataURI: action.payload.tokenMetadataURI,\n        balance: action.payload.balance,\n        tokenMetadata: action.payload.tokenMetadata,\n        tokenMetadataArr: action.payload.tokenMetadataArr,\n        totalSupply: action.payload.totalSupply,\n        isWhiteList: action.payload.isWhiteList\n      };\n      return { ...state,\n        account: action.payload.account\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","map":{"version":3,"names":["initialState","loading","smartContract","errorMsg","tokenId","tokenMetadataURI","balance","tokenMetadata","tokenMetadataArr","name","description","image","totalSupply","isWhiteList","blockchainReducer","state","action","type","payload","account"],"sources":["/Users/bernapolat/blockchainbingoballs/src/redux/blockchainFighters/blockchainReducer.js"],"sourcesContent":["const initialState = {\n  loading: true,\n  smartContract: null,\n  errorMsg: \"\",\n  tokenId: \"\",\n  tokenMetadataURI: \"\",\n  balance: \"\",\n  tokenMetadata: \"\",\n  tokenMetadataArr: [\n    {\n      name: \"\",\n      description: \"\",\n      image: \"\",\n    },\n  ],\n  totalSupply: \"\",\n  isWhiteList: false,\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FIGHTER_CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"FIGHTER_CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        smartContract: action.payload.smartContract,\n        tokenId: action.payload.tokenId,\n        tokenMetadataURI: action.payload.tokenMetadataURI,\n        balance: action.payload.balance,\n        tokenMetadata: action.payload.tokenMetadata,\n        tokenMetadataArr: action.payload.tokenMetadataArr,\n        totalSupply: action.payload.totalSupply,\n        isWhiteList: action.payload.isWhiteList,\n      };\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE,IADU;EAEnBC,aAAa,EAAE,IAFI;EAGnBC,QAAQ,EAAE,EAHS;EAInBC,OAAO,EAAE,EAJU;EAKnBC,gBAAgB,EAAE,EALC;EAMnBC,OAAO,EAAE,EANU;EAOnBC,aAAa,EAAE,EAPI;EAQnBC,gBAAgB,EAAE,CAChB;IACEC,IAAI,EAAE,EADR;IAEEC,WAAW,EAAE,EAFf;IAGEC,KAAK,EAAE;EAHT,CADgB,CARC;EAenBC,WAAW,EAAE,EAfM;EAgBnBC,WAAW,EAAE;AAhBM,CAArB;;AAmBA,MAAMC,iBAAiB,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBf,YAAyB;EAAA,IAAXgB,MAAW;;EAC1D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,4BAAL;MACE,OAAO,EACL,GAAGjB,YADE;QAELC,OAAO,EAAE;MAFJ,CAAP;;IAIF,KAAK,4BAAL;MACE,OAAO,EACL,GAAGc,KADE;QAELd,OAAO,EAAE,KAFJ;QAGLC,aAAa,EAAEc,MAAM,CAACE,OAAP,CAAehB,aAHzB;QAILE,OAAO,EAAEY,MAAM,CAACE,OAAP,CAAed,OAJnB;QAKLC,gBAAgB,EAAEW,MAAM,CAACE,OAAP,CAAeb,gBAL5B;QAMLC,OAAO,EAAEU,MAAM,CAACE,OAAP,CAAeZ,OANnB;QAOLC,aAAa,EAAES,MAAM,CAACE,OAAP,CAAeX,aAPzB;QAQLC,gBAAgB,EAAEQ,MAAM,CAACE,OAAP,CAAeV,gBAR5B;QASLI,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN,WATvB;QAULC,WAAW,EAAEG,MAAM,CAACE,OAAP,CAAeL;MAVvB,CAAP;MAYA,OAAO,EACL,GAAGE,KADE;QAELI,OAAO,EAAEH,MAAM,CAACE,OAAP,CAAeC;MAFnB,CAAP;;IAIF;MACE,OAAOJ,KAAP;EAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,iBAAf"},"metadata":{},"sourceType":"module"}