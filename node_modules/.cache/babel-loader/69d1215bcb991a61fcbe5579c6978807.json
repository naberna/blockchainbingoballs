{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValueAndUpdates = void 0;\n\nconst xstream_1 = require(\"xstream\");\n/**\n * A read only wrapper around DefaultValueProducer that allows\n * to synchronously get the current value using the .value property\n * and listen to to updates by suscribing to the .updates stream\n */\n\n\nclass ValueAndUpdates {\n  constructor(producer) {\n    this.producer = producer;\n    this.updates = xstream_1.MemoryStream.createWithMemory(this.producer);\n  }\n\n  get value() {\n    return this.producer.value;\n  }\n  /**\n   * Resolves as soon as search value is found.\n   *\n   * @param search either a value or a function that must return true when found\n   * @returns the value of the update that caused the search match\n   */\n\n\n  async waitFor(search) {\n    const searchImplementation = typeof search === \"function\" ? search : value => value === search;\n    return new Promise((resolve, reject) => {\n      const subscription = this.updates.subscribe({\n        next: newValue => {\n          if (searchImplementation(newValue)) {\n            resolve(newValue); // MemoryStream.subscribe() calls next with the last value.\n            // Make async to ensure the subscription exists\n\n            setTimeout(() => subscription.unsubscribe(), 0);\n          }\n        },\n        complete: () => {\n          subscription.unsubscribe();\n          reject(\"Update stream completed without expected value\");\n        },\n        error: error => {\n          reject(error);\n        }\n      });\n    });\n  }\n\n}\n\nexports.ValueAndUpdates = ValueAndUpdates;","map":{"version":3,"mappings":";;;;;;;AAAA;AAMA;;;;;;;AAKA,MAAaA,eAAb,CAA4B;EAS1BC,YAAmBC,QAAnB,EAAoD;IAClD,KAAKA,QAAL,GAAgBA,QAAhB;IACA,KAAKC,OAAL,GAAeC,uBAAaC,gBAAb,CAA8B,KAAKH,QAAnC,CAAf;EACD;;EATe,IAALI,KAAK;IACd,OAAO,KAAKJ,QAAL,CAAcI,KAArB;EACD;EASD;;;;;;;;EAMoB,MAAPC,OAAO,CAACC,MAAD,EAA8B;IAChD,MAAMC,oBAAoB,GACxB,OAAOD,MAAP,KAAkB,UAAlB,GAAgCA,MAAhC,GAAgEF,KAAD,IAAuBA,KAAK,KAAKE,MADlG;IAGA,OAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MACrC,MAAMC,YAAY,GAAG,KAAKV,OAAL,CAAaW,SAAb,CAAuB;QAC1CC,IAAI,EAAGC,QAAD,IAAa;UACjB,IAAIP,oBAAoB,CAACO,QAAD,CAAxB,EAAoC;YAClCL,OAAO,CAACK,QAAD,CAAP,CADkC,CAGlC;YACA;;YACAC,UAAU,CAAC,MAAMJ,YAAY,CAACK,WAAb,EAAP,EAAmC,CAAnC,CAAV;UACD;QACF,CATyC;QAU1CC,QAAQ,EAAE,MAAK;UACbN,YAAY,CAACK,WAAb;UACAN,MAAM,CAAC,gDAAD,CAAN;QACD,CAbyC;QAc1CQ,KAAK,EAAGA,KAAD,IAAU;UACfR,MAAM,CAACQ,KAAD,CAAN;QACD;MAhByC,CAAvB,CAArB;IAkBD,CAnBM,CAAP;EAoBD;;AA5CyB;;AAA5BC","names":["ValueAndUpdates","constructor","producer","updates","xstream_1","createWithMemory","value","waitFor","search","searchImplementation","Promise","resolve","reject","subscription","subscribe","next","newValue","setTimeout","unsubscribe","complete","error","exports"],"sourceRoot":"","sources":["../src/valueandupdates.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}