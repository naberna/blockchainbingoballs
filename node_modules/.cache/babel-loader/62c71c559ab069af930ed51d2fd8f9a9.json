{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBankAminoConverters = exports.isAminoMsgMultiSend = exports.isAminoMsgSend = void 0;\n\nfunction isAminoMsgSend(msg) {\n  return msg.type === \"cosmos-sdk/MsgSend\";\n}\n\nexports.isAminoMsgSend = isAminoMsgSend;\n\nfunction isAminoMsgMultiSend(msg) {\n  return msg.type === \"cosmos-sdk/MsgMultiSend\";\n}\n\nexports.isAminoMsgMultiSend = isAminoMsgMultiSend;\n\nfunction createBankAminoConverters() {\n  return {\n    \"/cosmos.bank.v1beta1.MsgSend\": {\n      aminoType: \"cosmos-sdk/MsgSend\",\n      toAmino: _ref => {\n        let {\n          fromAddress,\n          toAddress,\n          amount\n        } = _ref;\n        return {\n          from_address: fromAddress,\n          to_address: toAddress,\n          amount: [...amount]\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          from_address,\n          to_address,\n          amount\n        } = _ref2;\n        return {\n          fromAddress: from_address,\n          toAddress: to_address,\n          amount: [...amount]\n        };\n      }\n    },\n    \"/cosmos.bank.v1beta1.MsgMultiSend\": {\n      aminoType: \"cosmos-sdk/MsgMultiSend\",\n      toAmino: _ref3 => {\n        let {\n          inputs,\n          outputs\n        } = _ref3;\n        return {\n          inputs: inputs.map(input => ({\n            address: input.address,\n            coins: [...input.coins]\n          })),\n          outputs: outputs.map(output => ({\n            address: output.address,\n            coins: [...output.coins]\n          }))\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          inputs,\n          outputs\n        } = _ref4;\n        return {\n          inputs: inputs.map(input => ({\n            address: input.address,\n            coins: [...input.coins]\n          })),\n          outputs: outputs.map(output => ({\n            address: output.address,\n            coins: [...output.coins]\n          }))\n        };\n      }\n    }\n  };\n}\n\nexports.createBankAminoConverters = createBankAminoConverters;","map":{"version":3,"mappings":";;;;;;;AAmBA,SAAgBA,cAAhB,CAA+BC,GAA/B,EAA4C;EAC1C,OAAOA,GAAG,CAACC,IAAJ,KAAa,oBAApB;AACD;;AAFDC;;AAyBA,SAAgBC,mBAAhB,CAAoCH,GAApC,EAAiD;EAC/C,OAAOA,GAAG,CAACC,IAAJ,KAAa,yBAApB;AACD;;AAFDC;;AAIA,SAAgBE,yBAAhB,GAAyC;EACvC,OAAO;IACL,gCAAgC;MAC9BC,SAAS,EAAE,oBADmB;MAE9BC,OAAO,EAAE;QAAA,IAAC;UAAEC,WAAF;UAAeC,SAAf;UAA0BC;QAA1B,CAAD;QAAA,OAAyE;UAChFC,YAAY,EAAEH,WADkE;UAEhFI,UAAU,EAAEH,SAFoE;UAGhFC,MAAM,EAAE,CAAC,GAAGA,MAAJ;QAHwE,CAAzE;MAAA,CAFqB;MAO9BG,SAAS,EAAE;QAAA,IAAC;UAAEF,YAAF;UAAgBC,UAAhB;UAA4BF;QAA5B,CAAD;QAAA,OAA2E;UACpFF,WAAW,EAAEG,YADuE;UAEpFF,SAAS,EAAEG,UAFyE;UAGpFF,MAAM,EAAE,CAAC,GAAGA,MAAJ;QAH4E,CAA3E;MAAA;IAPmB,CAD3B;IAcL,qCAAqC;MACnCJ,SAAS,EAAE,yBADwB;MAEnCC,OAAO,EAAE;QAAA,IAAC;UAAEO,MAAF;UAAUC;QAAV,CAAD;QAAA,OAAoE;UAC3ED,MAAM,EAAEA,MAAM,CAACE,GAAP,CAAYC,KAAD,KAAY;YAC7BC,OAAO,EAAED,KAAK,CAACC,OADc;YAE7BC,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV;UAFsB,CAAZ,CAAX,CADmE;UAK3EJ,OAAO,EAAEA,OAAO,CAACC,GAAR,CAAaI,MAAD,KAAa;YAChCF,OAAO,EAAEE,MAAM,CAACF,OADgB;YAEhCC,KAAK,EAAE,CAAC,GAAGC,MAAM,CAACD,KAAX;UAFyB,CAAb,CAAZ;QALkE,CAApE;MAAA,CAF0B;MAYnCN,SAAS,EAAE;QAAA,IAAC;UAAEC,MAAF;UAAUC;QAAV,CAAD;QAAA,OAAoE;UAC7ED,MAAM,EAAEA,MAAM,CAACE,GAAP,CAAYC,KAAD,KAAY;YAC7BC,OAAO,EAAED,KAAK,CAACC,OADc;YAE7BC,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV;UAFsB,CAAZ,CAAX,CADqE;UAK7EJ,OAAO,EAAEA,OAAO,CAACC,GAAR,CAAaI,MAAD,KAAa;YAChCF,OAAO,EAAEE,MAAM,CAACF,OADgB;YAEhCC,KAAK,EAAE,CAAC,GAAGC,MAAM,CAACD,KAAX;UAFyB,CAAb,CAAZ;QALoE,CAApE;MAAA;IAZwB;EAdhC,CAAP;AAsCD;;AAvCDhB","names":["isAminoMsgSend","msg","type","exports","isAminoMsgMultiSend","createBankAminoConverters","aminoType","toAmino","fromAddress","toAddress","amount","from_address","to_address","fromAmino","inputs","outputs","map","input","address","coins","output"],"sourceRoot":"","sources":["../../../src/modules/bank/aminomessages.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}