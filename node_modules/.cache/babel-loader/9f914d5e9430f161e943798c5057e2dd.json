{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SocketWrapper = void 0;\n\nconst isomorphic_ws_1 = __importDefault(require(\"isomorphic-ws\"));\n\nfunction environmentIsNodeJs() {\n  return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\n/**\n * A thin wrapper around isomorphic-ws' WebSocket class that adds\n * - constant message/error/open/close handlers\n * - explict connection via a connect() method\n * - type support for events\n * - handling of corner cases in the open and close behaviour\n */\n\n\nclass SocketWrapper {\n  constructor(url, messageHandler, errorHandler, openHandler, closeHandler) {\n    let timeout = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 10000;\n    this.closed = false;\n    this.connected = new Promise((resolve, reject) => {\n      this.connectedResolver = resolve;\n      this.connectedRejecter = reject;\n    });\n    this.url = url;\n    this.messageHandler = messageHandler;\n    this.errorHandler = errorHandler;\n    this.openHandler = openHandler;\n    this.closeHandler = closeHandler;\n    this.timeout = timeout;\n  }\n  /**\n   * returns a promise that resolves when connection is open\n   */\n\n\n  connect() {\n    const socket = new isomorphic_ws_1.default(this.url);\n\n    socket.onerror = error => {\n      this.clearTimeout();\n\n      if (this.errorHandler) {\n        this.errorHandler(error);\n      }\n    };\n\n    socket.onmessage = messageEvent => {\n      this.messageHandler({\n        type: messageEvent.type,\n        data: messageEvent.data\n      });\n    };\n\n    socket.onopen = _ => {\n      this.clearTimeout(); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      this.connectedResolver();\n\n      if (this.openHandler) {\n        this.openHandler();\n      }\n    };\n\n    socket.onclose = closeEvent => {\n      this.closed = true;\n\n      if (this.closeHandler) {\n        this.closeHandler(closeEvent);\n      }\n    };\n\n    const started = Date.now();\n    this.timeoutId = setTimeout(() => {\n      socket.onmessage = () => 0;\n\n      socket.onerror = () => 0;\n\n      socket.onopen = () => 0;\n\n      socket.onclose = () => 0;\n\n      socket.close();\n      this.socket = undefined;\n      const elapsed = Math.floor(Date.now() - started); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      this.connectedRejecter(`Connection attempt timed out after ${elapsed} ms`);\n    }, this.timeout);\n    this.socket = socket;\n  }\n  /**\n   * Closes an established connection and aborts other connection states\n   */\n\n\n  disconnect() {\n    if (!this.socket) {\n      throw new Error(\"Socket undefined. This must be called after connecting.\");\n    }\n\n    this.clearTimeout();\n\n    switch (this.socket.readyState) {\n      case isomorphic_ws_1.default.OPEN:\n        this.socket.close(1000\n        /* Normal Closure */\n        );\n        break;\n\n      case isomorphic_ws_1.default.CLOSED:\n        // nothing to be done\n        break;\n\n      case isomorphic_ws_1.default.CONNECTING:\n        // imitate missing abort API\n        this.socket.onopen = () => 0;\n\n        this.socket.onclose = () => 0;\n\n        this.socket.onerror = () => 0;\n\n        this.socket.onmessage = () => 0;\n\n        this.socket = undefined;\n\n        if (this.closeHandler) {\n          this.closeHandler({\n            wasClean: false,\n            code: 4001\n          });\n        }\n\n        break;\n\n      case isomorphic_ws_1.default.CLOSING:\n        // already closing. Let it proceed\n        break;\n\n      default:\n        throw new Error(`Unknown readyState: ${this.socket.readyState}`);\n    }\n  }\n\n  async send(data) {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) {\n        throw new Error(\"Socket undefined. This must be called after connecting.\");\n      }\n\n      if (this.closed) {\n        throw new Error(\"Socket was closed, so no data can be sent anymore.\");\n      } // this exception should be thrown by send() automatically according to\n      // https://developer.mozilla.org/de/docs/Web/API/WebSocket#send() but it does not work in browsers\n\n\n      if (this.socket.readyState !== isomorphic_ws_1.default.OPEN) {\n        throw new Error(\"Websocket is not open\");\n      }\n\n      if (environmentIsNodeJs()) {\n        this.socket.send(data, err => err ? reject(err) : resolve());\n      } else {\n        // Browser websocket send method does not accept a callback\n        this.socket.send(data);\n        resolve();\n      }\n    });\n  }\n  /**\n   * Clears the timeout function, such that no timeout error will be raised anymore. This should be\n   * called when the connection is established, a connection error occurred or the socket is disconnected.\n   *\n   * This method must not be called before `connect()`.\n   * This method is idempotent.\n   */\n\n\n  clearTimeout() {\n    if (!this.timeoutId) {\n      throw new Error(\"Timeout ID not set. This should not happen and usually means connect() was not called.\");\n    } // Note: do not unset this.timeoutId to allow multiple calls to this function\n\n\n    clearTimeout(this.timeoutId);\n  }\n\n}\n\nexports.SocketWrapper = SocketWrapper;","map":{"version":3,"mappings":"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","names":["environmentIsNodeJs","process","versions","node","SocketWrapper","constructor","url","messageHandler","errorHandler","openHandler","closeHandler","timeout","connected","Promise","resolve","reject","connectedResolver","connectedRejecter","connect","socket","isomorphic_ws_1","onerror","error","clearTimeout","onmessage","messageEvent","type","data","onopen","_","onclose","closeEvent","closed","started","Date","now","timeoutId","setTimeout","close","undefined","elapsed","Math","floor","disconnect","Error","readyState","OPEN","CLOSED","CONNECTING","wasClean","code","CLOSING","send","err","exports"],"sourceRoot":"","sources":["../src/socketwrapper.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}