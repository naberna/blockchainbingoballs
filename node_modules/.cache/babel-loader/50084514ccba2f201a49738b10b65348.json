{"ast":null,"code":"import { parsePersonalSign, parseTransactionData, convertArrayBufferToHex, convertHexToArrayBuffer, getClientMeta, payloadId, uuid, formatRpcError, parseWalletConnectUri, convertNumberToHex, isJsonRpcResponseSuccess, isJsonRpcResponseError, isSilentPayload, getLocal, signingMethods, mobileLinkChoiceKey, isMobile, removeLocal } from \"@deficonnect/utils\";\nimport SocketTransport from \"@deficonnect/socket-transport\";\nimport { ERROR_SESSION_CONNECTED, ERROR_SESSION_DISCONNECTED, ERROR_SESSION_REJECTED, ERROR_MISSING_JSON_RPC, ERROR_MISSING_RESULT, ERROR_MISSING_ERROR, ERROR_MISSING_METHOD, ERROR_MISSING_ID, ERROR_INVALID_RESPONSE, ERROR_INVALID_URI, ERROR_MISSING_REQUIRED, ERROR_QRCODE_MODAL_NOT_PROVIDED, ERROR_QRCODE_MODAL_USER_CLOSED } from \"./errors\";\nimport EventManager from \"./events\";\nimport SessionStorage from \"./storage\";\nimport { getBridgeUrl } from \"./url\";\n\nclass Connector {\n  constructor(opts) {\n    this.protocol = \"wc\";\n    this.version = 3;\n    this._bridge = \"\";\n    this._key = null;\n    this._clientId = \"\";\n    this._clientMeta = null;\n    this._peerId = \"\";\n    this._peerMeta = null;\n    this._handshakeId = 0;\n    this._handshakeTopic = \"\";\n    this._connected = false;\n    this._accounts = [];\n    this._chainId = \"\";\n    this._chainType = \"\";\n    this._rpcUrl = \"\";\n    this._selectedWalletId = \"\";\n    this._wallets = [];\n    this._eventManager = new EventManager();\n    this._clientMeta = opts.connectorOpts.clientMeta || getClientMeta() || null;\n    this._cryptoLib = opts.cryptoLib;\n    this._sessionStorage = opts.sessionStorage || new SessionStorage(opts.connectorOpts.storageId);\n    this._qrcodeModal = opts.connectorOpts.qrcodeModal;\n    this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;\n    this._signingMethods = [...signingMethods, ...(opts.connectorOpts.signingMethods || [])];\n\n    if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {\n      throw new Error(ERROR_MISSING_REQUIRED);\n    }\n\n    if (opts.connectorOpts.bridge) {\n      this.bridge = getBridgeUrl(opts.connectorOpts.bridge);\n    }\n\n    if (opts.connectorOpts.uri) {\n      this.uri = opts.connectorOpts.uri;\n    }\n\n    const session = opts.connectorOpts.session || this._getStorageSession();\n\n    if (session) {\n      this.session = session;\n    }\n\n    if (this.handshakeId) {\n      this._subscribeToSessionResponse(this.handshakeId, \"Session request rejected\");\n    }\n\n    this._transport = opts.transport || new SocketTransport({\n      protocol: this.protocol,\n      version: this.version,\n      url: this.bridge,\n      subscriptions: [this.clientId]\n    });\n\n    this._subscribeToInternalEvents();\n\n    this._initTransport();\n\n    if (opts.connectorOpts.uri) {\n      this._subscribeToSessionRequest();\n    }\n\n    if (opts.pushServerOpts) {\n      this._registerPushServer(opts.pushServerOpts);\n    }\n  }\n\n  set bridge(value) {\n    if (!value) {\n      return;\n    }\n\n    this._bridge = value;\n  }\n\n  get bridge() {\n    return this._bridge;\n  }\n\n  set key(value) {\n    if (!value) {\n      return;\n    }\n\n    const key = convertHexToArrayBuffer(value);\n    this._key = key;\n  }\n\n  get key() {\n    if (this._key) {\n      const key = convertArrayBufferToHex(this._key, true);\n      return key;\n    }\n\n    return \"\";\n  }\n\n  set clientId(value) {\n    if (!value) {\n      return;\n    }\n\n    this._clientId = value;\n  }\n\n  get clientId() {\n    let clientId = this._clientId;\n\n    if (!clientId) {\n      clientId = this._clientId = uuid();\n    }\n\n    return this._clientId;\n  }\n\n  set peerId(value) {\n    if (!value) {\n      return;\n    }\n\n    this._peerId = value;\n  }\n\n  get peerId() {\n    return this._peerId;\n  }\n\n  set clientMeta(value) {}\n\n  get clientMeta() {\n    let clientMeta = this._clientMeta;\n\n    if (!clientMeta) {\n      clientMeta = this._clientMeta = getClientMeta();\n    }\n\n    return clientMeta;\n  }\n\n  set peerMeta(value) {\n    this._peerMeta = value;\n  }\n\n  get peerMeta() {\n    const peerMeta = this._peerMeta;\n    return peerMeta;\n  }\n\n  set selectedWalletId(value) {\n    this._selectedWalletId = value;\n  }\n\n  get selectedWalletId() {\n    const selectedWalletId = this._selectedWalletId;\n    return selectedWalletId;\n  }\n\n  set wallets(value) {\n    this._wallets = value;\n  }\n\n  get wallets() {\n    const wallets = this._wallets;\n    return wallets;\n  }\n\n  set handshakeTopic(value) {\n    if (!value) {\n      return;\n    }\n\n    this._handshakeTopic = value;\n  }\n\n  get handshakeTopic() {\n    return this._handshakeTopic;\n  }\n\n  set handshakeId(value) {\n    if (!value) {\n      return;\n    }\n\n    this._handshakeId = value;\n  }\n\n  get handshakeId() {\n    return this._handshakeId;\n  }\n\n  get uri() {\n    const _uri = this._formatUri();\n\n    return _uri;\n  }\n\n  set uri(value) {\n    if (!value) {\n      return;\n    }\n\n    const {\n      handshakeTopic,\n      bridge,\n      key\n    } = this._parseUri(value);\n\n    this.handshakeTopic = handshakeTopic;\n    this.bridge = bridge;\n    this.key = key;\n  }\n\n  set chainId(value) {\n    this._chainId = value;\n  }\n\n  get chainId() {\n    const chainId = this._chainId;\n    return chainId;\n  }\n\n  set chainType(value) {\n    this._chainType = value;\n  }\n\n  get chainType() {\n    const chainType = this._chainType;\n    return chainType;\n  }\n\n  set accounts(value) {\n    this._accounts = value;\n  }\n\n  get accounts() {\n    const accounts = this._accounts;\n    return accounts;\n  }\n\n  set rpcUrl(value) {\n    this._rpcUrl = value;\n  }\n\n  get rpcUrl() {\n    const rpcUrl = this._rpcUrl;\n    return rpcUrl;\n  }\n\n  set connected(value) {}\n\n  get connected() {\n    return this._connected;\n  }\n\n  set pending(value) {}\n\n  get pending() {\n    return !!this._handshakeTopic;\n  }\n\n  get session() {\n    return {\n      connected: this.connected,\n      accounts: this.accounts,\n      chainId: this.chainId,\n      chainType: this.chainType,\n      bridge: this.bridge,\n      key: this.key,\n      clientId: this.clientId,\n      clientMeta: this.clientMeta,\n      peerId: this.peerId,\n      peerMeta: this.peerMeta,\n      handshakeId: this.handshakeId,\n      handshakeTopic: this.handshakeTopic,\n      selectedWalletId: this.selectedWalletId,\n      wallets: this.wallets\n    };\n  }\n\n  set session(value) {\n    if (!value) {\n      return;\n    }\n\n    this._connected = value.connected;\n    this.accounts = value.accounts;\n    this.chainId = value.chainId;\n    this.chainType = value.chainType;\n    this.bridge = value.bridge;\n    this.key = value.key;\n    this.clientId = value.clientId;\n    this.clientMeta = value.clientMeta;\n    this.peerId = value.peerId;\n    this.peerMeta = value.peerMeta;\n    this.handshakeId = value.handshakeId;\n    this.handshakeTopic = value.handshakeTopic;\n    this.selectedWalletId = value.selectedWalletId;\n    this.wallets = value.wallets;\n  }\n\n  on(event, callback) {\n    const eventEmitter = {\n      event,\n      callback\n    };\n\n    this._eventManager.subscribe(eventEmitter);\n  }\n\n  off(event) {\n    this._eventManager.unsubscribe(event);\n  }\n\n  async createInstantRequest(instantRequest) {\n    this._key = await this._generateKey();\n\n    const request = this._formatRequest({\n      method: \"dc_instantRequest\",\n      params: [{\n        peerId: this.clientId,\n        peerMeta: this.clientMeta,\n        request: this._formatRequest(instantRequest)\n      }]\n    });\n\n    this.handshakeId = request.id;\n    this.handshakeTopic = uuid();\n\n    this._eventManager.trigger({\n      event: \"display_uri\",\n      params: [this.uri]\n    });\n\n    this.on(\"modal_closed\", () => {\n      throw new Error(ERROR_QRCODE_MODAL_USER_CLOSED);\n    });\n\n    const endInstantRequest = () => {\n      this.killSession();\n    };\n\n    try {\n      const result = await this._sendCallRequest(request);\n\n      if (result) {\n        endInstantRequest();\n      }\n\n      return result;\n    } catch (error) {\n      endInstantRequest();\n      throw error;\n    }\n  }\n\n  async connect(opts) {\n    if (!this._qrcodeModal) {\n      throw new Error(ERROR_QRCODE_MODAL_NOT_PROVIDED);\n    }\n\n    if (this.connected) {\n      return {\n        chainId: this.chainId,\n        chainType: this.chainType,\n        accounts: this.accounts,\n        selectedWalletId: this.selectedWalletId,\n        wallets: this.wallets\n      };\n    }\n\n    await this.createSession(opts);\n    return new Promise(async (resolve, reject) => {\n      this.on(\"modal_closed\", () => reject(new Error(ERROR_QRCODE_MODAL_USER_CLOSED)));\n      this.on(\"connect\", (error, payload) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(payload.params[0]);\n      });\n    });\n  }\n\n  async createSession(opts) {\n    var _a, _b, _c;\n\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n\n    if (this.pending) {\n      return;\n    }\n\n    this._key = await this._generateKey();\n\n    const request = this._formatRequest({\n      method: \"dc_sessionRequest\",\n      params: [{\n        peerId: this.clientId,\n        peerMeta: this.clientMeta,\n        chainId: (_a = opts === null || opts === void 0 ? void 0 : opts.chainId) !== null && _a !== void 0 ? _a : null,\n        chainType: (_b = opts === null || opts === void 0 ? void 0 : opts.chainType) !== null && _b !== void 0 ? _b : null,\n        accountTypes: (_c = opts === null || opts === void 0 ? void 0 : opts.accountTypes) !== null && _c !== void 0 ? _c : [\"eth\", \"cro\", \"tcro\"]\n      }]\n    });\n\n    this.handshakeId = request.id;\n    this.handshakeTopic = uuid();\n\n    this._sendSessionRequest(request, \"Session update rejected\", {\n      topic: this.handshakeTopic\n    });\n\n    this._eventManager.trigger({\n      event: \"display_uri\",\n      params: [this.uri]\n    });\n  }\n\n  approveSession(sessionStatus) {\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.chainType = sessionStatus.chainType || \"eth\";\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    this.selectedWalletId = sessionStatus.selectedWalletId;\n    this.wallets = sessionStatus.wallets;\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      chainType: this.chainType,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl,\n      peerId: this.clientId,\n      peerMeta: this.clientMeta,\n      selectedWalletId: this.selectedWalletId,\n      wallets: this.wallets\n    };\n    const response = {\n      id: this.handshakeId,\n      jsonrpc: \"2.1\",\n      result: sessionParams\n    };\n\n    this._sendResponse(response);\n\n    this._connected = true;\n\n    this._setStorageSession();\n\n    this._eventManager.trigger({\n      event: \"connect\",\n      params: [{\n        peerId: this.peerId,\n        peerMeta: this.peerMeta,\n        chainId: this.chainId,\n        chainType: this.chainType,\n        accounts: this.accounts,\n        selectedWalletId: this.selectedWalletId,\n        wallets: this.wallets\n      }]\n    });\n  }\n\n  rejectSession(sessionError) {\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n\n    const message = sessionError && sessionError.message ? sessionError.message : ERROR_SESSION_REJECTED;\n\n    const response = this._formatResponse({\n      id: this.handshakeId,\n      error: {\n        message\n      }\n    });\n\n    this._sendResponse(response);\n\n    this._connected = false;\n\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n\n    this._removeStorageSession();\n  }\n\n  updateSession(sessionStatus) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.chainType = sessionStatus.chainType || \"\";\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    this.selectedWalletId = sessionStatus.selectedWalletId;\n    this.wallets = sessionStatus.wallets;\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      chainType: this.chainType,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl,\n      selectedWalletId: this.selectedWalletId,\n      wallets: this.wallets\n    };\n\n    const request = this._formatRequest({\n      method: \"dc_sessionUpdate\",\n      params: [sessionParams]\n    });\n\n    this._sendSessionRequest(request, \"Session update rejected\");\n\n    this._eventManager.trigger({\n      event: \"session_update\",\n      params: [{\n        chainId: this.chainId,\n        chainType: this.chainType,\n        accounts: this.accounts,\n        selectedWalletId: this.selectedWalletId,\n        wallets: this.wallets\n      }]\n    });\n\n    this._manageStorageSession();\n  }\n\n  async killSession(sessionError) {\n    const message = sessionError ? sessionError.message : \"Session Disconnected\";\n    const sessionParams = {\n      approved: false,\n      chainId: null,\n      chainType: null,\n      accounts: null,\n      selectedWalletId: null,\n      wallets: []\n    };\n\n    const request = this._formatRequest({\n      method: \"dc_sessionUpdate\",\n      params: [sessionParams]\n    });\n\n    await this._sendRequest(request);\n\n    this._handleSessionDisconnect(message);\n  }\n\n  async sendTransaction(tx) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const parsedTx = parseTransactionData(tx);\n\n    const request = this._formatRequest({\n      method: \"eth_sendTransaction\",\n      params: [parsedTx]\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async sendJSONRequest(jsonRequest, options) {\n    var _a, _b;\n\n    const request = {\n      id: payloadId(),\n      jsonrpc: \"2.1\",\n      method: jsonRequest.method,\n      params: (_a = jsonRequest.params) !== null && _a !== void 0 ? _a : [],\n      session: jsonRequest.session\n    };\n    const encryptionPayload = await this._encrypt(request);\n    const topic = this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = (_b = !(options === null || options === void 0 ? void 0 : options.forcePushNotification)) !== null && _b !== void 0 ? _b : isSilentPayload(request);\n\n    this._transport.send(payload, topic, silent);\n\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n\n    return this._subscribeToCallResponse(request.id);\n  }\n\n  async signTransaction(tx) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const parsedTx = parseTransactionData(tx);\n\n    const request = this._formatRequest({\n      method: \"eth_signTransaction\",\n      params: [parsedTx]\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async signMessage(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const request = this._formatRequest({\n      method: \"eth_sign\",\n      params\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async signPersonalMessage(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    params = parsePersonalSign(params);\n\n    const request = this._formatRequest({\n      method: \"personal_sign\",\n      params\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async signTypedData(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const request = this._formatRequest({\n      method: \"eth_signTypedData\",\n      params\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async updateChain(chainParams) {\n    if (!this._connected) {\n      throw new Error(\"Session currently disconnected\");\n    }\n\n    const request = this._formatRequest({\n      method: \"wallet_updateChain\",\n      params: [chainParams]\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  unsafeSend(request, options) {\n    this._sendRequest(request, options);\n\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(request.id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        if (!payload) {\n          throw new Error(ERROR_MISSING_JSON_RPC);\n        }\n\n        resolve(payload);\n      });\n    });\n  }\n\n  async sendCustomRequest(request, options) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    switch (request.method) {\n      case \"eth_accounts\":\n        return this.accounts;\n\n      case \"eth_chainId\":\n        return convertNumberToHex(this.chainId);\n\n      case \"eth_sendTransaction\":\n      case \"eth_signTransaction\":\n        if (request.params) {\n          request.params[0] = parseTransactionData(request.params[0]);\n        }\n\n        break;\n\n      case \"personal_sign\":\n        if (request.params) {\n          request.params = parsePersonalSign(request.params);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    const formattedRequest = this._formatRequest(request);\n\n    const result = await this._sendCallRequest(formattedRequest, options);\n    return result;\n  }\n\n  approveRequest(response) {\n    if (isJsonRpcResponseSuccess(response)) {\n      const formattedResponse = this._formatResponse(response);\n\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(ERROR_MISSING_RESULT);\n    }\n  }\n\n  rejectRequest(response) {\n    if (isJsonRpcResponseError(response)) {\n      const formattedResponse = this._formatResponse(response);\n\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(ERROR_MISSING_ERROR);\n    }\n  }\n\n  transportClose() {\n    this._transport.close();\n  }\n\n  async _sendRequest(request, options) {\n    const callRequest = this._formatRequest(request);\n\n    const encryptionPayload = await this._encrypt(callRequest);\n    const topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== \"undefined\" ? options.topic : this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== \"undefined\" ? !options.forcePushNotification : isSilentPayload(callRequest);\n\n    this._transport.send(payload, topic, silent);\n  }\n\n  async _sendResponse(response) {\n    const encryptionPayload = await this._encrypt(response);\n    const topic = this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = true;\n\n    this._transport.send(payload, topic, silent);\n  }\n\n  async _sendSessionRequest(request, errorMsg, options) {\n    this._sendRequest(request, options);\n\n    this._subscribeToSessionResponse(request.id, errorMsg);\n  }\n\n  _sendCallRequest(request, options) {\n    this._sendRequest(request, options);\n\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n\n    return this._subscribeToCallResponse(request.id);\n  }\n\n  _formatRequest(request) {\n    if (typeof request.method === \"undefined\") {\n      throw new Error(ERROR_MISSING_METHOD);\n    }\n\n    const formattedRequest = {\n      id: typeof request.id === \"undefined\" ? payloadId() : request.id,\n      jsonrpc: \"2.1\",\n      method: request.method,\n      params: typeof request.params === \"undefined\" ? [] : request.params,\n      session: {\n        chainId: `${this.session.chainId}`,\n        chainType: `${this.session.chainType}`,\n        account: this.session.accounts[0]\n      }\n    };\n    return formattedRequest;\n  }\n\n  _formatResponse(response) {\n    if (typeof response.id === \"undefined\") {\n      throw new Error(ERROR_MISSING_ID);\n    }\n\n    const baseResponse = {\n      id: response.id,\n      jsonrpc: \"2.1\"\n    };\n\n    if (isJsonRpcResponseError(response)) {\n      const error = formatRpcError(response.error);\n      const errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), {\n        error\n      });\n      return errorResponse;\n    } else if (isJsonRpcResponseSuccess(response)) {\n      const successResponse = Object.assign(Object.assign({}, baseResponse), response);\n      return successResponse;\n    }\n\n    throw new Error(ERROR_INVALID_RESPONSE);\n  }\n\n  _handleSessionDisconnect(errorMsg) {\n    const message = errorMsg || \"Session Disconnected\";\n\n    if (!this._connected) {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n\n      removeLocal(mobileLinkChoiceKey);\n    }\n\n    if (this._connected) {\n      this._connected = false;\n    }\n\n    if (this._handshakeId) {\n      this._handshakeId = 0;\n    }\n\n    if (this._handshakeTopic) {\n      this._handshakeTopic = \"\";\n    }\n\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n\n    this._removeStorageSession();\n\n    this.transportClose();\n  }\n\n  _handleSessionResponse(errorMsg, sessionParams) {\n    if (sessionParams) {\n      if (sessionParams.approved) {\n        if (!this._connected) {\n          this._connected = true;\n\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n\n          if (sessionParams.chainType) {\n            this.chainType = sessionParams.chainType;\n          }\n\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n\n          if (sessionParams.wallets) {\n            this.wallets = sessionParams.wallets;\n          }\n\n          if (sessionParams.selectedWalletId) {\n            this.selectedWalletId = sessionParams.selectedWalletId;\n          }\n\n          if (sessionParams.peerId && !this.peerId) {\n            this.peerId = sessionParams.peerId;\n          }\n\n          if (sessionParams.peerMeta && !this.peerMeta) {\n            this.peerMeta = sessionParams.peerMeta;\n          }\n\n          if (sessionParams.wallets && !this.wallets) {\n            this.wallets = sessionParams.wallets;\n          }\n\n          this._eventManager.trigger({\n            event: \"connect\",\n            params: [{\n              peerId: this.peerId,\n              peerMeta: this.peerMeta,\n              chainId: this.chainId,\n              chainType: this.chainType,\n              accounts: this.accounts,\n              selectedWalletId: this.selectedWalletId,\n              wallets: this.wallets\n            }]\n          });\n        } else {\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n\n          if (sessionParams.chainType) {\n            this.chainType = sessionParams.chainType;\n          }\n\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n\n          if (sessionParams.wallets) {\n            this.wallets = sessionParams.wallets;\n          }\n\n          if (sessionParams.selectedWalletId) {\n            this.selectedWalletId = sessionParams.selectedWalletId;\n          }\n\n          if (sessionParams.peerMeta && !this.peerMeta) {\n            this.peerMeta = sessionParams.peerMeta;\n          }\n\n          this._eventManager.trigger({\n            event: \"session_update\",\n            params: [{\n              chainId: this.chainId,\n              chainType: this.chainType,\n              accounts: this.accounts,\n              selectedWalletId: this.selectedWalletId,\n              wallets: this.wallets\n            }]\n          });\n        }\n\n        this._manageStorageSession();\n      } else {\n        this._handleSessionDisconnect(errorMsg);\n      }\n    } else {\n      this._handleSessionDisconnect(errorMsg);\n    }\n  }\n\n  async _handleIncomingMessages(socketMessage) {\n    const activeTopics = [this.clientId, this.handshakeTopic];\n\n    if (!activeTopics.includes(socketMessage.topic)) {\n      return;\n    }\n\n    let encryptionPayload;\n\n    try {\n      encryptionPayload = JSON.parse(socketMessage.payload);\n    } catch (error) {\n      return;\n    }\n\n    const payload = await this._decrypt(encryptionPayload);\n\n    if (payload) {\n      this._eventManager.trigger(payload);\n    }\n  }\n\n  _subscribeToSessionRequest() {\n    this._transport.subscribe(this.handshakeTopic);\n  }\n\n  _subscribeToResponse(id, callback) {\n    this.on(`response:${id}`, callback);\n  }\n\n  _subscribeToSessionResponse(id, errorMsg) {\n    this._subscribeToResponse(id, (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n\n        return;\n      }\n\n      if (payload.result) {\n        this._handleSessionResponse(errorMsg, payload.result);\n      } else if (payload.error && payload.error.message) {\n        this._handleSessionResponse(payload.error.message);\n      } else {\n        this._handleSessionResponse(errorMsg);\n      }\n    });\n  }\n\n  _subscribeToCallResponse(id) {\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        if (payload.result) {\n          resolve(payload.result);\n        } else if (payload.error && payload.error.message) {\n          reject(payload.error);\n        } else {\n          reject(new Error(ERROR_INVALID_RESPONSE));\n        }\n      });\n    });\n  }\n\n  _subscribeToInternalEvents() {\n    this.on(\"display_uri\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.open(this.uri, () => {\n          this._eventManager.trigger({\n            event: \"modal_closed\",\n            params: []\n          });\n        }, this._qrcodeModalOptions);\n      }\n    });\n    this.on(\"connect\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n    });\n    this.on(\"call_request_sent\", (error, payload) => {\n      const {\n        request\n      } = payload.params[0];\n\n      if (isMobile() && this._signingMethods.includes(request.method)) {\n        const mobileLinkUrl = getLocal(mobileLinkChoiceKey);\n\n        if (mobileLinkUrl) {\n          window.location.href = mobileLinkUrl.href;\n        }\n      }\n    });\n    this.on(\"dc_sessionRequest\", (error, payload) => {\n      if (error) {\n        this._eventManager.trigger({\n          event: \"error\",\n          params: [{\n            code: \"SESSION_REQUEST_ERROR\",\n            message: error.toString()\n          }]\n        });\n      }\n\n      this.handshakeId = payload.id;\n      this.peerId = payload.params[0].peerId;\n      this.peerMeta = payload.params[0].peerMeta;\n      const internalPayload = Object.assign(Object.assign({}, payload), {\n        method: \"session_request\"\n      });\n\n      this._eventManager.trigger(internalPayload);\n    });\n    this.on(\"dc_sessionUpdate\", (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n      }\n\n      this._handleSessionResponse(\"Session disconnected\", payload.params[0]);\n    });\n  }\n\n  _initTransport() {\n    this._transport.on(\"message\", socketMessage => this._handleIncomingMessages(socketMessage));\n\n    this._transport.on(\"open\", () => this._eventManager.trigger({\n      event: \"transport_open\",\n      params: []\n    }));\n\n    this._transport.on(\"close\", () => this._eventManager.trigger({\n      event: \"transport_close\",\n      params: []\n    }));\n\n    this._transport.on(\"error\", () => this._eventManager.trigger({\n      event: \"transport_error\",\n      params: [\"Websocket connection failed\"]\n    }));\n\n    this._transport.open();\n  }\n\n  _formatUri() {\n    const protocol = this.protocol;\n    const handshakeTopic = this.handshakeTopic;\n    const version = this.version;\n    const bridge = encodeURIComponent(this.bridge);\n    const key = this.key;\n    const uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`;\n    return uri;\n  }\n\n  _parseUri(uri) {\n    const result = parseWalletConnectUri(uri);\n\n    if (result.protocol === this.protocol) {\n      if (!result.handshakeTopic) {\n        throw Error(\"Invalid or missing handshakeTopic parameter value\");\n      }\n\n      const handshakeTopic = result.handshakeTopic;\n\n      if (!result.bridge) {\n        throw Error(\"Invalid or missing bridge url parameter value\");\n      }\n\n      const bridge = decodeURIComponent(result.bridge);\n\n      if (!result.key) {\n        throw Error(\"Invalid or missing key parameter value\");\n      }\n\n      const key = result.key;\n      return {\n        handshakeTopic,\n        bridge,\n        key\n      };\n    } else {\n      throw new Error(ERROR_INVALID_URI);\n    }\n  }\n\n  async _generateKey() {\n    if (this._cryptoLib) {\n      const result = await this._cryptoLib.generateKey();\n      return result;\n    }\n\n    return null;\n  }\n\n  async _encrypt(data) {\n    const key = this._key;\n\n    if (this._cryptoLib && key) {\n      const result = await this._cryptoLib.encrypt(data, key);\n      return result;\n    }\n\n    return null;\n  }\n\n  async _decrypt(payload) {\n    const key = this._key;\n\n    if (this._cryptoLib && key) {\n      const result = await this._cryptoLib.decrypt(payload, key);\n      return result;\n    }\n\n    return null;\n  }\n\n  _getStorageSession() {\n    let result = null;\n\n    if (this._sessionStorage) {\n      result = this._sessionStorage.getSession();\n    }\n\n    return result;\n  }\n\n  _setStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.setSession(this.session);\n    }\n  }\n\n  _removeStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.removeSession();\n    }\n  }\n\n  _manageStorageSession() {\n    if (this._connected) {\n      this._setStorageSession();\n    } else {\n      this._removeStorageSession();\n    }\n  }\n\n  _registerPushServer(pushServerOpts) {\n    if (!pushServerOpts.url || typeof pushServerOpts.url !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.url parameter value\");\n    }\n\n    if (!pushServerOpts.type || typeof pushServerOpts.type !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.type parameter value\");\n    }\n\n    if (!pushServerOpts.token || typeof pushServerOpts.token !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.token parameter value\");\n    }\n\n    const pushSubscription = {\n      bridge: this.bridge,\n      topic: this.clientId,\n      type: pushServerOpts.type,\n      token: pushServerOpts.token,\n      peerName: \"\",\n      language: pushServerOpts.language || \"\"\n    };\n    this.on(\"connect\", async (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      if (pushServerOpts.peerMeta) {\n        const peerName = payload.params[0].peerMeta.name;\n        pushSubscription.peerName = peerName;\n      }\n\n      try {\n        const response = await fetch(`${pushServerOpts.url}/new`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(pushSubscription)\n        });\n        const json = await response.json();\n\n        if (!json.success) {\n          throw Error(\"Failed to register in Push Server\");\n        }\n      } catch (error) {\n        throw Error(\"Failed to register in Push Server\");\n      }\n    });\n  }\n\n}\n\nexport default Connector;","map":{"version":3,"mappings":"AA8BA,SACEA,iBADF,EAEEC,oBAFF,EAGEC,uBAHF,EAIEC,uBAJF,EAKEC,aALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,cARF,EASEC,qBATF,EAUEC,kBAVF,EAWEC,wBAXF,EAYEC,sBAZF,EAaEC,eAbF,EAcEC,QAdF,EAeEC,cAfF,EAgBEC,mBAhBF,EAiBEC,QAjBF,EAkBEC,WAlBF,QAmBO,oBAnBP;AAoBA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SACEC,uBADF,EAEEC,0BAFF,EAGEC,sBAHF,EAIEC,sBAJF,EAKEC,oBALF,EAMEC,mBANF,EAOEC,oBAPF,EAQEC,gBARF,EASEC,sBATF,EAUEC,iBAVF,EAWEC,sBAXF,EAYEC,+BAZF,EAaEC,8BAbF,QAcO,UAdP;AAeA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,SAASC,YAAT,QAA6B,OAA7B;;AAIA,MAAMC,SAAN,CAAe;EAoDbC,YAAYC,IAAZ,EAAgC;IAnDhB,gBAAW,IAAX;IACA,eAAU,CAAV;IAIR,eAAU,EAAV;IACA,YAA2B,IAA3B;IAIA,iBAAY,EAAZ;IACA,mBAAkC,IAAlC;IAIA,eAAU,EAAV;IACA,iBAAgC,IAAhC;IAIA,oBAAe,CAAf;IACA,uBAAkB,EAAlB;IAIA,kBAAa,KAAb;IACA,iBAAsB,EAAtB;IACA,gBAAW,EAAX;IACA,kBAAa,EAAb;IACA,eAAU,EAAV;IACA,yBAAoB,EAApB;IACA,gBAA0C,EAA1C;IAMA,qBAA8B,IAAIL,YAAJ,EAA9B;IAeN,KAAKM,WAAL,GAAmBD,IAAI,CAACE,aAAL,CAAmBC,UAAnB,IAAiCpC,aAAa,EAA9C,IAAoD,IAAvE;IACA,KAAKqC,UAAL,GAAkBJ,IAAI,CAACK,SAAvB;IACA,KAAKC,eAAL,GAAuBN,IAAI,CAACO,cAAL,IAAuB,IAAIX,cAAJ,CAAmBI,IAAI,CAACE,aAAL,CAAmBM,SAAtC,CAA9C;IACA,KAAKC,YAAL,GAAoBT,IAAI,CAACE,aAAL,CAAmBQ,WAAvC;IACA,KAAKC,mBAAL,GAA2BX,IAAI,CAACE,aAAL,CAAmBU,kBAA9C;IACA,KAAKC,eAAL,GAAuB,CAAC,GAAGpC,cAAJ,EAAoB,IAAIuB,IAAI,CAACE,aAAL,CAAmBzB,cAAnB,IAAqC,EAAzC,CAApB,CAAvB;;IAEA,IAAI,CAACuB,IAAI,CAACE,aAAL,CAAmBY,MAApB,IAA8B,CAACd,IAAI,CAACE,aAAL,CAAmBa,GAAlD,IAAyD,CAACf,IAAI,CAACE,aAAL,CAAmBc,OAAjF,EAA0F;MACxF,MAAM,IAAIC,KAAJ,CAAUzB,sBAAV,CAAN;IACD;;IAED,IAAIQ,IAAI,CAACE,aAAL,CAAmBY,MAAvB,EAA+B;MAC7B,KAAKA,MAAL,GAAcjB,YAAY,CAACG,IAAI,CAACE,aAAL,CAAmBY,MAApB,CAA1B;IACD;;IAED,IAAId,IAAI,CAACE,aAAL,CAAmBa,GAAvB,EAA4B;MAC1B,KAAKA,GAAL,GAAWf,IAAI,CAACE,aAAL,CAAmBa,GAA9B;IACD;;IAED,MAAMC,OAAO,GAAGhB,IAAI,CAACE,aAAL,CAAmBc,OAAnB,IAA8B,KAAKE,kBAAL,EAA9C;;IAEA,IAAIF,OAAJ,EAAa;MACX,KAAKA,OAAL,GAAeA,OAAf;IACD;;IAED,IAAI,KAAKG,WAAT,EAAsB;MACpB,KAAKC,2BAAL,CAAiC,KAAKD,WAAtC,EAAmD,0BAAnD;IACD;;IAED,KAAKE,UAAL,GACErB,IAAI,CAACsB,SAAL,IACA,IAAIzC,eAAJ,CAAoB;MAClB0C,QAAQ,EAAE,KAAKA,QADG;MAElBC,OAAO,EAAE,KAAKA,OAFI;MAGlBC,GAAG,EAAE,KAAKX,MAHQ;MAIlBY,aAAa,EAAE,CAAC,KAAKC,QAAN;IAJG,CAApB,CAFF;;IASA,KAAKC,0BAAL;;IACA,KAAKC,cAAL;;IAEA,IAAI7B,IAAI,CAACE,aAAL,CAAmBa,GAAvB,EAA4B;MAC1B,KAAKe,0BAAL;IACD;;IAED,IAAI9B,IAAI,CAAC+B,cAAT,EAAyB;MACvB,KAAKC,mBAAL,CAAyBhC,IAAI,CAAC+B,cAA9B;IACD;EACF;;EAIS,IAANjB,MAAM,CAACmB,KAAD,EAAc;IACtB,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,KAAKC,OAAL,GAAeD,KAAf;EACD;;EAES,IAANnB,MAAM;IACR,OAAO,KAAKoB,OAAZ;EACD;;EAEM,IAAHC,GAAG,CAACF,KAAD,EAAc;IACnB,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,MAAME,GAAG,GAAgBrE,uBAAuB,CAACmE,KAAD,CAAhD;IACA,KAAKG,IAAL,GAAYD,GAAZ;EACD;;EAEM,IAAHA,GAAG;IACL,IAAI,KAAKC,IAAT,EAAe;MACb,MAAMD,GAAG,GAAWtE,uBAAuB,CAAC,KAAKuE,IAAN,EAAY,IAAZ,CAA3C;MACA,OAAOD,GAAP;IACD;;IACD,OAAO,EAAP;EACD;;EAEW,IAARR,QAAQ,CAACM,KAAD,EAAc;IACxB,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,KAAKI,SAAL,GAAiBJ,KAAjB;EACD;;EAEW,IAARN,QAAQ;IACV,IAAIA,QAAQ,GAAkB,KAAKU,SAAnC;;IACA,IAAI,CAACV,QAAL,EAAe;MACbA,QAAQ,GAAG,KAAKU,SAAL,GAAiBpE,IAAI,EAAhC;IACD;;IAED,OAAO,KAAKoE,SAAZ;EACD;;EAES,IAANC,MAAM,CAACL,KAAD,EAAM;IACd,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,KAAKM,OAAL,GAAeN,KAAf;EACD;;EAES,IAANK,MAAM;IACR,OAAO,KAAKC,OAAZ;EACD;;EAEa,IAAVpC,UAAU,CAAC8B,KAAD,EAAM,CAEnB;;EAEa,IAAV9B,UAAU;IACZ,IAAIA,UAAU,GAAuB,KAAKF,WAA1C;;IACA,IAAI,CAACE,UAAL,EAAiB;MACfA,UAAU,GAAG,KAAKF,WAAL,GAAmBlC,aAAa,EAA7C;IACD;;IACD,OAAOoC,UAAP;EACD;;EAEW,IAARqC,QAAQ,CAACP,KAAD,EAAM;IAChB,KAAKQ,SAAL,GAAiBR,KAAjB;EACD;;EAEW,IAARO,QAAQ;IACV,MAAMA,QAAQ,GAAuB,KAAKC,SAA1C;IACA,OAAOD,QAAP;EACD;;EAEmB,IAAhBE,gBAAgB,CAACT,KAAD,EAAM;IACxB,KAAKU,iBAAL,GAAyBV,KAAzB;EACD;;EAEmB,IAAhBS,gBAAgB;IAClB,MAAMA,gBAAgB,GAAkB,KAAKC,iBAA7C;IACA,OAAOD,gBAAP;EACD;;EAEU,IAAPE,OAAO,CAACX,KAAD,EAAM;IACf,KAAKY,QAAL,GAAgBZ,KAAhB;EACD;;EAEU,IAAPW,OAAO;IACT,MAAMA,OAAO,GAAkC,KAAKC,QAApD;IACA,OAAOD,OAAP;EACD;;EAEiB,IAAdE,cAAc,CAACb,KAAD,EAAM;IACtB,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,KAAKc,eAAL,GAAuBd,KAAvB;EACD;;EAEiB,IAAda,cAAc;IAChB,OAAO,KAAKC,eAAZ;EACD;;EAEc,IAAX5B,WAAW,CAACc,KAAD,EAAM;IACnB,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,KAAKe,YAAL,GAAoBf,KAApB;EACD;;EAEc,IAAXd,WAAW;IACb,OAAO,KAAK6B,YAAZ;EACD;;EAEM,IAAHjC,GAAG;IACL,MAAMkC,IAAI,GAAG,KAAKC,UAAL,EAAb;;IACA,OAAOD,IAAP;EACD;;EAEM,IAAHlC,GAAG,CAACkB,KAAD,EAAM;IACX,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,MAAM;MAAEa,cAAF;MAAkBhC,MAAlB;MAA0BqB;IAA1B,IAAkC,KAAKgB,SAAL,CAAelB,KAAf,CAAxC;;IACA,KAAKa,cAAL,GAAsBA,cAAtB;IACA,KAAKhC,MAAL,GAAcA,MAAd;IACA,KAAKqB,GAAL,GAAWA,GAAX;EACD;;EAEU,IAAPiB,OAAO,CAACnB,KAAD,EAAM;IACf,KAAKoB,QAAL,GAAgBpB,KAAhB;EACD;;EAEU,IAAPmB,OAAO;IACT,MAAMA,OAAO,GAAW,KAAKC,QAA7B;IACA,OAAOD,OAAP;EACD;;EAEY,IAATE,SAAS,CAACrB,KAAD,EAAM;IACjB,KAAKsB,UAAL,GAAkBtB,KAAlB;EACD;;EAEY,IAATqB,SAAS;IACX,MAAMA,SAAS,GAAW,KAAKC,UAA/B;IACA,OAAOD,SAAP;EACD;;EAEW,IAARE,QAAQ,CAACvB,KAAD,EAAM;IAChB,KAAKwB,SAAL,GAAiBxB,KAAjB;EACD;;EAEW,IAARuB,QAAQ;IACV,MAAMA,QAAQ,GAAoB,KAAKC,SAAvC;IACA,OAAOD,QAAP;EACD;;EAES,IAANE,MAAM,CAACzB,KAAD,EAAM;IACd,KAAK0B,OAAL,GAAe1B,KAAf;EACD;;EAES,IAANyB,MAAM;IACR,MAAMA,MAAM,GAAkB,KAAKC,OAAnC;IACA,OAAOD,MAAP;EACD;;EAEY,IAATE,SAAS,CAAC3B,KAAD,EAAM,CAElB;;EAEY,IAAT2B,SAAS;IACX,OAAO,KAAKC,UAAZ;EACD;;EAEU,IAAPC,OAAO,CAAC7B,KAAD,EAAM,CAEhB;;EAEU,IAAP6B,OAAO;IACT,OAAO,CAAC,CAAC,KAAKf,eAAd;EACD;;EAEU,IAAP/B,OAAO;IACT,OAAO;MACL4C,SAAS,EAAE,KAAKA,SADX;MAELJ,QAAQ,EAAE,KAAKA,QAFV;MAGLJ,OAAO,EAAE,KAAKA,OAHT;MAILE,SAAS,EAAE,KAAKA,SAJX;MAKLxC,MAAM,EAAE,KAAKA,MALR;MAMLqB,GAAG,EAAE,KAAKA,GANL;MAOLR,QAAQ,EAAE,KAAKA,QAPV;MAQLxB,UAAU,EAAE,KAAKA,UARZ;MASLmC,MAAM,EAAE,KAAKA,MATR;MAULE,QAAQ,EAAE,KAAKA,QAVV;MAWLrB,WAAW,EAAE,KAAKA,WAXb;MAYL2B,cAAc,EAAE,KAAKA,cAZhB;MAaLJ,gBAAgB,EAAE,KAAKA,gBAblB;MAcLE,OAAO,EAAE,KAAKA;IAdT,CAAP;EAgBD;;EAEU,IAAP5B,OAAO,CAACiB,KAAD,EAAM;IACf,IAAI,CAACA,KAAL,EAAY;MACV;IACD;;IACD,KAAK4B,UAAL,GAAkB5B,KAAK,CAAC2B,SAAxB;IACA,KAAKJ,QAAL,GAAgBvB,KAAK,CAACuB,QAAtB;IACA,KAAKJ,OAAL,GAAenB,KAAK,CAACmB,OAArB;IACA,KAAKE,SAAL,GAAiBrB,KAAK,CAACqB,SAAvB;IACA,KAAKxC,MAAL,GAAcmB,KAAK,CAACnB,MAApB;IACA,KAAKqB,GAAL,GAAWF,KAAK,CAACE,GAAjB;IACA,KAAKR,QAAL,GAAgBM,KAAK,CAACN,QAAtB;IACA,KAAKxB,UAAL,GAAkB8B,KAAK,CAAC9B,UAAxB;IACA,KAAKmC,MAAL,GAAcL,KAAK,CAACK,MAApB;IACA,KAAKE,QAAL,GAAgBP,KAAK,CAACO,QAAtB;IACA,KAAKrB,WAAL,GAAmBc,KAAK,CAACd,WAAzB;IACA,KAAK2B,cAAL,GAAsBb,KAAK,CAACa,cAA5B;IACA,KAAKJ,gBAAL,GAAwBT,KAAK,CAACS,gBAA9B;IACA,KAAKE,OAAL,GAAeX,KAAK,CAACW,OAArB;EACD;;EAIMmB,EAAE,CAACC,KAAD,EAAgBC,QAAhB,EAA2F;IAClG,MAAMC,YAAY,GAAG;MACnBF,KADmB;MAEnBC;IAFmB,CAArB;;IAIA,KAAKE,aAAL,CAAmBC,SAAnB,CAA6BF,YAA7B;EACD;;EAEMG,GAAG,CAACL,KAAD,EAAc;IACtB,KAAKG,aAAL,CAAmBG,WAAnB,CAA+BN,KAA/B;EACD;;EAEgC,MAApBO,oBAAoB,CAACC,cAAD,EAAyC;IACxE,KAAKpC,IAAL,GAAY,MAAM,KAAKqC,YAAL,EAAlB;;IAEA,MAAMC,OAAO,GAAoB,KAAKC,cAAL,CAAoB;MACnDC,MAAM,EAAE,mBAD2C;MAEnDC,MAAM,EAAE,CACN;QACEvC,MAAM,EAAE,KAAKX,QADf;QAEEa,QAAQ,EAAE,KAAKrC,UAFjB;QAGEuE,OAAO,EAAE,KAAKC,cAAL,CAAoBH,cAApB;MAHX,CADM;IAF2C,CAApB,CAAjC;;IAWA,KAAKrD,WAAL,GAAmBuD,OAAO,CAACI,EAA3B;IACA,KAAKhC,cAAL,GAAsB7E,IAAI,EAA1B;;IAEA,KAAKkG,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,aADkB;MAEzBa,MAAM,EAAE,CAAC,KAAK9D,GAAN;IAFiB,CAA3B;;IAKA,KAAKgD,EAAL,CAAQ,cAAR,EAAwB,MAAK;MAC3B,MAAM,IAAI9C,KAAJ,CAAUvB,8BAAV,CAAN;IACD,CAFD;;IAIA,MAAMsF,iBAAiB,GAAG,MAAK;MAC7B,KAAKC,WAAL;IACD,CAFD;;IAIA,IAAI;MACF,MAAMC,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;;MAEA,IAAIQ,MAAJ,EAAY;QACVF,iBAAiB;MAClB;;MAED,OAAOE,MAAP;IACD,CARD,CAQE,OAAOE,KAAP,EAAc;MACdJ,iBAAiB;MACjB,MAAMI,KAAN;IACD;EACF;;EAEmB,MAAPC,OAAO,CAACrF,IAAD,EAA6B;IAC/C,IAAI,CAAC,KAAKS,YAAV,EAAwB;MACtB,MAAM,IAAIQ,KAAJ,CAAUxB,+BAAV,CAAN;IACD;;IAED,IAAI,KAAKmE,SAAT,EAAoB;MAClB,OAAO;QACLR,OAAO,EAAE,KAAKA,OADT;QAELE,SAAS,EAAE,KAAKA,SAFX;QAGLE,QAAQ,EAAE,KAAKA,QAHV;QAILd,gBAAgB,EAAE,KAAKA,gBAJlB;QAKLE,OAAO,EAAE,KAAKA;MALT,CAAP;IAOD;;IAED,MAAM,KAAK0C,aAAL,CAAmBtF,IAAnB,CAAN;IAEA,OAAO,IAAIuF,OAAJ,CAA4B,OAAOC,OAAP,EAAgBC,MAAhB,KAA0B;MAC3D,KAAK1B,EAAL,CAAQ,cAAR,EAAwB,MAAM0B,MAAM,CAAC,IAAIxE,KAAJ,CAAUvB,8BAAV,CAAD,CAApC;MAEA,KAAKqE,EAAL,CAAQ,SAAR,EAAmB,CAACqB,KAAD,EAAQM,OAAR,KAAmB;QACpC,IAAIN,KAAJ,EAAW;UACT,OAAOK,MAAM,CAACL,KAAD,CAAb;QACD;;QAEDI,OAAO,CAACE,OAAO,CAACb,MAAR,CAAe,CAAf,CAAD,CAAP;MACD,CAND;IAOD,CAVM,CAAP;EAWD;;EAEyB,MAAbS,aAAa,CAACtF,IAAD,EAA6B;;;IACrD,IAAI,KAAK6D,UAAT,EAAqB;MACnB,MAAM,IAAI5C,KAAJ,CAAUnC,uBAAV,CAAN;IACD;;IAED,IAAI,KAAKgF,OAAT,EAAkB;MAChB;IACD;;IAED,KAAK1B,IAAL,GAAY,MAAM,KAAKqC,YAAL,EAAlB;;IAEA,MAAMC,OAAO,GAAoB,KAAKC,cAAL,CAAoB;MACnDC,MAAM,EAAE,mBAD2C;MAEnDC,MAAM,EAAE,CACN;QACEvC,MAAM,EAAE,KAAKX,QADf;QAEEa,QAAQ,EAAE,KAAKrC,UAFjB;QAGEiD,OAAO,EAAE,UAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,OAAN,MAAa,IAAb,IAAauC,aAAb,GAAaA,EAAb,GAAiB,IAH5B;QAIErC,SAAS,EAAE,UAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,SAAN,MAAe,IAAf,IAAesC,aAAf,GAAeA,EAAf,GAAmB,IAJhC;QAKEC,YAAY,EAAE,UAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,YAAN,MAAkB,IAAlB,IAAkBC,aAAlB,GAAkBA,EAAlB,GAAsB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf;MALtC,CADM;IAF2C,CAApB,CAAjC;;IAaA,KAAK3E,WAAL,GAAmBuD,OAAO,CAACI,EAA3B;IACA,KAAKhC,cAAL,GAAsB7E,IAAI,EAA1B;;IAEA,KAAK8H,mBAAL,CAAyBrB,OAAzB,EAAkC,yBAAlC,EAA6D;MAC3DsB,KAAK,EAAE,KAAKlD;IAD+C,CAA7D;;IAIA,KAAKqB,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,aADkB;MAEzBa,MAAM,EAAE,CAAC,KAAK9D,GAAN;IAFiB,CAA3B;EAID;;EAEMkF,cAAc,CAACC,aAAD,EAA8B;IACjD,IAAI,KAAKrC,UAAT,EAAqB;MACnB,MAAM,IAAI5C,KAAJ,CAAUnC,uBAAV,CAAN;IACD;;IAED,KAAKsE,OAAL,GAAe8C,aAAa,CAAC9C,OAA7B;IACA,KAAKI,QAAL,GAAgB0C,aAAa,CAAC1C,QAA9B;IACA,KAAKF,SAAL,GAAiB4C,aAAa,CAAC5C,SAAd,IAA2B,KAA5C;IACA,KAAKI,MAAL,GAAcwC,aAAa,CAACxC,MAAd,IAAwB,EAAtC;IACA,KAAKhB,gBAAL,GAAwBwD,aAAa,CAACxD,gBAAtC;IACA,KAAKE,OAAL,GAAesD,aAAa,CAACtD,OAA7B;IAEA,MAAMuD,aAAa,GAAmB;MACpCC,QAAQ,EAAE,IAD0B;MAEpChD,OAAO,EAAE,KAAKA,OAFsB;MAGpCE,SAAS,EAAE,KAAKA,SAHoB;MAIpCE,QAAQ,EAAE,KAAKA,QAJqB;MAKpCE,MAAM,EAAE,KAAKA,MALuB;MAMpCpB,MAAM,EAAE,KAAKX,QANuB;MAOpCa,QAAQ,EAAE,KAAKrC,UAPqB;MAQpCuC,gBAAgB,EAAE,KAAKA,gBARa;MASpCE,OAAO,EAAE,KAAKA;IATsB,CAAtC;IAYA,MAAMyD,QAAQ,GAAG;MACfvB,EAAE,EAAE,KAAK3D,WADM;MAEfmF,OAAO,EAAE,KAFM;MAGfpB,MAAM,EAAEiB;IAHO,CAAjB;;IAMA,KAAKI,aAAL,CAAmBF,QAAnB;;IAEA,KAAKxC,UAAL,GAAkB,IAAlB;;IACA,KAAK2C,kBAAL;;IACA,KAAKrC,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,SADkB;MAEzBa,MAAM,EAAE,CACN;QACEvC,MAAM,EAAE,KAAKA,MADf;QAEEE,QAAQ,EAAE,KAAKA,QAFjB;QAGEY,OAAO,EAAE,KAAKA,OAHhB;QAIEE,SAAS,EAAE,KAAKA,SAJlB;QAKEE,QAAQ,EAAE,KAAKA,QALjB;QAMEd,gBAAgB,EAAE,KAAKA,gBANzB;QAOEE,OAAO,EAAE,KAAKA;MAPhB,CADM;IAFiB,CAA3B;EAcD;;EAEM6D,aAAa,CAACC,YAAD,EAA6B;IAC/C,IAAI,KAAK7C,UAAT,EAAqB;MACnB,MAAM,IAAI5C,KAAJ,CAAUnC,uBAAV,CAAN;IACD;;IAED,MAAM6H,OAAO,GACXD,YAAY,IAAIA,YAAY,CAACC,OAA7B,GAAuCD,YAAY,CAACC,OAApD,GAA8D3H,sBADhE;;IAGA,MAAMqH,QAAQ,GAAG,KAAKO,eAAL,CAAqB;MACpC9B,EAAE,EAAE,KAAK3D,WAD2B;MAEpCiE,KAAK,EAAE;QAAEuB;MAAF;IAF6B,CAArB,CAAjB;;IAKA,KAAKJ,aAAL,CAAmBF,QAAnB;;IAEA,KAAKxC,UAAL,GAAkB,KAAlB;;IACA,KAAKM,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,YADkB;MAEzBa,MAAM,EAAE,CAAC;QAAE8B;MAAF,CAAD;IAFiB,CAA3B;;IAIA,KAAKE,qBAAL;EACD;;EAEMC,aAAa,CAACZ,aAAD,EAA8B;IAChD,IAAI,CAAC,KAAKrC,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;IACD;;IAED,KAAKqE,OAAL,GAAe8C,aAAa,CAAC9C,OAA7B;IACA,KAAKI,QAAL,GAAgB0C,aAAa,CAAC1C,QAA9B;IACA,KAAKF,SAAL,GAAiB4C,aAAa,CAAC5C,SAAd,IAA2B,EAA5C;IACA,KAAKI,MAAL,GAAcwC,aAAa,CAACxC,MAAd,IAAwB,EAAtC;IACA,KAAKhB,gBAAL,GAAwBwD,aAAa,CAACxD,gBAAtC;IACA,KAAKE,OAAL,GAAesD,aAAa,CAACtD,OAA7B;IAEA,MAAMuD,aAAa,GAAmB;MACpCC,QAAQ,EAAE,IAD0B;MAEpChD,OAAO,EAAE,KAAKA,OAFsB;MAGpCE,SAAS,EAAE,KAAKA,SAHoB;MAIpCE,QAAQ,EAAE,KAAKA,QAJqB;MAKpCE,MAAM,EAAE,KAAKA,MALuB;MAMpChB,gBAAgB,EAAE,KAAKA,gBANa;MAOpCE,OAAO,EAAE,KAAKA;IAPsB,CAAtC;;IAUA,MAAM8B,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,kBAD0B;MAElCC,MAAM,EAAE,CAACsB,aAAD;IAF0B,CAApB,CAAhB;;IAKA,KAAKJ,mBAAL,CAAyBrB,OAAzB,EAAkC,yBAAlC;;IAEA,KAAKP,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,gBADkB;MAEzBa,MAAM,EAAE,CACN;QACEzB,OAAO,EAAE,KAAKA,OADhB;QAEEE,SAAS,EAAE,KAAKA,SAFlB;QAGEE,QAAQ,EAAE,KAAKA,QAHjB;QAIEd,gBAAgB,EAAE,KAAKA,gBAJzB;QAKEE,OAAO,EAAE,KAAKA;MALhB,CADM;IAFiB,CAA3B;;IAaA,KAAKmE,qBAAL;EACD;;EAEuB,MAAX9B,WAAW,CAACyB,YAAD,EAA6B;IACnD,MAAMC,OAAO,GAAGD,YAAY,GAAGA,YAAY,CAACC,OAAhB,GAA0B,sBAAtD;IAEA,MAAMR,aAAa,GAAmB;MACpCC,QAAQ,EAAE,KAD0B;MAEpChD,OAAO,EAAE,IAF2B;MAGpCE,SAAS,EAAE,IAHyB;MAIpCE,QAAQ,EAAE,IAJ0B;MAKpCd,gBAAgB,EAAE,IALkB;MAMpCE,OAAO,EAAE;IAN2B,CAAtC;;IASA,MAAM8B,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,kBAD0B;MAElCC,MAAM,EAAE,CAACsB,aAAD;IAF0B,CAApB,CAAhB;;IAKA,MAAM,KAAKa,YAAL,CAAkBtC,OAAlB,CAAN;;IAEA,KAAKuC,wBAAL,CAA8BN,OAA9B;EACD;;EAE2B,MAAfO,eAAe,CAACC,EAAD,EAAY;IACtC,IAAI,CAAC,KAAKtD,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;IACD;;IAED,MAAMqI,QAAQ,GAAGxJ,oBAAoB,CAACuJ,EAAD,CAArC;;IAEA,MAAMzC,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,qBAD0B;MAElCC,MAAM,EAAE,CAACuC,QAAD;IAF0B,CAApB,CAAhB;;IAKA,MAAMlC,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;IACA,OAAOQ,MAAP;EACD;;EAE2B,MAAfmC,eAAe,CAACC,WAAD,EAIzBC,OAJyB,EAIA;;;IAC1B,MAAM7C,OAAO,GAAoB;MAC/BI,EAAE,EAAE9G,SAAS,EADkB;MAE/BsI,OAAO,EAAE,KAFsB;MAG/B1B,MAAM,EAAE0C,WAAW,CAAC1C,MAHW;MAI/BC,MAAM,EAAE,iBAAW,CAACA,MAAZ,MAAkB,IAAlB,IAAkBc,aAAlB,GAAkBA,EAAlB,GAAsB,EAJC;MAK/B3E,OAAO,EAAEsG,WAAW,CAACtG;IALU,CAAjC;IAQA,MAAMwG,iBAAiB,GAA8B,MAAM,KAAKC,QAAL,CAAc/C,OAAd,CAA3D;IACA,MAAMsB,KAAK,GAAW,KAAK1D,MAA3B;IACA,MAAMoD,OAAO,GAAWgC,IAAI,CAACC,SAAL,CAAeH,iBAAf,CAAxB;IACA,MAAMI,MAAM,GAAG,QAACL,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEM,qBAAV,OAA+B,IAA/B,IAA+BjC,aAA/B,GAA+BA,EAA/B,GAAmCrH,eAAe,CAACmG,OAAD,CAAjE;;IAEA,KAAKrD,UAAL,CAAgByG,IAAhB,CAAqBpC,OAArB,EAA8BM,KAA9B,EAAqC4B,MAArC;;IAEA,KAAKzD,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,mBADkB;MAEzBa,MAAM,EAAE,CAAC;QAAEH,OAAF;QAAW6C;MAAX,CAAD;IAFiB,CAA3B;;IAIA,OAAO,KAAKQ,wBAAL,CAA8BrD,OAAO,CAACI,EAAtC,CAAP;EACD;;EAE2B,MAAfkD,eAAe,CAACb,EAAD,EAAY;IACtC,IAAI,CAAC,KAAKtD,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;IACD;;IAED,MAAMqI,QAAQ,GAAGxJ,oBAAoB,CAACuJ,EAAD,CAArC;;IAEA,MAAMzC,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,qBAD0B;MAElCC,MAAM,EAAE,CAACuC,QAAD;IAF0B,CAApB,CAAhB;;IAKA,MAAMlC,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;IACA,OAAOQ,MAAP;EACD;;EAEuB,MAAX+C,WAAW,CAACpD,MAAD,EAAc;IACpC,IAAI,CAAC,KAAKhB,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;IACD;;IAED,MAAM2F,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,UAD0B;MAElCC;IAFkC,CAApB,CAAhB;;IAKA,MAAMK,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;IACA,OAAOQ,MAAP;EACD;;EAE+B,MAAnBgD,mBAAmB,CAACrD,MAAD,EAAc;IAC5C,IAAI,CAAC,KAAKhB,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;IACD;;IAED8F,MAAM,GAAGlH,iBAAiB,CAACkH,MAAD,CAA1B;;IAEA,MAAMH,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,eAD0B;MAElCC;IAFkC,CAApB,CAAhB;;IAKA,MAAMK,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;IACA,OAAOQ,MAAP;EACD;;EAEyB,MAAbiD,aAAa,CAACtD,MAAD,EAAc;IACtC,IAAI,CAAC,KAAKhB,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;IACD;;IAED,MAAM2F,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,mBAD0B;MAElCC;IAFkC,CAApB,CAAhB;;IAKA,MAAMK,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;IACA,OAAOQ,MAAP;EACD;;EAEuB,MAAXkD,WAAW,CAACC,WAAD,EAAgC;IACtD,IAAI,CAAC,KAAKxE,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAU,gCAAV,CAAN;IACD;;IAED,MAAMyD,OAAO,GAAG,KAAKC,cAAL,CAAoB;MAClCC,MAAM,EAAE,oBAD0B;MAElCC,MAAM,EAAE,CAACwD,WAAD;IAF0B,CAApB,CAAhB;;IAKA,MAAMnD,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;IACA,OAAOQ,MAAP;EACD;;EAEMoD,UAAU,CACf5D,OADe,EAEf6C,OAFe,EAEU;IAEzB,KAAKP,YAAL,CAAkBtC,OAAlB,EAA2B6C,OAA3B;;IAEA,KAAKpD,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,mBADkB;MAEzBa,MAAM,EAAE,CAAC;QAAEH,OAAF;QAAW6C;MAAX,CAAD;IAFiB,CAA3B;;IAKA,OAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MACrC,KAAK8C,oBAAL,CAA0B7D,OAAO,CAACI,EAAlC,EAAsC,CAACM,KAAD,EAAqCM,OAArC,KAA4D;QAChG,IAAIN,KAAJ,EAAW;UACTK,MAAM,CAACL,KAAD,CAAN;UACA;QACD;;QACD,IAAI,CAACM,OAAL,EAAc;UACZ,MAAM,IAAIzE,KAAJ,CAAUhC,sBAAV,CAAN;QACD;;QACDuG,OAAO,CAACE,OAAD,CAAP;MACD,CATD;IAUD,CAXM,CAAP;EAYD;;EAE6B,MAAjB8C,iBAAiB,CAAC9D,OAAD,EAAoC6C,OAApC,EAA6D;IACzF,IAAI,CAAC,KAAK1D,UAAV,EAAsB;MACpB,MAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;IACD;;IAED,QAAQ2F,OAAO,CAACE,MAAhB;MACE,KAAK,cAAL;QACE,OAAO,KAAKpB,QAAZ;;MACF,KAAK,aAAL;QACE,OAAOpF,kBAAkB,CAAC,KAAKgF,OAAN,CAAzB;;MACF,KAAK,qBAAL;MACA,KAAK,qBAAL;QACE,IAAIsB,OAAO,CAACG,MAAZ,EAAoB;UAClBH,OAAO,CAACG,MAAR,CAAe,CAAf,IAAoBjH,oBAAoB,CAAC8G,OAAO,CAACG,MAAR,CAAe,CAAf,CAAD,CAAxC;QACD;;QACD;;MACF,KAAK,eAAL;QACE,IAAIH,OAAO,CAACG,MAAZ,EAAoB;UAClBH,OAAO,CAACG,MAAR,GAAiBlH,iBAAiB,CAAC+G,OAAO,CAACG,MAAT,CAAlC;QACD;;QACD;;MACF;QACE;IAjBJ;;IAoBA,MAAM4D,gBAAgB,GAAG,KAAK9D,cAAL,CAAoBD,OAApB,CAAzB;;IAEA,MAAMQ,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBsD,gBAAtB,EAAwClB,OAAxC,CAArB;IACA,OAAOrC,MAAP;EACD;;EAEMwD,cAAc,CAACrC,QAAD,EAA2C;IAC9D,IAAIhI,wBAAwB,CAACgI,QAAD,CAA5B,EAAwC;MACtC,MAAMsC,iBAAiB,GAAG,KAAK/B,eAAL,CAAqBP,QAArB,CAA1B;;MACA,KAAKE,aAAL,CAAmBoC,iBAAnB;IACD,CAHD,MAGO;MACL,MAAM,IAAI1H,KAAJ,CAAU/B,oBAAV,CAAN;IACD;EACF;;EAEM0J,aAAa,CAACvC,QAAD,EAAyC;IAC3D,IAAI/H,sBAAsB,CAAC+H,QAAD,CAA1B,EAAsC;MACpC,MAAMsC,iBAAiB,GAAG,KAAK/B,eAAL,CAAqBP,QAArB,CAA1B;;MACA,KAAKE,aAAL,CAAmBoC,iBAAnB;IACD,CAHD,MAGO;MACL,MAAM,IAAI1H,KAAJ,CAAU9B,mBAAV,CAAN;IACD;EACF;;EAEM0J,cAAc;IACnB,KAAKxH,UAAL,CAAgByH,KAAhB;EACD;;EAI2B,MAAZ9B,YAAY,CAC1BtC,OAD0B,EAE1B6C,OAF0B,EAEgB;IAE1C,MAAMwB,WAAW,GAAoB,KAAKpE,cAAL,CAAoBD,OAApB,CAArC;;IAEA,MAAM8C,iBAAiB,GAA8B,MAAM,KAAKC,QAAL,CAAcsB,WAAd,CAA3D;IAEA,MAAM/C,KAAK,GAAW,QAAOuB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEvB,KAAhB,MAA0B,WAA1B,GAAwCuB,OAAO,CAACvB,KAAhD,GAAwD,KAAK1D,MAAnF;IACA,MAAMoD,OAAO,GAAWgC,IAAI,CAACC,SAAL,CAAeH,iBAAf,CAAxB;IACA,MAAMI,MAAM,GACV,QAAOL,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEM,qBAAhB,MAA0C,WAA1C,GACI,CAACN,OAAO,CAACM,qBADb,GAEItJ,eAAe,CAACwK,WAAD,CAHrB;;IAKA,KAAK1H,UAAL,CAAgByG,IAAhB,CAAqBpC,OAArB,EAA8BM,KAA9B,EAAqC4B,MAArC;EACD;;EAE4B,MAAbrB,aAAa,CAACF,QAAD,EAA0D;IACrF,MAAMmB,iBAAiB,GAA8B,MAAM,KAAKC,QAAL,CAAcpB,QAAd,CAA3D;IAEA,MAAML,KAAK,GAAW,KAAK1D,MAA3B;IACA,MAAMoD,OAAO,GAAWgC,IAAI,CAACC,SAAL,CAAeH,iBAAf,CAAxB;IACA,MAAMI,MAAM,GAAG,IAAf;;IAEA,KAAKvG,UAAL,CAAgByG,IAAhB,CAAqBpC,OAArB,EAA8BM,KAA9B,EAAqC4B,MAArC;EACD;;EAEkC,MAAnB7B,mBAAmB,CACjCrB,OADiC,EAEjCsE,QAFiC,EAGjCzB,OAHiC,EAGA;IAEjC,KAAKP,YAAL,CAAkBtC,OAAlB,EAA2B6C,OAA3B;;IACA,KAAKnG,2BAAL,CAAiCsD,OAAO,CAACI,EAAzC,EAA6CkE,QAA7C;EACD;;EAES7D,gBAAgB,CAACT,OAAD,EAA2B6C,OAA3B,EAAoD;IAC5E,KAAKP,YAAL,CAAkBtC,OAAlB,EAA2B6C,OAA3B;;IAEA,KAAKpD,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,mBADkB;MAEzBa,MAAM,EAAE,CAAC;QAAEH,OAAF;QAAW6C;MAAX,CAAD;IAFiB,CAA3B;;IAKA,OAAO,KAAKQ,wBAAL,CAA8BrD,OAAO,CAACI,EAAtC,CAAP;EACD;;EAESH,cAAc,CAACD,OAAD,EAAkC;IACxD,IAAI,OAAOA,OAAO,CAACE,MAAf,KAA0B,WAA9B,EAA2C;MACzC,MAAM,IAAI3D,KAAJ,CAAU7B,oBAAV,CAAN;IACD;;IACD,MAAMqJ,gBAAgB,GAAoB;MACxC3D,EAAE,EAAE,OAAOJ,OAAO,CAACI,EAAf,KAAsB,WAAtB,GAAoC9G,SAAS,EAA7C,GAAkD0G,OAAO,CAACI,EADtB;MAExCwB,OAAO,EAAE,KAF+B;MAGxC1B,MAAM,EAAEF,OAAO,CAACE,MAHwB;MAIxCC,MAAM,EAAE,OAAOH,OAAO,CAACG,MAAf,KAA0B,WAA1B,GAAwC,EAAxC,GAA6CH,OAAO,CAACG,MAJrB;MAKxC7D,OAAO,EAAE;QACPoC,OAAO,EAAE,GAAG,KAAKpC,OAAL,CAAaoC,OAAO,EADzB;QAEPE,SAAS,EAAE,GAAG,KAAKtC,OAAL,CAAasC,SAAS,EAF7B;QAGP2F,OAAO,EAAE,KAAKjI,OAAL,CAAawC,QAAb,CAAsB,CAAtB;MAHF;IAL+B,CAA1C;IAWA,OAAOiF,gBAAP;EACD;;EAES7B,eAAe,CACvBP,QADuB,EAC2C;IAElE,IAAI,OAAOA,QAAQ,CAACvB,EAAhB,KAAuB,WAA3B,EAAwC;MACtC,MAAM,IAAI7D,KAAJ,CAAU5B,gBAAV,CAAN;IACD;;IAED,MAAM6J,YAAY,GAAG;MAAEpE,EAAE,EAAEuB,QAAQ,CAACvB,EAAf;MAAmBwB,OAAO,EAAE;IAA5B,CAArB;;IAEA,IAAIhI,sBAAsB,CAAC+H,QAAD,CAA1B,EAAsC;MACpC,MAAMjB,KAAK,GAAGlH,cAAc,CAACmI,QAAQ,CAACjB,KAAV,CAA5B;MAEA,MAAM+D,aAAa,iDACdD,YADc,GAEd7C,QAFc,GAEN;QACXjB;MADW,CAFM,CAAnB;MAKA,OAAO+D,aAAP;IACD,CATD,MASO,IAAI9K,wBAAwB,CAACgI,QAAD,CAA5B,EAAwC;MAC7C,MAAM+C,eAAe,mCAChBF,YADgB,GAEhB7C,QAFgB,CAArB;MAKA,OAAO+C,eAAP;IACD;;IAED,MAAM,IAAInI,KAAJ,CAAU3B,sBAAV,CAAN;EACD;;EAEO2H,wBAAwB,CAAC+B,QAAD,EAAkB;IAChD,MAAMrC,OAAO,GAAGqC,QAAQ,IAAI,sBAA5B;;IACA,IAAI,CAAC,KAAKnF,UAAV,EAAsB;MACpB,IAAI,KAAKpD,YAAT,EAAuB;QACrB,KAAKA,YAAL,CAAkBqI,KAAlB;MACD;;MACDlK,WAAW,CAACF,mBAAD,CAAX;IACD;;IACD,IAAI,KAAKmF,UAAT,EAAqB;MACnB,KAAKA,UAAL,GAAkB,KAAlB;IACD;;IACD,IAAI,KAAKb,YAAT,EAAuB;MACrB,KAAKA,YAAL,GAAoB,CAApB;IACD;;IACD,IAAI,KAAKD,eAAT,EAA0B;MACxB,KAAKA,eAAL,GAAuB,EAAvB;IACD;;IACD,KAAKoB,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,YADkB;MAEzBa,MAAM,EAAE,CAAC;QAAE8B;MAAF,CAAD;IAFiB,CAA3B;;IAIA,KAAKE,qBAAL;;IACA,KAAKgC,cAAL;EACD;;EAEOQ,sBAAsB,CAACL,QAAD,EAAmB7C,aAAnB,EAAiD;IAC7E,IAAIA,aAAJ,EAAmB;MACjB,IAAIA,aAAa,CAACC,QAAlB,EAA4B;QAC1B,IAAI,CAAC,KAAKvC,UAAV,EAAsB;UACpB,KAAKA,UAAL,GAAkB,IAAlB;;UAEA,IAAIsC,aAAa,CAAC/C,OAAlB,EAA2B;YACzB,KAAKA,OAAL,GAAe+C,aAAa,CAAC/C,OAA7B;UACD;;UAED,IAAI+C,aAAa,CAAC7C,SAAlB,EAA6B;YAC3B,KAAKA,SAAL,GAAiB6C,aAAa,CAAC7C,SAA/B;UACD;;UAED,IAAI6C,aAAa,CAAC3C,QAAlB,EAA4B;YAC1B,KAAKA,QAAL,GAAgB2C,aAAa,CAAC3C,QAA9B;UACD;;UAED,IAAI2C,aAAa,CAACvD,OAAlB,EAA2B;YACzB,KAAKA,OAAL,GAAeuD,aAAa,CAACvD,OAA7B;UACD;;UAED,IAAIuD,aAAa,CAACzD,gBAAlB,EAAoC;YAClC,KAAKA,gBAAL,GAAwByD,aAAa,CAACzD,gBAAtC;UACD;;UAED,IAAIyD,aAAa,CAAC7D,MAAd,IAAwB,CAAC,KAAKA,MAAlC,EAA0C;YACxC,KAAKA,MAAL,GAAc6D,aAAa,CAAC7D,MAA5B;UACD;;UAED,IAAI6D,aAAa,CAAC3D,QAAd,IAA0B,CAAC,KAAKA,QAApC,EAA8C;YAC5C,KAAKA,QAAL,GAAgB2D,aAAa,CAAC3D,QAA9B;UACD;;UAED,IAAI2D,aAAa,CAACvD,OAAd,IAAyB,CAAC,KAAKA,OAAnC,EAA4C;YAC1C,KAAKA,OAAL,GAAeuD,aAAa,CAACvD,OAA7B;UACD;;UAED,KAAKuB,aAAL,CAAmBY,OAAnB,CAA2B;YACzBf,KAAK,EAAE,SADkB;YAEzBa,MAAM,EAAE,CACN;cACEvC,MAAM,EAAE,KAAKA,MADf;cAEEE,QAAQ,EAAE,KAAKA,QAFjB;cAGEY,OAAO,EAAE,KAAKA,OAHhB;cAIEE,SAAS,EAAE,KAAKA,SAJlB;cAKEE,QAAQ,EAAE,KAAKA,QALjB;cAMEd,gBAAgB,EAAE,KAAKA,gBANzB;cAOEE,OAAO,EAAE,KAAKA;YAPhB,CADM;UAFiB,CAA3B;QAcD,CAjDD,MAiDO;UACL,IAAIuD,aAAa,CAAC/C,OAAlB,EAA2B;YACzB,KAAKA,OAAL,GAAe+C,aAAa,CAAC/C,OAA7B;UACD;;UACD,IAAI+C,aAAa,CAAC7C,SAAlB,EAA6B;YAC3B,KAAKA,SAAL,GAAiB6C,aAAa,CAAC7C,SAA/B;UACD;;UACD,IAAI6C,aAAa,CAAC3C,QAAlB,EAA4B;YAC1B,KAAKA,QAAL,GAAgB2C,aAAa,CAAC3C,QAA9B;UACD;;UACD,IAAI2C,aAAa,CAACvD,OAAlB,EAA2B;YACzB,KAAKA,OAAL,GAAeuD,aAAa,CAACvD,OAA7B;UACD;;UACD,IAAIuD,aAAa,CAACzD,gBAAlB,EAAoC;YAClC,KAAKA,gBAAL,GAAwByD,aAAa,CAACzD,gBAAtC;UACD;;UACD,IAAIyD,aAAa,CAAC3D,QAAd,IAA0B,CAAC,KAAKA,QAApC,EAA8C;YAC5C,KAAKA,QAAL,GAAgB2D,aAAa,CAAC3D,QAA9B;UACD;;UAED,KAAK2B,aAAL,CAAmBY,OAAnB,CAA2B;YACzBf,KAAK,EAAE,gBADkB;YAEzBa,MAAM,EAAE,CACN;cACEzB,OAAO,EAAE,KAAKA,OADhB;cAEEE,SAAS,EAAE,KAAKA,SAFlB;cAGEE,QAAQ,EAAE,KAAKA,QAHjB;cAIEd,gBAAgB,EAAE,KAAKA,gBAJzB;cAKEE,OAAO,EAAE,KAAKA;YALhB,CADM;UAFiB,CAA3B;QAYD;;QAED,KAAKmE,qBAAL;MACD,CArFD,MAqFO;QACL,KAAKE,wBAAL,CAA8B+B,QAA9B;MACD;IACF,CAzFD,MAyFO;MACL,KAAK/B,wBAAL,CAA8B+B,QAA9B;IACD;EACF;;EAEoC,MAAvBM,uBAAuB,CAACC,aAAD,EAA8B;IACjE,MAAMC,YAAY,GAAG,CAAC,KAAK7H,QAAN,EAAgB,KAAKmB,cAArB,CAArB;;IAEA,IAAI,CAAC0G,YAAY,CAACC,QAAb,CAAsBF,aAAa,CAACvD,KAApC,CAAL,EAAiD;MAC/C;IACD;;IAED,IAAIwB,iBAAJ;;IACA,IAAI;MACFA,iBAAiB,GAAGE,IAAI,CAACgC,KAAL,CAAWH,aAAa,CAAC7D,OAAzB,CAApB;IACD,CAFD,CAEE,OAAON,KAAP,EAAc;MACd;IACD;;IAED,MAAMM,OAAO,GAIF,MAAM,KAAKiE,QAAL,CAAcnC,iBAAd,CAJjB;;IAMA,IAAI9B,OAAJ,EAAa;MACX,KAAKvB,aAAL,CAAmBY,OAAnB,CAA2BW,OAA3B;IACD;EACF;;EAEO5D,0BAA0B;IAChC,KAAKT,UAAL,CAAgB+C,SAAhB,CAA0B,KAAKtB,cAA/B;EACD;;EAEOyF,oBAAoB,CAC1BzD,EAD0B,EAE1Bb,QAF0B,EAEiD;IAE3E,KAAKF,EAAL,CAAQ,YAAYe,EAAE,EAAtB,EAA0Bb,QAA1B;EACD;;EAEO7C,2BAA2B,CAAC0D,EAAD,EAAakE,QAAb,EAA6B;IAC9D,KAAKT,oBAAL,CAA0BzD,EAA1B,EAA8B,CAACM,KAAD,EAAQM,OAAR,KAAmB;MAC/C,IAAIN,KAAJ,EAAW;QACT,KAAKiE,sBAAL,CAA4BjE,KAAK,CAACuB,OAAlC;;QACA;MACD;;MACD,IAAIjB,OAAO,CAACR,MAAZ,EAAoB;QAClB,KAAKmE,sBAAL,CAA4BL,QAA5B,EAAsCtD,OAAO,CAACR,MAA9C;MACD,CAFD,MAEO,IAAIQ,OAAO,CAACN,KAAR,IAAiBM,OAAO,CAACN,KAAR,CAAcuB,OAAnC,EAA4C;QACjD,KAAK0C,sBAAL,CAA4B3D,OAAO,CAACN,KAAR,CAAcuB,OAA1C;MACD,CAFM,MAEA;QACL,KAAK0C,sBAAL,CAA4BL,QAA5B;MACD;IACF,CAZD;EAaD;;EAEOjB,wBAAwB,CAACjD,EAAD,EAAW;IACzC,OAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MACrC,KAAK8C,oBAAL,CAA0BzD,EAA1B,EAA8B,CAACM,KAAD,EAAQM,OAAR,KAAmB;QAC/C,IAAIN,KAAJ,EAAW;UACTK,MAAM,CAACL,KAAD,CAAN;UACA;QACD;;QACD,IAAIM,OAAO,CAACR,MAAZ,EAAoB;UAClBM,OAAO,CAACE,OAAO,CAACR,MAAT,CAAP;QACD,CAFD,MAEO,IAAIQ,OAAO,CAACN,KAAR,IAAiBM,OAAO,CAACN,KAAR,CAAcuB,OAAnC,EAA4C;UACjDlB,MAAM,CAACC,OAAO,CAACN,KAAT,CAAN;QACD,CAFM,MAEA;UACLK,MAAM,CAAC,IAAIxE,KAAJ,CAAU3B,sBAAV,CAAD,CAAN;QACD;MACF,CAZD;IAaD,CAdM,CAAP;EAeD;;EAEOsC,0BAA0B;IAChC,KAAKmC,EAAL,CAAQ,aAAR,EAAuB,MAAK;MAC1B,IAAI,KAAKtD,YAAT,EAAuB;QACrB,KAAKA,YAAL,CAAkBmJ,IAAlB,CACE,KAAK7I,GADP,EAEE,MAAK;UACH,KAAKoD,aAAL,CAAmBY,OAAnB,CAA2B;YACzBf,KAAK,EAAE,cADkB;YAEzBa,MAAM,EAAE;UAFiB,CAA3B;QAID,CAPH,EAQE,KAAKlE,mBARP;MAUD;IACF,CAbD;IAeA,KAAKoD,EAAL,CAAQ,SAAR,EAAmB,MAAK;MACtB,IAAI,KAAKtD,YAAT,EAAuB;QACrB,KAAKA,YAAL,CAAkBqI,KAAlB;MACD;IACF,CAJD;IAMA,KAAK/E,EAAL,CAAQ,mBAAR,EAA6B,CAACqB,KAAD,EAAQM,OAAR,KAAmB;MAC9C,MAAM;QAAEhB;MAAF,IAAcgB,OAAO,CAACb,MAAR,CAAe,CAAf,CAApB;;MACA,IAAIlG,QAAQ,MAAM,KAAKkC,eAAL,CAAqB4I,QAArB,CAA8B/E,OAAO,CAACE,MAAtC,CAAlB,EAAiE;QAC/D,MAAMiF,aAAa,GAAGrL,QAAQ,CAACE,mBAAD,CAA9B;;QACA,IAAImL,aAAJ,EAAmB;UACjBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBH,aAAa,CAACG,IAArC;QACD;MACF;IACF,CARD;IAUA,KAAKjG,EAAL,CAAQ,mBAAR,EAA6B,CAACqB,KAAD,EAAQM,OAAR,KAAmB;MAC9C,IAAIN,KAAJ,EAAW;QACT,KAAKjB,aAAL,CAAmBY,OAAnB,CAA2B;UACzBf,KAAK,EAAE,OADkB;UAEzBa,MAAM,EAAE,CACN;YACEoF,IAAI,EAAE,uBADR;YAEEtD,OAAO,EAAEvB,KAAK,CAAC8E,QAAN;UAFX,CADM;QAFiB,CAA3B;MASD;;MACD,KAAK/I,WAAL,GAAmBuE,OAAO,CAACZ,EAA3B;MACA,KAAKxC,MAAL,GAAcoD,OAAO,CAACb,MAAR,CAAe,CAAf,EAAkBvC,MAAhC;MACA,KAAKE,QAAL,GAAgBkD,OAAO,CAACb,MAAR,CAAe,CAAf,EAAkBrC,QAAlC;MAEA,MAAM2H,eAAe,mCAChBzE,OADgB,GACT;QACVd,MAAM,EAAE;MADE,CADS,CAArB;;MAIA,KAAKT,aAAL,CAAmBY,OAAnB,CAA2BoF,eAA3B;IACD,CArBD;IAuBA,KAAKpG,EAAL,CAAQ,kBAAR,EAA4B,CAACqB,KAAD,EAAQM,OAAR,KAAmB;MAC7C,IAAIN,KAAJ,EAAW;QACT,KAAKiE,sBAAL,CAA4BjE,KAAK,CAACuB,OAAlC;MACD;;MACD,KAAK0C,sBAAL,CAA4B,sBAA5B,EAAoD3D,OAAO,CAACb,MAAR,CAAe,CAAf,CAApD;IACD,CALD;EAMD;;EAEOhD,cAAc;IACpB,KAAKR,UAAL,CAAgB0C,EAAhB,CAAmB,SAAnB,EAA+BwF,aAAD,IAC5B,KAAKD,uBAAL,CAA6BC,aAA7B,CADF;;IAIA,KAAKlI,UAAL,CAAgB0C,EAAhB,CAAmB,MAAnB,EAA2B,MACzB,KAAKI,aAAL,CAAmBY,OAAnB,CAA2B;MAAEf,KAAK,EAAE,gBAAT;MAA2Ba,MAAM,EAAE;IAAnC,CAA3B,CADF;;IAIA,KAAKxD,UAAL,CAAgB0C,EAAhB,CAAmB,OAAnB,EAA4B,MAC1B,KAAKI,aAAL,CAAmBY,OAAnB,CAA2B;MAAEf,KAAK,EAAE,iBAAT;MAA4Ba,MAAM,EAAE;IAApC,CAA3B,CADF;;IAIA,KAAKxD,UAAL,CAAgB0C,EAAhB,CAAmB,OAAnB,EAA4B,MAC1B,KAAKI,aAAL,CAAmBY,OAAnB,CAA2B;MACzBf,KAAK,EAAE,iBADkB;MAEzBa,MAAM,EAAE,CAAC,6BAAD;IAFiB,CAA3B,CADF;;IAOA,KAAKxD,UAAL,CAAgBuI,IAAhB;EACD;;EAIO1G,UAAU;IAChB,MAAM3B,QAAQ,GAAG,KAAKA,QAAtB;IACA,MAAMuB,cAAc,GAAG,KAAKA,cAA5B;IACA,MAAMtB,OAAO,GAAG,KAAKA,OAArB;IACA,MAAMV,MAAM,GAAGsJ,kBAAkB,CAAC,KAAKtJ,MAAN,CAAjC;IACA,MAAMqB,GAAG,GAAG,KAAKA,GAAjB;IACA,MAAMpB,GAAG,GAAG,GAAGQ,QAAQ,IAAIuB,cAAc,IAAItB,OAAO,WAAWV,MAAM,QAAQqB,GAAG,EAAhF;IACA,OAAOpB,GAAP;EACD;;EAEOoC,SAAS,CAACpC,GAAD,EAAY;IAC3B,MAAMmE,MAAM,GAAoB/G,qBAAqB,CAAC4C,GAAD,CAArD;;IAEA,IAAImE,MAAM,CAAC3D,QAAP,KAAoB,KAAKA,QAA7B,EAAuC;MACrC,IAAI,CAAC2D,MAAM,CAACpC,cAAZ,EAA4B;QAC1B,MAAM7B,KAAK,CAAC,mDAAD,CAAX;MACD;;MACD,MAAM6B,cAAc,GAAGoC,MAAM,CAACpC,cAA9B;;MAEA,IAAI,CAACoC,MAAM,CAACpE,MAAZ,EAAoB;QAClB,MAAMG,KAAK,CAAC,+CAAD,CAAX;MACD;;MACD,MAAMH,MAAM,GAAGuJ,kBAAkB,CAACnF,MAAM,CAACpE,MAAR,CAAjC;;MAEA,IAAI,CAACoE,MAAM,CAAC/C,GAAZ,EAAiB;QACf,MAAMlB,KAAK,CAAC,wCAAD,CAAX;MACD;;MACD,MAAMkB,GAAG,GAAG+C,MAAM,CAAC/C,GAAnB;MAEA,OAAO;QAAEW,cAAF;QAAkBhC,MAAlB;QAA0BqB;MAA1B,CAAP;IACD,CAjBD,MAiBO;MACL,MAAM,IAAIlB,KAAJ,CAAU1B,iBAAV,CAAN;IACD;EACF;;EAIyB,MAAZkF,YAAY;IACxB,IAAI,KAAKrE,UAAT,EAAqB;MACnB,MAAM8E,MAAM,GAAG,MAAM,KAAK9E,UAAL,CAAgBkK,WAAhB,EAArB;MACA,OAAOpF,MAAP;IACD;;IACD,OAAO,IAAP;EACD;;EAEqB,MAARuC,QAAQ,CACpB8C,IADoB,EACmD;IAEvE,MAAMpI,GAAG,GAAuB,KAAKC,IAArC;;IACA,IAAI,KAAKhC,UAAL,IAAmB+B,GAAvB,EAA4B;MAC1B,MAAM+C,MAAM,GAAuB,MAAM,KAAK9E,UAAL,CAAgBoK,OAAhB,CAAwBD,IAAxB,EAA8BpI,GAA9B,CAAzC;MACA,OAAO+C,MAAP;IACD;;IACD,OAAO,IAAP;EACD;;EAEqB,MAARyE,QAAQ,CACpBjE,OADoB,EACO;IAE3B,MAAMvD,GAAG,GAAuB,KAAKC,IAArC;;IACA,IAAI,KAAKhC,UAAL,IAAmB+B,GAAvB,EAA4B;MAC1B,MAAM+C,MAAM,GAID,MAAM,KAAK9E,UAAL,CAAgBqK,OAAhB,CAAwB/E,OAAxB,EAAiCvD,GAAjC,CAJjB;MAKA,OAAO+C,MAAP;IACD;;IACD,OAAO,IAAP;EACD;;EAIOhE,kBAAkB;IACxB,IAAIgE,MAAM,GAAiC,IAA3C;;IACA,IAAI,KAAK5E,eAAT,EAA0B;MACxB4E,MAAM,GAAG,KAAK5E,eAAL,CAAqBoK,UAArB,EAAT;IACD;;IACD,OAAOxF,MAAP;EACD;;EAEOsB,kBAAkB;IACxB,IAAI,KAAKlG,eAAT,EAA0B;MACxB,KAAKA,eAAL,CAAqBqK,UAArB,CAAgC,KAAK3J,OAArC;IACD;EACF;;EAEO6F,qBAAqB;IAC3B,IAAI,KAAKvG,eAAT,EAA0B;MACxB,KAAKA,eAAL,CAAqBsK,aAArB;IACD;EACF;;EAEO7D,qBAAqB;IAC3B,IAAI,KAAKlD,UAAT,EAAqB;MACnB,KAAK2C,kBAAL;IACD,CAFD,MAEO;MACL,KAAKK,qBAAL;IACD;EACF;;EAIO7E,mBAAmB,CAACD,cAAD,EAAmC;IAC5D,IAAI,CAACA,cAAc,CAACN,GAAhB,IAAuB,OAAOM,cAAc,CAACN,GAAtB,KAA8B,QAAzD,EAAmE;MACjE,MAAMR,KAAK,CAAC,uDAAD,CAAX;IACD;;IAED,IAAI,CAACc,cAAc,CAAC8I,IAAhB,IAAwB,OAAO9I,cAAc,CAAC8I,IAAtB,KAA+B,QAA3D,EAAqE;MACnE,MAAM5J,KAAK,CAAC,wDAAD,CAAX;IACD;;IAED,IAAI,CAACc,cAAc,CAAC+I,KAAhB,IAAyB,OAAO/I,cAAc,CAAC+I,KAAtB,KAAgC,QAA7D,EAAuE;MACrE,MAAM7J,KAAK,CAAC,yDAAD,CAAX;IACD;;IAED,MAAM8J,gBAAgB,GAAsB;MAC1CjK,MAAM,EAAE,KAAKA,MAD6B;MAE1CkF,KAAK,EAAE,KAAKrE,QAF8B;MAG1CkJ,IAAI,EAAE9I,cAAc,CAAC8I,IAHqB;MAI1CC,KAAK,EAAE/I,cAAc,CAAC+I,KAJoB;MAK1CE,QAAQ,EAAE,EALgC;MAM1CC,QAAQ,EAAElJ,cAAc,CAACkJ,QAAf,IAA2B;IANK,CAA5C;IASA,KAAKlH,EAAL,CAAQ,SAAR,EAAmB,OAAOqB,KAAP,EAA2CM,OAA3C,KAA2D;MAC5E,IAAIN,KAAJ,EAAW;QACT,MAAMA,KAAN;MACD;;MAED,IAAIrD,cAAc,CAACS,QAAnB,EAA6B;QAC3B,MAAMwI,QAAQ,GAAGtF,OAAO,CAACb,MAAR,CAAe,CAAf,EAAkBrC,QAAlB,CAA2B0I,IAA5C;QACAH,gBAAgB,CAACC,QAAjB,GAA4BA,QAA5B;MACD;;MAED,IAAI;QACF,MAAM3E,QAAQ,GAAG,MAAM8E,KAAK,CAAC,GAAGpJ,cAAc,CAACN,GAAG,MAAtB,EAA8B;UACxDmD,MAAM,EAAE,MADgD;UAExDwG,OAAO,EAAE;YACPC,MAAM,EAAE,kBADD;YAEP,gBAAgB;UAFT,CAF+C;UAMxDC,IAAI,EAAE5D,IAAI,CAACC,SAAL,CAAeoD,gBAAf;QANkD,CAA9B,CAA5B;QASA,MAAMQ,IAAI,GAAG,MAAMlF,QAAQ,CAACkF,IAAT,EAAnB;;QACA,IAAI,CAACA,IAAI,CAACC,OAAV,EAAmB;UACjB,MAAMvK,KAAK,CAAC,mCAAD,CAAX;QACD;MACF,CAdD,CAcE,OAAOmE,KAAP,EAAc;QACd,MAAMnE,KAAK,CAAC,mCAAD,CAAX;MACD;IACF,CA3BD;EA4BD;;AAnyCY;;AAqyCf,eAAenB,SAAf","names":["parsePersonalSign","parseTransactionData","convertArrayBufferToHex","convertHexToArrayBuffer","getClientMeta","payloadId","uuid","formatRpcError","parseWalletConnectUri","convertNumberToHex","isJsonRpcResponseSuccess","isJsonRpcResponseError","isSilentPayload","getLocal","signingMethods","mobileLinkChoiceKey","isMobile","removeLocal","SocketTransport","ERROR_SESSION_CONNECTED","ERROR_SESSION_DISCONNECTED","ERROR_SESSION_REJECTED","ERROR_MISSING_JSON_RPC","ERROR_MISSING_RESULT","ERROR_MISSING_ERROR","ERROR_MISSING_METHOD","ERROR_MISSING_ID","ERROR_INVALID_RESPONSE","ERROR_INVALID_URI","ERROR_MISSING_REQUIRED","ERROR_QRCODE_MODAL_NOT_PROVIDED","ERROR_QRCODE_MODAL_USER_CLOSED","EventManager","SessionStorage","getBridgeUrl","Connector","constructor","opts","_clientMeta","connectorOpts","clientMeta","_cryptoLib","cryptoLib","_sessionStorage","sessionStorage","storageId","_qrcodeModal","qrcodeModal","_qrcodeModalOptions","qrcodeModalOptions","_signingMethods","bridge","uri","session","Error","_getStorageSession","handshakeId","_subscribeToSessionResponse","_transport","transport","protocol","version","url","subscriptions","clientId","_subscribeToInternalEvents","_initTransport","_subscribeToSessionRequest","pushServerOpts","_registerPushServer","value","_bridge","key","_key","_clientId","peerId","_peerId","peerMeta","_peerMeta","selectedWalletId","_selectedWalletId","wallets","_wallets","handshakeTopic","_handshakeTopic","_handshakeId","_uri","_formatUri","_parseUri","chainId","_chainId","chainType","_chainType","accounts","_accounts","rpcUrl","_rpcUrl","connected","_connected","pending","on","event","callback","eventEmitter","_eventManager","subscribe","off","unsubscribe","createInstantRequest","instantRequest","_generateKey","request","_formatRequest","method","params","id","trigger","endInstantRequest","killSession","result","_sendCallRequest","error","connect","createSession","Promise","resolve","reject","payload","_a","_b","accountTypes","_c","_sendSessionRequest","topic","approveSession","sessionStatus","sessionParams","approved","response","jsonrpc","_sendResponse","_setStorageSession","rejectSession","sessionError","message","_formatResponse","_removeStorageSession","updateSession","_manageStorageSession","_sendRequest","_handleSessionDisconnect","sendTransaction","tx","parsedTx","sendJSONRequest","jsonRequest","options","encryptionPayload","_encrypt","JSON","stringify","silent","forcePushNotification","send","_subscribeToCallResponse","signTransaction","signMessage","signPersonalMessage","signTypedData","updateChain","chainParams","unsafeSend","_subscribeToResponse","sendCustomRequest","formattedRequest","approveRequest","formattedResponse","rejectRequest","transportClose","close","callRequest","errorMsg","account","baseResponse","errorResponse","successResponse","_handleSessionResponse","_handleIncomingMessages","socketMessage","activeTopics","includes","parse","_decrypt","open","mobileLinkUrl","window","location","href","code","toString","internalPayload","encodeURIComponent","decodeURIComponent","generateKey","data","encrypt","decrypt","getSession","setSession","removeSession","type","token","pushSubscription","peerName","language","name","fetch","headers","Accept","body","json","success"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}