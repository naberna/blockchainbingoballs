{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamingSocket = void 0;\n\nconst xstream_1 = require(\"xstream\");\n\nconst socketwrapper_1 = require(\"./socketwrapper\");\n/**\n * A WebSocket wrapper that exposes all events as a stream.\n *\n * This underlying socket will not be closed when the stream has no listeners\n */\n\n\nclass StreamingSocket {\n  constructor(url) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10000;\n    this.socket = new socketwrapper_1.SocketWrapper(url, event => {\n      if (this.eventProducerListener) {\n        this.eventProducerListener.next(event);\n      }\n    }, errorEvent => {\n      if (this.eventProducerListener) {\n        this.eventProducerListener.error(errorEvent);\n      }\n    }, () => {// socket opened\n    }, closeEvent => {\n      if (this.eventProducerListener) {\n        if (closeEvent.wasClean) {\n          this.eventProducerListener.complete();\n        } else {\n          this.eventProducerListener.error(\"Socket was closed unclean\");\n        }\n      }\n    }, timeout);\n    this.connected = this.socket.connected;\n    const eventProducer = {\n      start: listener => this.eventProducerListener = listener,\n      stop: () => this.eventProducerListener = undefined\n    };\n    this.events = xstream_1.Stream.create(eventProducer);\n  }\n\n  connect() {\n    this.socket.connect();\n  }\n\n  disconnect() {\n    this.socket.disconnect();\n  }\n\n  async send(data) {\n    return this.socket.send(data);\n  }\n\n}\n\nexports.StreamingSocket = StreamingSocket;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;AAEA;;;;;;;AAKA,MAAaA,eAAb,CAA4B;EAM1BC,YAAmBC,GAAnB,EAAgD;IAAA,IAAhBC,OAAgB,uEAAN,KAAM;IAC9C,KAAKC,MAAL,GAAc,IAAIC,6BAAJ,CACZH,GADY,EAEXI,KAAD,IAAU;MACR,IAAI,KAAKC,qBAAT,EAAgC;QAC9B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgCF,KAAhC;MACD;IACF,CANW,EAOXG,UAAD,IAAe;MACb,IAAI,KAAKF,qBAAT,EAAgC;QAC9B,KAAKA,qBAAL,CAA2BG,KAA3B,CAAiCD,UAAjC;MACD;IACF,CAXW,EAYZ,MAAK,CACH;IACD,CAdW,EAeXE,UAAD,IAAe;MACb,IAAI,KAAKJ,qBAAT,EAAgC;QAC9B,IAAII,UAAU,CAACC,QAAf,EAAyB;UACvB,KAAKL,qBAAL,CAA2BM,QAA3B;QACD,CAFD,MAEO;UACL,KAAKN,qBAAL,CAA2BG,KAA3B,CAAiC,2BAAjC;QACD;MACF;IACF,CAvBW,EAwBZP,OAxBY,CAAd;IA0BA,KAAKW,SAAL,GAAiB,KAAKV,MAAL,CAAYU,SAA7B;IAEA,MAAMC,aAAa,GAAkB;MACnCC,KAAK,EAAGC,QAAD,IAAe,KAAKV,qBAAL,GAA6BU,QADhB;MAEnCC,IAAI,EAAE,MAAO,KAAKX,qBAAL,GAA6BY;IAFP,CAArC;IAIA,KAAKC,MAAL,GAAcC,iBAAOC,MAAP,CAAcP,aAAd,CAAd;EACD;;EAEMQ,OAAO;IACZ,KAAKnB,MAAL,CAAYmB,OAAZ;EACD;;EAEMC,UAAU;IACf,KAAKpB,MAAL,CAAYoB,UAAZ;EACD;;EAEgB,MAAJC,IAAI,CAACC,IAAD,EAAa;IAC5B,OAAO,KAAKtB,MAAL,CAAYqB,IAAZ,CAAiBC,IAAjB,CAAP;EACD;;AApDyB;;AAA5BC","names":["StreamingSocket","constructor","url","timeout","socket","socketwrapper_1","event","eventProducerListener","next","errorEvent","error","closeEvent","wasClean","complete","connected","eventProducer","start","listener","stop","undefined","events","xstream_1","create","connect","disconnect","send","data","exports"],"sourceRoot":"","sources":["../src/streamingsocket.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}