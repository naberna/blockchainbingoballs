{"ast":null,"code":"var _jsxFileName = \"/Users/bernapolat/blockchainbingoballs/src/pages/MyNfts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"../redux/blockchain/blockchainActions\";\nimport { fighterConnect } from \"../redux/blockchainFighters/blockchainActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyNfts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const blockchainFighters = useSelector(state => state.blockchainFighters);\n  const wallet = useSelector(state => state.wallet);\n\n  const getBlockchain = () => {\n    if (wallet.account != null) {\n      dispatch(connect(wallet));\n      dispatch(fighterConnect(wallet));\n    }\n  };\n\n  useEffect(() => {\n    getBlockchain();\n  }, [wallet.account]); //   const url =\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"my-nfts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"discord\",\n          children: \"My NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crobingo\",\n        children: \"Mint Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), wallet.account !== null ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: blockchainFighters.tokenMetadata == null && blockchain.tokenMetadata == null ? /*#__PURE__*/_jsxDEV(Container, {\n          className: \"no-nft\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning\",\n              children: \"You don't have any Nfts to display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: blockchainFighters.tokenMetadata ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: !blockchainFighters.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: blockchainFighters.tokenMetadataArr.map((nft, index) => /*#__PURE__*/_jsxDEV(Col, {\n                xs: 12,\n                md: 3,\n                lg: 4,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nft-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"nft-title\",\n                    children: nft.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://ipfs.io/ipfs/${nft.image.split(\"ipfs://\")[1]}`,\n                    alt: nft.name,\n                    className: \"nft-image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 31\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Container, {\n                className: \"no-nft\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"warning\",\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this)\n            }, void 0, false)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: blockchain.tokenMetadata ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: blockchain.tokenMetadataArr.map((nft, idx) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 3,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nft-title\",\n                children: nft.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://ipfs.io/ipfs/${nft.image.split(\"ipfs://\")[1]}`,\n                alt: nft.name,\n                className: \"nft-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: \"no-nft\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"warning\",\n          children: \"Please Connect Your Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyNfts, \"ZkOL5CCe74BHRkrmeR9Jk2jNMjA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = MyNfts;\nexport default MyNfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNfts\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Container","Row","Col","Link","connect","fighterConnect","MyNfts","dispatch","blockchain","state","blockchainFighters","wallet","getBlockchain","account","tokenMetadata","loading","tokenMetadataArr","map","nft","index","name","image","split","idx"],"sources":["/Users/bernapolat/blockchainbingoballs/src/pages/MyNfts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"../redux/blockchain/blockchainActions\";\nimport { fighterConnect } from \"../redux/blockchainFighters/blockchainActions\";\n\nconst MyNfts = () => {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const blockchainFighters = useSelector((state) => state.blockchainFighters);\n  const wallet = useSelector((state) => state.wallet);\n\n  const getBlockchain = () => {\n    if (wallet.account != null) {\n      dispatch(connect(wallet));\n      dispatch(fighterConnect(wallet));\n    }\n  };\n\n  useEffect(() => {\n    getBlockchain();\n  }, [wallet.account]);\n\n  //   const url =\n  return (\n    <section className=\"my-nfts\">\n      <div className=\"empty-banner\">\n        <div className=\"title\">\n          {/* <FaDiscord /> */}\n          <div className=\"discord\">My NFTs</div>\n        </div>\n        <Link to=\"/crobingo\">Mint Now</Link>\n      </div>\n      {wallet.account !== null ? (\n        <Container>\n          <Row>\n            {blockchainFighters.tokenMetadata == null &&\n            blockchain.tokenMetadata == null ? (\n              <Container className=\"no-nft\">\n                <Row>\n                  <div className=\"warning\">\n                    You don't have any Nfts to display\n                  </div>\n                </Row>\n              </Container>\n            ) : (\n              <>\n                {/* {blockchainFighters.tokenMetadata.name} */}\n                {blockchainFighters.tokenMetadata ? (\n                  <>\n                    {!blockchainFighters.loading ? (\n                      <>\n                        {blockchainFighters.tokenMetadataArr.map(\n                          (nft, index) => (\n                            <Col xs={12} md={3} lg={4} key={index}>\n                              <div className=\"nft-card\">\n                                <div className=\"nft-title\">{nft.name}</div>\n                                <img\n                                  src={`https://ipfs.io/ipfs/${\n                                    nft.image.split(\"ipfs://\")[1]\n                                  }`}\n                                  alt={nft.name}\n                                  className=\"nft-image\"\n                                />\n                              </div>\n                            </Col>\n                          )\n                        )}\n                      </>\n                    ) : (\n                      <>\n                        <Container className=\"no-nft\">\n                          <Row>\n                            <div className=\"warning\">Loading...</div>\n                          </Row>\n                        </Container>\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <></>\n                )}\n              </>\n            )}\n          </Row>\n          <Row>\n            {blockchain.tokenMetadata ? (\n              <>\n                {blockchain.tokenMetadataArr.map((nft, idx) => (\n                  <Col xs={12} md={3} lg={4} key={idx}>\n                    <div className=\"nft-card\">\n                      <div className=\"nft-title\">{nft.name}</div>\n                      <img\n                        src={`https://ipfs.io/ipfs/${\n                          nft.image.split(\"ipfs://\")[1]\n                        }`}\n                        alt={nft.name}\n                        className=\"nft-image\"\n                      />\n                    </div>\n                  </Col>\n                ))}\n              </>\n            ) : (\n              <></>\n            )}\n          </Row>\n        </Container>\n      ) : (\n        <Container className=\"no-nft\">\n          <Row>\n            <div className=\"warning\">Please Connect Your Wallet</div>\n          </Row>\n        </Container>\n      )}\n    </section>\n  );\n};\n\nexport default MyNfts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}