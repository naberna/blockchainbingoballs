{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;\n\nconst crypto_1 = require(\"@cosmjs/crypto\");\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nfunction rawEd25519PubkeyToRawAddress(pubkeyData) {\n  if (pubkeyData.length !== 32) {\n    throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);\n  }\n\n  return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n}\n\nexports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;\n\nfunction rawSecp256k1PubkeyToRawAddress(pubkeyData) {\n  if (pubkeyData.length !== 33) {\n    throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);\n  }\n\n  return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));\n}\n\nexports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress; // For secp256k1 this assumes we already have a compressed pubkey.\n\nfunction pubkeyToRawAddress(type, data) {\n  switch (type) {\n    case \"ed25519\":\n      return rawEd25519PubkeyToRawAddress(data);\n\n    case \"secp256k1\":\n      return rawSecp256k1PubkeyToRawAddress(data);\n\n    default:\n      // Keep this case here to guard against new types being added but not handled\n      throw new Error(`Pubkey type ${type} not supported`);\n  }\n}\n\nexports.pubkeyToRawAddress = pubkeyToRawAddress;\n\nfunction pubkeyToAddress(type, data) {\n  return (0, encoding_1.toHex)(pubkeyToRawAddress(type, data)).toUpperCase();\n}\n\nexports.pubkeyToAddress = pubkeyToAddress;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAEA,SAAgBA,4BAAhB,CAA6CC,UAA7C,EAAmE;EACjE,IAAIA,UAAU,CAACC,MAAX,KAAsB,EAA1B,EAA8B;IAC5B,MAAM,IAAIC,KAAJ,CAAU,kCAAkCF,UAAU,CAACC,MAAM,EAA7D,CAAN;EACD;;EACD,OAAO,qBAAOD,UAAP,EAAmBG,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B,CAAP;AACD;;AALDC;;AAOA,SAAgBC,8BAAhB,CAA+CL,UAA/C,EAAqE;EACnE,IAAIA,UAAU,CAACC,MAAX,KAAsB,EAA1B,EAA8B;IAC5B,MAAM,IAAIC,KAAJ,CAAU,iDAAiDF,UAAU,CAACC,MAAM,EAA5E,CAAN;EACD;;EACD,OAAO,wBAAU,qBAAOD,UAAP,CAAV,CAAP;AACD;;AALDI,wE,CAOA;;AACA,SAAgBE,kBAAhB,CAAmCC,IAAnC,EAAkEC,IAAlE,EAAkF;EAChF,QAAQD,IAAR;IACE,KAAK,SAAL;MACE,OAAOR,4BAA4B,CAACS,IAAD,CAAnC;;IACF,KAAK,WAAL;MACE,OAAOH,8BAA8B,CAACG,IAAD,CAArC;;IACF;MACE;MACA,MAAM,IAAIN,KAAJ,CAAU,eAAeK,IAAI,gBAA7B,CAAN;EAPJ;AASD;;AAVDH;;AAYA,SAAgBK,eAAhB,CAAgCF,IAAhC,EAA+DC,IAA/D,EAA+E;EAC7E,OAAO,sBAAMF,kBAAkB,CAACC,IAAD,EAAOC,IAAP,CAAxB,EAAsCE,WAAtC,EAAP;AACD;;AAFDN","names":["rawEd25519PubkeyToRawAddress","pubkeyData","length","Error","slice","exports","rawSecp256k1PubkeyToRawAddress","pubkeyToRawAddress","type","data","pubkeyToAddress","toUpperCase"],"sourceRoot":"","sources":["../src/addresses.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}