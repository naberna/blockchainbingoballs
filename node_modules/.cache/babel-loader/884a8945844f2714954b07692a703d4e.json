{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"tendermint.crypto\";\nconst baseProof = {\n  total: long_1.default.ZERO,\n  index: long_1.default.ZERO\n};\nexports.Proof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.total.isZero()) {\n      writer.uint32(8).int64(message.total);\n    }\n\n    if (!message.index.isZero()) {\n      writer.uint32(16).int64(message.index);\n    }\n\n    if (message.leafHash.length !== 0) {\n      writer.uint32(26).bytes(message.leafHash);\n    }\n\n    for (const v of message.aunts) {\n      writer.uint32(34).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    message.leafHash = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.int64();\n          break;\n\n        case 2:\n          message.index = reader.int64();\n          break;\n\n        case 3:\n          message.leafHash = reader.bytes();\n          break;\n\n        case 4:\n          message.aunts.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    var _a;\n\n    const message = Object.assign({}, baseProof);\n    message.total = object.total !== undefined && object.total !== null ? long_1.default.fromString(object.total) : long_1.default.ZERO;\n    message.index = object.index !== undefined && object.index !== null ? long_1.default.fromString(object.index) : long_1.default.ZERO;\n    message.leafHash = object.leafHash !== undefined && object.leafHash !== null ? bytesFromBase64(object.leafHash) : new Uint8Array();\n    message.aunts = ((_a = object.aunts) !== null && _a !== void 0 ? _a : []).map(e => bytesFromBase64(e));\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.total !== undefined && (obj.total = (message.total || long_1.default.ZERO).toString());\n    message.index !== undefined && (obj.index = (message.index || long_1.default.ZERO).toString());\n    message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n\n    if (message.aunts) {\n      obj.aunts = message.aunts.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.aunts = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b;\n\n    const message = Object.assign({}, baseProof);\n    message.total = object.total !== undefined && object.total !== null ? long_1.default.fromValue(object.total) : long_1.default.ZERO;\n    message.index = object.index !== undefined && object.index !== null ? long_1.default.fromValue(object.index) : long_1.default.ZERO;\n    message.leafHash = (_a = object.leafHash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.aunts = ((_b = object.aunts) === null || _b === void 0 ? void 0 : _b.map(e => e)) || [];\n    return message;\n  }\n\n};\nconst baseValueOp = {};\nexports.ValueOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.proof !== undefined) {\n      exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValueOp);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.proof = exports.Proof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseValueOp);\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    message.proof = object.proof !== undefined && object.proof !== null ? exports.Proof.fromJSON(object.proof) : undefined;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseValueOp);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proof = object.proof !== undefined && object.proof !== null ? exports.Proof.fromPartial(object.proof) : undefined;\n    return message;\n  }\n\n};\nconst baseDominoOp = {\n  key: \"\",\n  input: \"\",\n  output: \"\"\n};\nexports.DominoOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n\n    if (message.input !== \"\") {\n      writer.uint32(18).string(message.input);\n    }\n\n    if (message.output !== \"\") {\n      writer.uint32(26).string(message.output);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDominoOp);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n\n        case 2:\n          message.input = reader.string();\n          break;\n\n        case 3:\n          message.output = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDominoOp);\n    message.key = object.key !== undefined && object.key !== null ? String(object.key) : \"\";\n    message.input = object.input !== undefined && object.input !== null ? String(object.input) : \"\";\n    message.output = object.output !== undefined && object.output !== null ? String(object.output) : \"\";\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.input !== undefined && (obj.input = message.input);\n    message.output !== undefined && (obj.output = message.output);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseDominoOp);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : \"\";\n    message.input = (_b = object.input) !== null && _b !== void 0 ? _b : \"\";\n    message.output = (_c = object.output) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n\n};\nconst baseProofOp = {\n  type: \"\"\n};\nexports.ProofOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n\n    if (message.key.length !== 0) {\n      writer.uint32(18).bytes(message.key);\n    }\n\n    if (message.data.length !== 0) {\n      writer.uint32(26).bytes(message.data);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOp);\n    message.key = new Uint8Array();\n    message.data = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n\n        case 2:\n          message.key = reader.bytes();\n          break;\n\n        case 3:\n          message.data = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofOp);\n    message.type = object.type !== undefined && object.type !== null ? String(object.type) : \"\";\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    message.data = object.data !== undefined && object.data !== null ? bytesFromBase64(object.data) : new Uint8Array();\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseProofOp);\n    message.type = (_a = object.type) !== null && _a !== void 0 ? _a : \"\";\n    message.key = (_b = object.key) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.data = (_c = object.data) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseProofOps = {};\nexports.ProofOps = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.ops) {\n      exports.ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    var _a;\n\n    const message = Object.assign({}, baseProofOps);\n    message.ops = ((_a = object.ops) !== null && _a !== void 0 ? _a : []).map(e => exports.ProofOp.fromJSON(e));\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.ops) {\n      obj.ops = message.ops.map(e => e ? exports.ProofOp.toJSON(e) : undefined);\n    } else {\n      obj.ops = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseProofOps);\n    message.ops = ((_a = object.ops) === null || _a === void 0 ? void 0 : _a.map(e => exports.ProofOp.fromPartial(e))) || [];\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","baseProof","total","long_1","ZERO","index","encode","message","writer","minimal_1","Writer","create","isZero","uint32","int64","leafHash","length","bytes","v","aunts","decode","input","reader","Reader","end","undefined","len","pos","Object","Uint8Array","tag","push","skipType","fromJSON","object","fromString","bytesFromBase64","_a","map","e","toJSON","obj","toString","base64FromBytes","fromPartial","fromValue","_b","baseValueOp","key","proof","fork","ldelim","baseDominoOp","output","string","String","_c","baseProofOp","type","data","baseProofOps","ops","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","util","Long","configure"],"sourceRoot":"","sources":["../../../src/tendermint/crypto/proof.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}