{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGovAminoConverters = exports.isAminoMsgDeposit = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = void 0;\n\nconst utils_1 = require(\"@cosmjs/utils\");\n\nconst gov_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/gov\");\n\nconst any_1 = require(\"cosmjs-types/google/protobuf/any\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nfunction isAminoMsgSubmitProposal(msg) {\n  return msg.type === \"cosmos-sdk/MsgSubmitProposal\";\n}\n\nexports.isAminoMsgSubmitProposal = isAminoMsgSubmitProposal;\n\nfunction isAminoMsgVote(msg) {\n  return msg.type === \"cosmos-sdk/MsgVote\";\n}\n\nexports.isAminoMsgVote = isAminoMsgVote;\n\nfunction isAminoMsgDeposit(msg) {\n  return msg.type === \"cosmos-sdk/MsgDeposit\";\n}\n\nexports.isAminoMsgDeposit = isAminoMsgDeposit;\n\nfunction createGovAminoConverters() {\n  return {\n    \"/cosmos.gov.v1beta1.MsgDeposit\": {\n      aminoType: \"cosmos-sdk/MsgDeposit\",\n      toAmino: _ref => {\n        let {\n          amount,\n          depositor,\n          proposalId\n        } = _ref;\n        return {\n          amount,\n          depositor,\n          proposal_id: proposalId.toString()\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          amount,\n          depositor,\n          proposal_id\n        } = _ref2;\n        return {\n          amount: Array.from(amount),\n          depositor,\n          proposalId: long_1.default.fromString(proposal_id)\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgVote\": {\n      aminoType: \"cosmos-sdk/MsgVote\",\n      toAmino: _ref3 => {\n        let {\n          option,\n          proposalId,\n          voter\n        } = _ref3;\n        return {\n          option: option,\n          proposal_id: proposalId.toString(),\n          voter: voter\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          option,\n          proposal_id,\n          voter\n        } = _ref4;\n        return {\n          option: (0, gov_1.voteOptionFromJSON)(option),\n          proposalId: long_1.default.fromString(proposal_id),\n          voter: voter\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n      aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n      toAmino: _ref5 => {\n        let {\n          initialDeposit,\n          proposer,\n          content\n        } = _ref5;\n        (0, utils_1.assertDefinedAndNotNull)(content);\n        let proposal;\n\n        switch (content.typeUrl) {\n          case \"/cosmos.gov.v1beta1.TextProposal\":\n            {\n              const textProposal = gov_1.TextProposal.decode(content.value);\n              proposal = {\n                type: \"cosmos-sdk/TextProposal\",\n                value: {\n                  description: textProposal.description,\n                  title: textProposal.title\n                }\n              };\n              break;\n            }\n\n          default:\n            throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);\n        }\n\n        return {\n          initial_deposit: initialDeposit,\n          proposer: proposer,\n          content: proposal\n        };\n      },\n      fromAmino: _ref6 => {\n        let {\n          initial_deposit,\n          proposer,\n          content\n        } = _ref6;\n        let any_content;\n\n        switch (content.type) {\n          case \"cosmos-sdk/TextProposal\":\n            {\n              const {\n                value\n              } = content;\n              (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));\n              const {\n                title,\n                description\n              } = value;\n              (0, utils_1.assert)(typeof title === \"string\");\n              (0, utils_1.assert)(typeof description === \"string\");\n              any_content = any_1.Any.fromPartial({\n                typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                  title: title,\n                  description: description\n                })).finish()\n              });\n              break;\n            }\n\n          default:\n            throw new Error(`Unsupported proposal type: '${content.type}'`);\n        }\n\n        return {\n          initialDeposit: Array.from(initial_deposit),\n          proposer: proposer,\n          content: any_content\n        };\n      }\n    }\n  };\n}\n\nexports.createGovAminoConverters = createGovAminoConverters;","map":{"version":3,"mappings":"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","names":["isAminoMsgSubmitProposal","msg","type","exports","isAminoMsgVote","isAminoMsgDeposit","createGovAminoConverters","aminoType","toAmino","amount","depositor","proposalId","proposal_id","toString","fromAmino","Array","from","long_1","fromString","option","voter","initialDeposit","proposer","content","proposal","typeUrl","textProposal","gov_1","decode","value","description","title","Error","initial_deposit","any_content","any_1","fromPartial","encode","finish"],"sourceRoot":"","sources":["../../../src/modules/gov/aminomessages.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}