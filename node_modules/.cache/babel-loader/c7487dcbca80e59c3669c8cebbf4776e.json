{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ripemd160 = exports.Ripemd160 = void 0;\n\nconst ripemd160_1 = require(\"@noble/hashes/ripemd160\");\n\nconst utils_1 = require(\"./utils\");\n\nclass Ripemd160 {\n  constructor(firstData) {\n    this.blockSize = 512 / 8;\n    this.impl = ripemd160_1.ripemd160.create();\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  update(data) {\n    this.impl.update((0, utils_1.toRealUint8Array)(data));\n    return this;\n  }\n\n  digest() {\n    return this.impl.digest();\n  }\n\n}\n\nexports.Ripemd160 = Ripemd160;\n/** Convenience function equivalent to `new Ripemd160(data).digest()` */\n\nfunction ripemd160(data) {\n  return new Ripemd160(data).digest();\n}\n\nexports.ripemd160 = ripemd160;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA;;AAEA,MAAaA,SAAb,CAAsB;EAKpBC,YAAmBC,SAAnB,EAAyC;IAJzB,iBAAY,MAAM,CAAlB;IAEC,YAAOC,sBAAeC,MAAf,EAAP;;IAGf,IAAIF,SAAJ,EAAe;MACb,KAAKG,MAAL,CAAYH,SAAZ;IACD;EACF;;EAEMG,MAAM,CAACC,IAAD,EAAiB;IAC5B,KAAKC,IAAL,CAAUF,MAAV,CAAiB,8BAAiBC,IAAjB,CAAjB;IACA,OAAO,IAAP;EACD;;EAEME,MAAM;IACX,OAAO,KAAKD,IAAL,CAAUC,MAAV,EAAP;EACD;;AAlBmB;;AAAtBC;AAqBA;;AACA,SAAgBC,SAAhB,CAA0BJ,IAA1B,EAA0C;EACxC,OAAO,IAAIN,SAAJ,CAAcM,IAAd,EAAoBE,MAApB,EAAP;AACD;;AAFDC","names":["Ripemd160","constructor","firstData","ripemd160_1","create","update","data","impl","digest","exports","ripemd160"],"sourceRoot":"","sources":["../src/ripemd.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}