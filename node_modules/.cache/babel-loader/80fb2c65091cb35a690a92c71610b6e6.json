{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupMintExtension = void 0;\n\nconst utils_1 = require(\"@cosmjs/utils\");\n\nconst query_1 = require(\"cosmjs-types/cosmos/mint/v1beta1/query\");\n\nconst queryclient_1 = require(\"../../queryclient\");\n\nfunction setupMintExtension(base) {\n  const rpc = (0, queryclient_1.createProtobufRpcClient)(base); // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    mint: {\n      params: async () => {\n        const {\n          params\n        } = await queryService.Params({});\n        (0, utils_1.assert)(params);\n        return {\n          blocksPerYear: params.blocksPerYear,\n          goalBonded: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.goalBonded),\n          inflationMin: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMin),\n          inflationMax: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMax),\n          inflationRateChange: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationRateChange),\n          mintDenom: params.mintDenom\n        };\n      },\n      inflation: async () => {\n        const {\n          inflation\n        } = await queryService.Inflation({});\n        return (0, queryclient_1.decodeCosmosSdkDecFromProto)(inflation);\n      },\n      annualProvisions: async () => {\n        const {\n          annualProvisions\n        } = await queryService.AnnualProvisions({});\n        return (0, queryclient_1.decodeCosmosSdkDecFromProto)(annualProvisions);\n      }\n    }\n  };\n}\n\nexports.setupMintExtension = setupMintExtension;","map":{"version":3,"mappings":";;;;;;;AACA;;AAEA;;AAEA;;AAqBA,SAAgBA,kBAAhB,CAAmCC,IAAnC,EAAoD;EAClD,MAAMC,GAAG,GAAG,2CAAwBD,IAAxB,CAAZ,CADkD,CAElD;EACA;;EACA,MAAME,YAAY,GAAG,IAAIC,uBAAJ,CAAoBF,GAApB,CAArB;EAEA,OAAO;IACLG,IAAI,EAAE;MACJC,MAAM,EAAE,YAAgC;QACtC,MAAM;UAAEA;QAAF,IAAa,MAAMH,YAAY,CAACI,MAAb,CAAoB,EAApB,CAAzB;QACA,oBAAOD,MAAP;QAEA,OAAO;UACLE,aAAa,EAAEF,MAAM,CAACE,aADjB;UAELC,UAAU,EAAE,+CAA4BH,MAAM,CAACG,UAAnC,CAFP;UAGLC,YAAY,EAAE,+CAA4BJ,MAAM,CAACI,YAAnC,CAHT;UAILC,YAAY,EAAE,+CAA4BL,MAAM,CAACK,YAAnC,CAJT;UAKLC,mBAAmB,EAAE,+CAA4BN,MAAM,CAACM,mBAAnC,CALhB;UAMLC,SAAS,EAAEP,MAAM,CAACO;QANb,CAAP;MAQD,CAbG;MAcJC,SAAS,EAAE,YAAW;QACpB,MAAM;UAAEA;QAAF,IAAgB,MAAMX,YAAY,CAACY,SAAb,CAAuB,EAAvB,CAA5B;QACA,OAAO,+CAA4BD,SAA5B,CAAP;MACD,CAjBG;MAkBJE,gBAAgB,EAAE,YAAW;QAC3B,MAAM;UAAEA;QAAF,IAAuB,MAAMb,YAAY,CAACc,gBAAb,CAA8B,EAA9B,CAAnC;QACA,OAAO,+CAA4BD,gBAA5B,CAAP;MACD;IArBG;EADD,CAAP;AAyBD;;AA/BDE","names":["setupMintExtension","base","rpc","queryService","query_1","mint","params","Params","blocksPerYear","goalBonded","inflationMin","inflationMax","inflationRateChange","mintDenom","inflation","Inflation","annualProvisions","AnnualProvisions","exports"],"sourceRoot":"","sources":["../../../src/modules/mint/queries.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}