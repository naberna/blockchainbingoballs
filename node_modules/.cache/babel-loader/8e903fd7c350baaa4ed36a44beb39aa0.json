{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompressedNonExistenceProof = exports.CompressedExistenceProof = exports.CompressedBatchEntry = exports.CompressedBatchProof = exports.BatchEntry = exports.BatchProof = exports.InnerSpec = exports.ProofSpec = exports.InnerOp = exports.LeafOp = exports.CommitmentProof = exports.NonExistenceProof = exports.ExistenceProof = exports.lengthOpToJSON = exports.lengthOpFromJSON = exports.LengthOp = exports.hashOpToJSON = exports.hashOpFromJSON = exports.HashOp = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"ics23\";\nvar HashOp;\n\n(function (HashOp) {\n  /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n  HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n  HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n  HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n  HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n  HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n  /** BITCOIN - ripemd160(sha256(x)) */\n\n  HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n  HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp = exports.HashOp || (exports.HashOp = {}));\n\nfunction hashOpFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NO_HASH\":\n      return HashOp.NO_HASH;\n\n    case 1:\n    case \"SHA256\":\n      return HashOp.SHA256;\n\n    case 2:\n    case \"SHA512\":\n      return HashOp.SHA512;\n\n    case 3:\n    case \"KECCAK\":\n      return HashOp.KECCAK;\n\n    case 4:\n    case \"RIPEMD160\":\n      return HashOp.RIPEMD160;\n\n    case 5:\n    case \"BITCOIN\":\n      return HashOp.BITCOIN;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return HashOp.UNRECOGNIZED;\n  }\n}\n\nexports.hashOpFromJSON = hashOpFromJSON;\n\nfunction hashOpToJSON(object) {\n  switch (object) {\n    case HashOp.NO_HASH:\n      return \"NO_HASH\";\n\n    case HashOp.SHA256:\n      return \"SHA256\";\n\n    case HashOp.SHA512:\n      return \"SHA512\";\n\n    case HashOp.KECCAK:\n      return \"KECCAK\";\n\n    case HashOp.RIPEMD160:\n      return \"RIPEMD160\";\n\n    case HashOp.BITCOIN:\n      return \"BITCOIN\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.hashOpToJSON = hashOpToJSON;\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\n\nvar LengthOp;\n\n(function (LengthOp) {\n  /** NO_PREFIX - NO_PREFIX don't include any length info */\n  LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n  /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n\n  LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n  /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n\n  LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n  /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n\n  LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n  /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n\n  LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n  /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n\n  LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n  /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n\n  LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n  /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n\n  LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n  /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n\n  LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n  LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp = exports.LengthOp || (exports.LengthOp = {}));\n\nfunction lengthOpFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NO_PREFIX\":\n      return LengthOp.NO_PREFIX;\n\n    case 1:\n    case \"VAR_PROTO\":\n      return LengthOp.VAR_PROTO;\n\n    case 2:\n    case \"VAR_RLP\":\n      return LengthOp.VAR_RLP;\n\n    case 3:\n    case \"FIXED32_BIG\":\n      return LengthOp.FIXED32_BIG;\n\n    case 4:\n    case \"FIXED32_LITTLE\":\n      return LengthOp.FIXED32_LITTLE;\n\n    case 5:\n    case \"FIXED64_BIG\":\n      return LengthOp.FIXED64_BIG;\n\n    case 6:\n    case \"FIXED64_LITTLE\":\n      return LengthOp.FIXED64_LITTLE;\n\n    case 7:\n    case \"REQUIRE_32_BYTES\":\n      return LengthOp.REQUIRE_32_BYTES;\n\n    case 8:\n    case \"REQUIRE_64_BYTES\":\n      return LengthOp.REQUIRE_64_BYTES;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return LengthOp.UNRECOGNIZED;\n  }\n}\n\nexports.lengthOpFromJSON = lengthOpFromJSON;\n\nfunction lengthOpToJSON(object) {\n  switch (object) {\n    case LengthOp.NO_PREFIX:\n      return \"NO_PREFIX\";\n\n    case LengthOp.VAR_PROTO:\n      return \"VAR_PROTO\";\n\n    case LengthOp.VAR_RLP:\n      return \"VAR_RLP\";\n\n    case LengthOp.FIXED32_BIG:\n      return \"FIXED32_BIG\";\n\n    case LengthOp.FIXED32_LITTLE:\n      return \"FIXED32_LITTLE\";\n\n    case LengthOp.FIXED64_BIG:\n      return \"FIXED64_BIG\";\n\n    case LengthOp.FIXED64_LITTLE:\n      return \"FIXED64_LITTLE\";\n\n    case LengthOp.REQUIRE_32_BYTES:\n      return \"REQUIRE_32_BYTES\";\n\n    case LengthOp.REQUIRE_64_BYTES:\n      return \"REQUIRE_64_BYTES\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.lengthOpToJSON = lengthOpToJSON;\nconst baseExistenceProof = {};\nexports.ExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n\n    if (message.leaf !== undefined) {\n      exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n    }\n\n    for (const v of message.path) {\n      exports.InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseExistenceProof);\n    message.path = [];\n    message.key = new Uint8Array();\n    message.value = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.value = reader.bytes();\n          break;\n\n        case 3:\n          message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.path.push(exports.InnerOp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    var _a;\n\n    const message = Object.assign({}, baseExistenceProof);\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    message.value = object.value !== undefined && object.value !== null ? bytesFromBase64(object.value) : new Uint8Array();\n    message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromJSON(object.leaf) : undefined;\n    message.path = ((_a = object.path) !== null && _a !== void 0 ? _a : []).map(e => exports.InnerOp.fromJSON(e));\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n\n    if (message.path) {\n      obj.path = message.path.map(e => e ? exports.InnerOp.toJSON(e) : undefined);\n    } else {\n      obj.path = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : undefined;\n    message.path = ((_c = object.path) === null || _c === void 0 ? void 0 : _c.map(e => exports.InnerOp.fromPartial(e))) || [];\n    return message;\n  }\n\n};\nconst baseNonExistenceProof = {};\nexports.NonExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.left !== undefined) {\n      exports.ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.right !== undefined) {\n      exports.ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseNonExistenceProof);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.left = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.right = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseNonExistenceProof);\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    message.left = object.left !== undefined && object.left !== null ? exports.ExistenceProof.fromJSON(object.left) : undefined;\n    message.right = object.right !== undefined && object.right !== null ? exports.ExistenceProof.fromJSON(object.right) : undefined;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.left !== undefined && (obj.left = message.left ? exports.ExistenceProof.toJSON(message.left) : undefined);\n    message.right !== undefined && (obj.right = message.right ? exports.ExistenceProof.toJSON(message.right) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseNonExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.left = object.left !== undefined && object.left !== null ? exports.ExistenceProof.fromPartial(object.left) : undefined;\n    message.right = object.right !== undefined && object.right !== null ? exports.ExistenceProof.fromPartial(object.right) : undefined;\n    return message;\n  }\n\n};\nconst baseCommitmentProof = {};\nexports.CommitmentProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.exist !== undefined) {\n      exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.nonexist !== undefined) {\n      exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.batch !== undefined) {\n      exports.BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.compressed !== undefined) {\n      exports.CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommitmentProof);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.batch = exports.BatchProof.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.compressed = exports.CompressedBatchProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommitmentProof);\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromJSON(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromJSON(object.nonexist) : undefined;\n    message.batch = object.batch !== undefined && object.batch !== null ? exports.BatchProof.fromJSON(object.batch) : undefined;\n    message.compressed = object.compressed !== undefined && object.compressed !== null ? exports.CompressedBatchProof.fromJSON(object.compressed) : undefined;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n    message.batch !== undefined && (obj.batch = message.batch ? exports.BatchProof.toJSON(message.batch) : undefined);\n    message.compressed !== undefined && (obj.compressed = message.compressed ? exports.CompressedBatchProof.toJSON(message.compressed) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCommitmentProof);\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : undefined;\n    message.batch = object.batch !== undefined && object.batch !== null ? exports.BatchProof.fromPartial(object.batch) : undefined;\n    message.compressed = object.compressed !== undefined && object.compressed !== null ? exports.CompressedBatchProof.fromPartial(object.compressed) : undefined;\n    return message;\n  }\n\n};\nconst baseLeafOp = {\n  hash: 0,\n  prehashKey: 0,\n  prehashValue: 0,\n  length: 0\n};\nexports.LeafOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.hash !== 0) {\n      writer.uint32(8).int32(message.hash);\n    }\n\n    if (message.prehashKey !== 0) {\n      writer.uint32(16).int32(message.prehashKey);\n    }\n\n    if (message.prehashValue !== 0) {\n      writer.uint32(24).int32(message.prehashValue);\n    }\n\n    if (message.length !== 0) {\n      writer.uint32(32).int32(message.length);\n    }\n\n    if (message.prefix.length !== 0) {\n      writer.uint32(42).bytes(message.prefix);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseLeafOp);\n    message.prefix = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.int32();\n          break;\n\n        case 2:\n          message.prehashKey = reader.int32();\n          break;\n\n        case 3:\n          message.prehashValue = reader.int32();\n          break;\n\n        case 4:\n          message.length = reader.int32();\n          break;\n\n        case 5:\n          message.prefix = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseLeafOp);\n    message.hash = object.hash !== undefined && object.hash !== null ? hashOpFromJSON(object.hash) : 0;\n    message.prehashKey = object.prehashKey !== undefined && object.prehashKey !== null ? hashOpFromJSON(object.prehashKey) : 0;\n    message.prehashValue = object.prehashValue !== undefined && object.prehashValue !== null ? hashOpFromJSON(object.prehashValue) : 0;\n    message.length = object.length !== undefined && object.length !== null ? lengthOpFromJSON(object.length) : 0;\n    message.prefix = object.prefix !== undefined && object.prefix !== null ? bytesFromBase64(object.prefix) : new Uint8Array();\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    message.prehashKey !== undefined && (obj.prehashKey = hashOpToJSON(message.prehashKey));\n    message.prehashValue !== undefined && (obj.prehashValue = hashOpToJSON(message.prehashValue));\n    message.length !== undefined && (obj.length = lengthOpToJSON(message.length));\n    message.prefix !== undefined && (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n\n    const message = Object.assign({}, baseLeafOp);\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;\n    message.prehashKey = (_b = object.prehashKey) !== null && _b !== void 0 ? _b : 0;\n    message.prehashValue = (_c = object.prehashValue) !== null && _c !== void 0 ? _c : 0;\n    message.length = (_d = object.length) !== null && _d !== void 0 ? _d : 0;\n    message.prefix = (_e = object.prefix) !== null && _e !== void 0 ? _e : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseInnerOp = {\n  hash: 0\n};\nexports.InnerOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.hash !== 0) {\n      writer.uint32(8).int32(message.hash);\n    }\n\n    if (message.prefix.length !== 0) {\n      writer.uint32(18).bytes(message.prefix);\n    }\n\n    if (message.suffix.length !== 0) {\n      writer.uint32(26).bytes(message.suffix);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseInnerOp);\n    message.prefix = new Uint8Array();\n    message.suffix = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.int32();\n          break;\n\n        case 2:\n          message.prefix = reader.bytes();\n          break;\n\n        case 3:\n          message.suffix = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseInnerOp);\n    message.hash = object.hash !== undefined && object.hash !== null ? hashOpFromJSON(object.hash) : 0;\n    message.prefix = object.prefix !== undefined && object.prefix !== null ? bytesFromBase64(object.prefix) : new Uint8Array();\n    message.suffix = object.suffix !== undefined && object.suffix !== null ? bytesFromBase64(object.suffix) : new Uint8Array();\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    message.prefix !== undefined && (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n    message.suffix !== undefined && (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseInnerOp);\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;\n    message.prefix = (_b = object.prefix) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.suffix = (_c = object.suffix) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseProofSpec = {\n  maxDepth: 0,\n  minDepth: 0\n};\nexports.ProofSpec = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.leafSpec !== undefined) {\n      exports.LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.innerSpec !== undefined) {\n      exports.InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.maxDepth !== 0) {\n      writer.uint32(24).int32(message.maxDepth);\n    }\n\n    if (message.minDepth !== 0) {\n      writer.uint32(32).int32(message.minDepth);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofSpec);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.leafSpec = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.innerSpec = exports.InnerSpec.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.maxDepth = reader.int32();\n          break;\n\n        case 4:\n          message.minDepth = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofSpec);\n    message.leafSpec = object.leafSpec !== undefined && object.leafSpec !== null ? exports.LeafOp.fromJSON(object.leafSpec) : undefined;\n    message.innerSpec = object.innerSpec !== undefined && object.innerSpec !== null ? exports.InnerSpec.fromJSON(object.innerSpec) : undefined;\n    message.maxDepth = object.maxDepth !== undefined && object.maxDepth !== null ? Number(object.maxDepth) : 0;\n    message.minDepth = object.minDepth !== undefined && object.minDepth !== null ? Number(object.minDepth) : 0;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.leafSpec !== undefined && (obj.leafSpec = message.leafSpec ? exports.LeafOp.toJSON(message.leafSpec) : undefined);\n    message.innerSpec !== undefined && (obj.innerSpec = message.innerSpec ? exports.InnerSpec.toJSON(message.innerSpec) : undefined);\n    message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n    message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b;\n\n    const message = Object.assign({}, baseProofSpec);\n    message.leafSpec = object.leafSpec !== undefined && object.leafSpec !== null ? exports.LeafOp.fromPartial(object.leafSpec) : undefined;\n    message.innerSpec = object.innerSpec !== undefined && object.innerSpec !== null ? exports.InnerSpec.fromPartial(object.innerSpec) : undefined;\n    message.maxDepth = (_a = object.maxDepth) !== null && _a !== void 0 ? _a : 0;\n    message.minDepth = (_b = object.minDepth) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n\n};\nconst baseInnerSpec = {\n  childOrder: 0,\n  childSize: 0,\n  minPrefixLength: 0,\n  maxPrefixLength: 0,\n  hash: 0\n};\nexports.InnerSpec = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    writer.uint32(10).fork();\n\n    for (const v of message.childOrder) {\n      writer.int32(v);\n    }\n\n    writer.ldelim();\n\n    if (message.childSize !== 0) {\n      writer.uint32(16).int32(message.childSize);\n    }\n\n    if (message.minPrefixLength !== 0) {\n      writer.uint32(24).int32(message.minPrefixLength);\n    }\n\n    if (message.maxPrefixLength !== 0) {\n      writer.uint32(32).int32(message.maxPrefixLength);\n    }\n\n    if (message.emptyChild.length !== 0) {\n      writer.uint32(42).bytes(message.emptyChild);\n    }\n\n    if (message.hash !== 0) {\n      writer.uint32(48).int32(message.hash);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseInnerSpec);\n    message.childOrder = [];\n    message.emptyChild = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) {\n              message.childOrder.push(reader.int32());\n            }\n          } else {\n            message.childOrder.push(reader.int32());\n          }\n\n          break;\n\n        case 2:\n          message.childSize = reader.int32();\n          break;\n\n        case 3:\n          message.minPrefixLength = reader.int32();\n          break;\n\n        case 4:\n          message.maxPrefixLength = reader.int32();\n          break;\n\n        case 5:\n          message.emptyChild = reader.bytes();\n          break;\n\n        case 6:\n          message.hash = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    var _a;\n\n    const message = Object.assign({}, baseInnerSpec);\n    message.childOrder = ((_a = object.childOrder) !== null && _a !== void 0 ? _a : []).map(e => Number(e));\n    message.childSize = object.childSize !== undefined && object.childSize !== null ? Number(object.childSize) : 0;\n    message.minPrefixLength = object.minPrefixLength !== undefined && object.minPrefixLength !== null ? Number(object.minPrefixLength) : 0;\n    message.maxPrefixLength = object.maxPrefixLength !== undefined && object.maxPrefixLength !== null ? Number(object.maxPrefixLength) : 0;\n    message.emptyChild = object.emptyChild !== undefined && object.emptyChild !== null ? bytesFromBase64(object.emptyChild) : new Uint8Array();\n    message.hash = object.hash !== undefined && object.hash !== null ? hashOpFromJSON(object.hash) : 0;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.childOrder) {\n      obj.childOrder = message.childOrder.map(e => e);\n    } else {\n      obj.childOrder = [];\n    }\n\n    message.childSize !== undefined && (obj.childSize = message.childSize);\n    message.minPrefixLength !== undefined && (obj.minPrefixLength = message.minPrefixLength);\n    message.maxPrefixLength !== undefined && (obj.maxPrefixLength = message.maxPrefixLength);\n    message.emptyChild !== undefined && (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n\n    const message = Object.assign({}, baseInnerSpec);\n    message.childOrder = ((_a = object.childOrder) === null || _a === void 0 ? void 0 : _a.map(e => e)) || [];\n    message.childSize = (_b = object.childSize) !== null && _b !== void 0 ? _b : 0;\n    message.minPrefixLength = (_c = object.minPrefixLength) !== null && _c !== void 0 ? _c : 0;\n    message.maxPrefixLength = (_d = object.maxPrefixLength) !== null && _d !== void 0 ? _d : 0;\n    message.emptyChild = (_e = object.emptyChild) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.hash = (_f = object.hash) !== null && _f !== void 0 ? _f : 0;\n    return message;\n  }\n\n};\nconst baseBatchProof = {};\nexports.BatchProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.entries) {\n      exports.BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseBatchProof);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.entries.push(exports.BatchEntry.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    var _a;\n\n    const message = Object.assign({}, baseBatchProof);\n    message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map(e => exports.BatchEntry.fromJSON(e));\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.BatchEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseBatchProof);\n    message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map(e => exports.BatchEntry.fromPartial(e))) || [];\n    return message;\n  }\n\n};\nconst baseBatchEntry = {};\nexports.BatchEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.exist !== undefined) {\n      exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.nonexist !== undefined) {\n      exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseBatchEntry);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseBatchEntry);\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromJSON(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromJSON(object.nonexist) : undefined;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseBatchEntry);\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : undefined;\n    return message;\n  }\n\n};\nconst baseCompressedBatchProof = {};\nexports.CompressedBatchProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.entries) {\n      exports.CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    for (const v of message.lookupInners) {\n      exports.InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedBatchProof);\n    message.entries = [];\n    message.lookupInners = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.entries.push(exports.CompressedBatchEntry.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.lookupInners.push(exports.InnerOp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    var _a, _b;\n\n    const message = Object.assign({}, baseCompressedBatchProof);\n    message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map(e => exports.CompressedBatchEntry.fromJSON(e));\n    message.lookupInners = ((_b = object.lookupInners) !== null && _b !== void 0 ? _b : []).map(e => exports.InnerOp.fromJSON(e));\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.CompressedBatchEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n\n    if (message.lookupInners) {\n      obj.lookupInners = message.lookupInners.map(e => e ? exports.InnerOp.toJSON(e) : undefined);\n    } else {\n      obj.lookupInners = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b;\n\n    const message = Object.assign({}, baseCompressedBatchProof);\n    message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map(e => exports.CompressedBatchEntry.fromPartial(e))) || [];\n    message.lookupInners = ((_b = object.lookupInners) === null || _b === void 0 ? void 0 : _b.map(e => exports.InnerOp.fromPartial(e))) || [];\n    return message;\n  }\n\n};\nconst baseCompressedBatchEntry = {};\nexports.CompressedBatchEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.exist !== undefined) {\n      exports.CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.nonexist !== undefined) {\n      exports.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedBatchEntry);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.nonexist = exports.CompressedNonExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompressedBatchEntry);\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.CompressedExistenceProof.fromJSON(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.CompressedNonExistenceProof.fromJSON(object.nonexist) : undefined;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.CompressedExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.CompressedNonExistenceProof.toJSON(message.nonexist) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCompressedBatchEntry);\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.CompressedExistenceProof.fromPartial(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.CompressedNonExistenceProof.fromPartial(object.nonexist) : undefined;\n    return message;\n  }\n\n};\nconst baseCompressedExistenceProof = {\n  path: 0\n};\nexports.CompressedExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n\n    if (message.leaf !== undefined) {\n      exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n    }\n\n    writer.uint32(34).fork();\n\n    for (const v of message.path) {\n      writer.int32(v);\n    }\n\n    writer.ldelim();\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedExistenceProof);\n    message.path = [];\n    message.key = new Uint8Array();\n    message.value = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.value = reader.bytes();\n          break;\n\n        case 3:\n          message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) {\n              message.path.push(reader.int32());\n            }\n          } else {\n            message.path.push(reader.int32());\n          }\n\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    var _a;\n\n    const message = Object.assign({}, baseCompressedExistenceProof);\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    message.value = object.value !== undefined && object.value !== null ? bytesFromBase64(object.value) : new Uint8Array();\n    message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromJSON(object.leaf) : undefined;\n    message.path = ((_a = object.path) !== null && _a !== void 0 ? _a : []).map(e => Number(e));\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n\n    if (message.path) {\n      obj.path = message.path.map(e => e);\n    } else {\n      obj.path = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseCompressedExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : undefined;\n    message.path = ((_c = object.path) === null || _c === void 0 ? void 0 : _c.map(e => e)) || [];\n    return message;\n  }\n\n};\nconst baseCompressedNonExistenceProof = {};\nexports.CompressedNonExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.left !== undefined) {\n      exports.CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.right !== undefined) {\n      exports.CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedNonExistenceProof);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.left = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.right = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompressedNonExistenceProof);\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    message.left = object.left !== undefined && object.left !== null ? exports.CompressedExistenceProof.fromJSON(object.left) : undefined;\n    message.right = object.right !== undefined && object.right !== null ? exports.CompressedExistenceProof.fromJSON(object.right) : undefined;\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.left !== undefined && (obj.left = message.left ? exports.CompressedExistenceProof.toJSON(message.left) : undefined);\n    message.right !== undefined && (obj.right = message.right ? exports.CompressedExistenceProof.toJSON(message.right) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseCompressedNonExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.left = object.left !== undefined && object.left !== null ? exports.CompressedExistenceProof.fromPartial(object.left) : undefined;\n    message.right = object.right !== undefined && object.right !== null ? exports.CompressedExistenceProof.fromPartial(object.right) : undefined;\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","HashOp","hashOpFromJSON","object","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","UNRECOGNIZED","hashOpToJSON","LengthOp","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","encode","message","writer","minimal_1","Writer","create","key","length","uint32","bytes","value","leaf","undefined","fork","ldelim","v","path","decode","input","reader","Reader","end","len","pos","Object","Uint8Array","tag","push","skipType","fromJSON","bytesFromBase64","_a","map","e","toJSON","obj","base64FromBytes","fromPartial","_b","_c","baseNonExistenceProof","left","right","baseCommitmentProof","exist","nonexist","batch","compressed","baseLeafOp","hash","prehashKey","prehashValue","int32","prefix","_d","_e","baseInnerOp","suffix","baseProofSpec","maxDepth","minDepth","leafSpec","innerSpec","Number","baseInnerSpec","childOrder","childSize","minPrefixLength","maxPrefixLength","emptyChild","end2","_f","baseBatchProof","entries","baseBatchEntry","baseCompressedBatchProof","lookupInners","baseCompressedBatchEntry","baseCompressedExistenceProof","baseCompressedNonExistenceProof","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","String","fromCharCode","join","util","Long","long_1","configure"],"sourceRoot":"","sources":["../../src/confio/proofs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}