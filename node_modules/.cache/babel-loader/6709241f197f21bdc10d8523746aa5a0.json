{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStakingAminoConverters = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst amino_1 = require(\"@cosmjs/amino\");\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nconst utils_1 = require(\"@cosmjs/utils\");\n\nfunction isAminoMsgCreateValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgCreateValidator\";\n}\n\nexports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;\n\nfunction isAminoMsgEditValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgEditValidator\";\n}\n\nexports.isAminoMsgEditValidator = isAminoMsgEditValidator;\n\nfunction isAminoMsgDelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgDelegate\";\n}\n\nexports.isAminoMsgDelegate = isAminoMsgDelegate;\n\nfunction isAminoMsgBeginRedelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgBeginRedelegate\";\n}\n\nexports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;\n\nfunction isAminoMsgUndelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgUndelegate\";\n}\n\nexports.isAminoMsgUndelegate = isAminoMsgUndelegate;\n\nfunction createStakingAminoConverters(prefix) {\n  return {\n    \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n      aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n      toAmino: _ref => {\n        let {\n          delegatorAddress,\n          validatorSrcAddress,\n          validatorDstAddress,\n          amount\n        } = _ref;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_src_address: validatorSrcAddress,\n          validator_dst_address: validatorDstAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          delegator_address,\n          validator_src_address,\n          validator_dst_address,\n          amount\n        } = _ref2;\n        return {\n          delegatorAddress: delegator_address,\n          validatorSrcAddress: validator_src_address,\n          validatorDstAddress: validator_dst_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n      aminoType: \"cosmos-sdk/MsgCreateValidator\",\n      toAmino: _ref3 => {\n        let {\n          description,\n          commission,\n          minSelfDelegation,\n          delegatorAddress,\n          validatorAddress,\n          pubkey,\n          value\n        } = _ref3;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        (0, utils_1.assertDefinedAndNotNull)(commission, \"missing commission\");\n        (0, utils_1.assertDefinedAndNotNull)(pubkey, \"missing pubkey\");\n        (0, utils_1.assertDefinedAndNotNull)(value, \"missing value\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            max_rate: commission.maxRate,\n            max_change_rate: commission.maxChangeRate\n          },\n          min_self_delegation: minSelfDelegation,\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          pubkey: (0, amino_1.encodeBech32Pubkey)({\n            type: \"tendermint/PubKeySecp256k1\",\n            value: (0, encoding_1.toBase64)(pubkey.value)\n          }, prefix),\n          value: value\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          description,\n          commission,\n          min_self_delegation,\n          delegator_address,\n          validator_address,\n          pubkey,\n          value\n        } = _ref4;\n        const decodedPubkey = (0, amino_1.decodeBech32Pubkey)(pubkey);\n\n        if (decodedPubkey.type !== \"tendermint/PubKeySecp256k1\") {\n          throw new Error(\"Only Secp256k1 public keys are supported\");\n        }\n\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            maxRate: commission.max_rate,\n            maxChangeRate: commission.max_change_rate\n          },\n          minSelfDelegation: min_self_delegation,\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          pubkey: {\n            typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n            value: (0, encoding_1.fromBase64)(decodedPubkey.value)\n          },\n          value: value\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgDelegate\": {\n      aminoType: \"cosmos-sdk/MsgDelegate\",\n      toAmino: _ref5 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref5;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref6 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref6;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n      aminoType: \"cosmos-sdk/MsgEditValidator\",\n      toAmino: _ref7 => {\n        let {\n          description,\n          commissionRate,\n          minSelfDelegation,\n          validatorAddress\n        } = _ref7;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission_rate: commissionRate,\n          min_self_delegation: minSelfDelegation,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref8 => {\n        let {\n          description,\n          commission_rate,\n          min_self_delegation,\n          validator_address\n        } = _ref8;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commissionRate: commission_rate,\n          minSelfDelegation: min_self_delegation,\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n      aminoType: \"cosmos-sdk/MsgUndelegate\",\n      toAmino: _ref9 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref9;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref10 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref10;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    }\n  };\n}\n\nexports.createStakingAminoConverters = createStakingAminoConverters;","map":{"version":3,"mappings":"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","names":["isAminoMsgCreateValidator","msg","type","exports","isAminoMsgEditValidator","isAminoMsgDelegate","isAminoMsgBeginRedelegate","isAminoMsgUndelegate","createStakingAminoConverters","prefix","aminoType","toAmino","delegatorAddress","validatorSrcAddress","validatorDstAddress","amount","delegator_address","validator_src_address","validator_dst_address","fromAmino","description","commission","minSelfDelegation","validatorAddress","pubkey","value","moniker","identity","website","security_contact","securityContact","details","rate","max_rate","maxRate","max_change_rate","maxChangeRate","min_self_delegation","validator_address","decodedPubkey","Error","typeUrl","commissionRate","commission_rate"],"sourceRoot":"","sources":["../../../src/modules/staking/aminomessages.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}