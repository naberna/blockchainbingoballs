{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeSignature = exports.encodeSecp256k1Signature = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nconst encoding_2 = require(\"./encoding\");\n\nconst pubkeys_1 = require(\"./pubkeys\");\n/**\n * Takes a binary pubkey and signature to create a signature object\n *\n * @param pubkey a compressed secp256k1 public key\n * @param signature a 64 byte fixed length representation of secp256k1 signature components r and s\n */\n\n\nfunction encodeSecp256k1Signature(pubkey, signature) {\n  if (signature.length !== 64) {\n    throw new Error(\"Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.\");\n  }\n\n  return {\n    pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),\n    signature: (0, encoding_1.toBase64)(signature)\n  };\n}\n\nexports.encodeSecp256k1Signature = encodeSecp256k1Signature;\n\nfunction decodeSignature(signature) {\n  switch (signature.pub_key.type) {\n    // Note: please don't add cases here without writing additional unit tests\n    case pubkeys_1.pubkeyType.secp256k1:\n      return {\n        pubkey: (0, encoding_1.fromBase64)(signature.pub_key.value),\n        signature: (0, encoding_1.fromBase64)(signature.signature)\n      };\n\n    default:\n      throw new Error(\"Unsupported pubkey type\");\n  }\n}\n\nexports.decodeSignature = decodeSignature;","map":{"version":3,"mappings":";;;;;;AAAA;;AACA;;AAEA;;AACA;AAOA;;;;;;;;AAMA,SAAgBA,wBAAhB,CAAyCC,MAAzC,EAA6DC,SAA7D,EAAkF;EAChF,IAAIA,SAAS,CAACC,MAAV,KAAqB,EAAzB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CACJ,kIADI,CAAN;EAGD;;EAED,OAAO;IACLC,OAAO,EAAE,sCAAsBJ,MAAtB,CADJ;IAELC,SAAS,EAAE,yBAASA,SAAT;EAFN,CAAP;AAID;;AAXDI;;AAaA,SAAgBC,eAAhB,CAAgCL,SAAhC,EAAuD;EAIrD,QAAQA,SAAS,CAACG,OAAV,CAAkBG,IAA1B;IACE;IACA,KAAKC,qBAAWC,SAAhB;MACE,OAAO;QACLT,MAAM,EAAE,2BAAWC,SAAS,CAACG,OAAV,CAAkBM,KAA7B,CADH;QAELT,SAAS,EAAE,2BAAWA,SAAS,CAACA,SAArB;MAFN,CAAP;;IAIF;MACE,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;EARJ;AAUD;;AAdDE","names":["encodeSecp256k1Signature","pubkey","signature","length","Error","pub_key","exports","decodeSignature","type","pubkeys_1","secp256k1","value"],"sourceRoot":"","sources":["../src/signature.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}