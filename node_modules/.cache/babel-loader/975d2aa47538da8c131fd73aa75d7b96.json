{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupAuthExtension = void 0;\n\nconst query_1 = require(\"cosmjs-types/cosmos/auth/v1beta1/query\");\n\nconst queryclient_1 = require(\"../../queryclient\");\n\nfunction setupAuthExtension(base) {\n  const rpc = (0, queryclient_1.createProtobufRpcClient)(base); // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    auth: {\n      account: async address => {\n        const {\n          account\n        } = await queryService.Account({\n          address: address\n        });\n        return account !== null && account !== void 0 ? account : null;\n      }\n    }\n  };\n}\n\nexports.setupAuthExtension = setupAuthExtension;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA;;AAeA,SAAgBA,kBAAhB,CAAmCC,IAAnC,EAAoD;EAClD,MAAMC,GAAG,GAAG,2CAAwBD,IAAxB,CAAZ,CADkD,CAElD;EACA;;EACA,MAAME,YAAY,GAAG,IAAIC,uBAAJ,CAAoBF,GAApB,CAArB;EAEA,OAAO;IACLG,IAAI,EAAE;MACJC,OAAO,EAAE,MAAOC,OAAP,IAA0B;QACjC,MAAM;UAAED;QAAF,IAAc,MAAMH,YAAY,CAACK,OAAb,CAAqB;UAAED,OAAO,EAAEA;QAAX,CAArB,CAA1B;QACA,OAAOD,OAAO,SAAP,WAAO,WAAP,aAAW,IAAlB;MACD;IAJG;EADD,CAAP;AAQD;;AAdDG","names":["setupAuthExtension","base","rpc","queryService","query_1","auth","account","address","Account","exports"],"sourceRoot":"","sources":["../../../src/modules/auth/queries.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}